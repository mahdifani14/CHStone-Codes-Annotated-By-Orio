//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Apr 19 18:27:07 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
A_local_mem_dual_port         1                             
imem_local_mem_dual_port      1                             
main_0_dmem_local_mem_dual_port1                             
main_0_reg_local_mem_dual_port2                             
outData_local_mem_dual_port   1                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__2
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 0, i32* %s.i.0, al... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 0, i32* %s.i.0, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %s.i.0, al... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__3
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep14... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep14... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep14... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__3
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep13... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %scevgep12... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep13... (idx: 0)        6                             10                            
  store i32 0, i32* %scevgep12... (idx: 1)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep13... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep12... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep13... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 2)
  store i32 0, i32* %scevgep12... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__3
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep11... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %scevgep11... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep10... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %scevgep10... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep11... (idx: 0)        7                             6                             
  store i32 0, i32* %scevgep10... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep11... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep10... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep11... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 3)
  store i32 0, i32* %scevgep10... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__8
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep6,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %scevgep6,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep6,... (idx: 0)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep6,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep6,... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__9
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 2147479548, i32* %... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 2147479548, i32* %... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 2147479548, i32* %... (idx: 0)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 2147479548, i32* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 2147479548, i32* %... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__15
Binding functional unit type: A_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_A_local_mem_dual_port_0  
  %16 = load i32* %scevgep4, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_A_local_mem_dual_port_0  
  %16 = load i32* %scevgep4, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load i32* %scevgep4, a... (idx: 0) -> main_A_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__15
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %16, i32* %scevgep... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 %16, i32* %scevgep... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 %16, i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %16, i32* %scevgep... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__18
Binding functional unit type: imem_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_imem_local_mem_dual_port_0
  %23 = load i32* %22, align 4 (idx: 0)           10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_imem_local_mem_dual_port_0
  %23 = load i32* %22, align 4 (idx: 0)           1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* %22, align 4 (idx: 0) -> main_imem_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__36
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %38 = load i32* %37, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %38 = load i32* %37, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %40 = load i32* %39, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %40 = load i32* %39, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %38 = load i32* %37, align 4 (idx: 0)           9                             8                             
  %40 = load i32* %39, align 4 (idx: 1)           9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %38 = load i32* %37, align 4 (idx: 0)           1                             0                             
  %40 = load i32* %39, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load i32* %37, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 5)
  %40 = load i32* %39, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__36
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %41, i32* %42, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %41, i32* %42, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %41, i32* %42, ali... (idx: 0)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %41, i32* %42, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %41, i32* %42, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__43
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load i32* %44, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %45 = load i32* %44, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %47 = load i32* %46, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %47 = load i32* %46, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %45 = load i32* %44, align 4 (idx: 0)           10                            11                            
  %47 = load i32* %46, align 4 (idx: 1)           10                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %45 = load i32* %44, align 4 (idx: 0)           1                             0                             
  %47 = load i32* %46, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load i32* %44, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 6)
  %47 = load i32* %46, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__43
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %48, i32* %49, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %48, i32* %49, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %48, i32* %49, ali... (idx: 0)        21                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %48, i32* %49, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %48, i32* %49, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__50
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* %51, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %52 = load i32* %51, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %55 = load i32* %54, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %55 = load i32* %54, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %52 = load i32* %51, align 4 (idx: 0)           13                            12                            
  %55 = load i32* %54, align 4 (idx: 1)           13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %52 = load i32* %51, align 4 (idx: 0)           1                             0                             
  %55 = load i32* %54, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* %51, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 9)
  %55 = load i32* %54, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__61
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %63 = load i32* %62, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %63 = load i32* %62, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %66 = load i32* %65, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %66 = load i32* %65, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %63 = load i32* %62, align 4 (idx: 0)           14                            13                            
  %66 = load i32* %65, align 4 (idx: 1)           14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %63 = load i32* %62, align 4 (idx: 0)           1                             0                             
  %66 = load i32* %65, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = load i32* %62, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 10)
  %66 = load i32* %65, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__72
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Hi.0, i32* %73, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %Hi.0, i32* %73, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Hi.0, i32* %73, a... (idx: 0)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Hi.0, i32* %73, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Hi.0, i32* %73, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB__74
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Lo.0, i32* %75, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %Lo.0, i32* %75, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Lo.0, i32* %75, a... (idx: 0)        25                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Lo.0, i32* %75, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Lo.0, i32* %75, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB__76
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %78 = load i32* %77, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %78 = load i32* %77, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %80 = load i32* %79, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %80 = load i32* %79, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %78 = load i32* %77, align 4 (idx: 0)           17                            16                            
  %80 = load i32* %79, align 4 (idx: 1)           17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %78 = load i32* %77, align 4 (idx: 0)           1                             0                             
  %80 = load i32* %79, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = load i32* %77, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 13)
  %80 = load i32* %79, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__76
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %81, i32* %82, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %81, i32* %82, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %81, i32* %82, ali... (idx: 0)        28                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %81, i32* %82, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %81, i32* %82, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB__83
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %85 = load i32* %84, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %85 = load i32* %84, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %87 = load i32* %86, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %87 = load i32* %86, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %85 = load i32* %84, align 4 (idx: 0)           18                            19                            
  %87 = load i32* %86, align 4 (idx: 1)           18                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %85 = load i32* %84, align 4 (idx: 0)           1                             0                             
  %87 = load i32* %86, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = load i32* %84, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 14)
  %87 = load i32* %86, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_main_BB__83
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %88, i32* %89, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %88, i32* %89, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %88, i32* %89, ali... (idx: 0)        29                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %88, i32* %89, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %88, i32* %89, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB__90
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* %91, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %92 = load i32* %91, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %94 = load i32* %93, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %94 = load i32* %93, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %92 = load i32* %91, align 4 (idx: 0)           21                            20                            
  %94 = load i32* %93, align 4 (idx: 1)           21                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %92 = load i32* %91, align 4 (idx: 0)           1                             0                             
  %94 = load i32* %93, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* %91, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 17)
  %94 = load i32* %93, align 4 (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB__90
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %95, i32* %96, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %95, i32* %96, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %95, i32* %96, ali... (idx: 0)        32                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %95, i32* %96, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %95, i32* %96, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB__97
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %99 = load i32* %98, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %99 = load i32* %98, align 4 can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %99 = load i32* %98, align 4 (idx: 0)           22                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %99 = load i32* %98, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i32* %98, align 4 (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__97
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %100, i32* %101, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %100, i32* %101, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %100, i32* %101, a... (idx: 0)        33                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %100, i32* %101, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %100, i32* %101, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB__102
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %104 = load i32* %103, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %104 = load i32* %103, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %104 = load i32* %103, align... (idx: 0)        25                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %104 = load i32* %103, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %104 = load i32* %103, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_main_BB__102
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %105, i32* %106, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %105, i32* %106, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %105, i32* %106, a... (idx: 0)        35                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %105, i32* %106, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %105, i32* %106, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_main_BB__107
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %109 = load i32* %108, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %109 = load i32* %108, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %111 = load i32* %110, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %111 = load i32* %110, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %109 = load i32* %108, align... (idx: 0)        25                            26                            
  %111 = load i32* %110, align... (idx: 1)        25                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %109 = load i32* %108, align... (idx: 0)        1                             0                             
  %111 = load i32* %110, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = load i32* %108, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 21)
  %111 = load i32* %110, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_main_BB__107
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %112, i32* %113, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %112, i32* %113, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %112, i32* %113, a... (idx: 0)        36                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %112, i32* %113, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %112, i32* %113, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 23)
State: LEGUP_F_main_BB__114
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %118 = load i32* %117, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %118 = load i32* %117, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %116 = load i32* %115, align... (idx: 0)        28                            27                            
  %118 = load i32* %117, align... (idx: 1)        28                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %116 = load i32* %115, align... (idx: 0)        1                             0                             
  %118 = load i32* %117, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = load i32* %115, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 24)
  %118 = load i32* %117, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB__114
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %119, i32* %120, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %119, i32* %120, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %119, i32* %120, a... (idx: 0)        39                            38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %119, i32* %120, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %119, i32* %120, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_main_BB__121
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %123 = load i32* %122, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %123 = load i32* %122, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %125 = load i32* %124, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %125 = load i32* %124, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %123 = load i32* %122, align... (idx: 0)        29                            30                            
  %125 = load i32* %124, align... (idx: 1)        29                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %123 = load i32* %122, align... (idx: 0)        1                             0                             
  %125 = load i32* %124, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %123 = load i32* %122, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 25)
  %125 = load i32* %124, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_main_BB__121
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %127, i32* %128, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %127, i32* %128, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %127, i32* %128, a... (idx: 0)        40                            41                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %127, i32* %128, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %127, i32* %128, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 27)
State: LEGUP_F_main_BB__129
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %131 = load i32* %130, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %131 = load i32* %130, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %133 = load i32* %132, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %133 = load i32* %132, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %131 = load i32* %130, align... (idx: 0)        32                            31                            
  %133 = load i32* %132, align... (idx: 1)        32                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %131 = load i32* %130, align... (idx: 0)        1                             0                             
  %133 = load i32* %132, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %131 = load i32* %130, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 28)
  %133 = load i32* %132, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB__129
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %135, i32* %136, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %135, i32* %136, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %135, i32* %136, a... (idx: 0)        43                            42                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %135, i32* %136, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %135, i32* %136, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_main_BB__137
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %139 = load i32* %138, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %139 = load i32* %138, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %139 = load i32* %138, align... (idx: 0)        33                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %139 = load i32* %138, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %139 = load i32* %138, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 29)
State: LEGUP_F_main_BB__143
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %24, i32* %14, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %24, i32* %14, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %24, i32* %14, ali... (idx: 0)        44                            44                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %24, i32* %14, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %24, i32* %14, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 31)
State: LEGUP_F_main_BB__151
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %153 = load i32* %152, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %153 = load i32* %152, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %153 = load i32* %152, align... (idx: 0)        36                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %153 = load i32* %152, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %153 = load i32* %152, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB__151
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %155, i32* %156, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %155, i32* %156, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %155, i32* %156, a... (idx: 0)        46                            45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %155, i32* %156, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %155, i32* %156, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 32)
State: LEGUP_F_main_BB__157
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load i32* %158, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %159 = load i32* %158, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %159 = load i32* %158, align... (idx: 0)        36                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %159 = load i32* %158, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load i32* %158, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 32)
State: LEGUP_F_main_BB__157
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %161, i32* %162, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %161, i32* %162, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %161, i32* %162, a... (idx: 0)        47                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %161, i32* %162, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %161, i32* %162, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 34)
State: LEGUP_F_main_BB__163
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %165 = load i32* %164, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %165 = load i32* %164, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %165 = load i32* %164, align... (idx: 0)        39                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %165 = load i32* %164, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %165 = load i32* %164, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 33)
State: LEGUP_F_main_BB__163
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %167, i32* %168, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %167, i32* %168, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %167, i32* %168, a... (idx: 0)        49                            48                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %167, i32* %168, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %167, i32* %168, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 35)
State: LEGUP_F_main_BB__169
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %171 = load i32* %170, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %171 = load i32* %170, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %171 = load i32* %170, align... (idx: 0)        39                            40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %171 = load i32* %170, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %171 = load i32* %170, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 35)
State: LEGUP_F_main_BB__169
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %173, i32* %174, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %173, i32* %174, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %173, i32* %174, a... (idx: 0)        50                            50                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %173, i32* %174, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %173, i32* %174, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 37)
State: LEGUP_F_main_BB__175
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %177 = load i32* %176, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %177 = load i32* %176, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %177 = load i32* %176, align... (idx: 0)        42                            40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %177 = load i32* %176, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %177 = load i32* %176, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 36)
State: LEGUP_F_main_BB__175
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %182 = load i32* %181, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
                                                  main_main_0_dmem_local_mem_dual_port_0
  %182 = load i32* %181, align... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  %182 = load i32* %181, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %182 = load i32* %181, align... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__175
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %182, i32* %183, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %182, i32* %183, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %182, i32* %183, a... (idx: 0)        52                            51                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %182, i32* %183, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %182, i32* %183, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 38)
State: LEGUP_F_main_BB__184
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %186 = load i32* %185, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %186 = load i32* %185, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %186 = load i32* %185, align... (idx: 0)        42                            43                            
  %188 = load i32* %187, align... (idx: 1)        42                            43                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %186 = load i32* %185, align... (idx: 0)        1                             0                             
  %188 = load i32* %187, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %186 = load i32* %185, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 38)
  %188 = load i32* %187, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 39)
State: LEGUP_F_main_BB__184
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %186, i32* %192, a... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 %186, i32* %192, a... (idx: 0)        19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  store i32 %186, i32* %192, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %186, i32* %192, a... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__193
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %sext4, i32* %194,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %sext4, i32* %194,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %sext4, i32* %194,... (idx: 0)        53                            54                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %sext4, i32* %194,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %sext4, i32* %194,... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 40)
State: LEGUP_F_main_BB__195
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %197 = load i32* %196, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %197 = load i32* %196, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %199 = load i32* %198, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %199 = load i32* %198, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %197 = load i32* %196, align... (idx: 0)        45                            44                            
  %199 = load i32* %198, align... (idx: 1)        45                            44                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %197 = load i32* %196, align... (idx: 0)        1                             0                             
  %199 = load i32* %198, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %197 = load i32* %196, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 41)
  %199 = load i32* %198, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 40)
State: LEGUP_F_main_BB__204
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %206 = load i32* %205, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %206 = load i32* %205, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %208 = load i32* %207, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %208 = load i32* %207, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %206 = load i32* %205, align... (idx: 0)        46                            45                            
  %208 = load i32* %207, align... (idx: 1)        46                            45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %206 = load i32* %205, align... (idx: 0)        1                             0                             
  %208 = load i32* %207, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %206 = load i32* %205, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 42)
  %208 = load i32* %207, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 41)
State: LEGUP_F_main_BB__213
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %215 = load i32* %214, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %215 = load i32* %214, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %215 = load i32* %214, align... (idx: 0)        47                            46                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %215 = load i32* %214, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %215 = load i32* %214, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 42)
State: LEGUP_F_main_BB__220
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %222 = load i32* %221, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %222 = load i32* %221, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %222 = load i32* %221, align... (idx: 0)        47                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %222 = load i32* %221, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %222 = load i32* %221, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 43)
State: LEGUP_F_main_BB__220
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %225, i32* %226, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %225, i32* %226, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %225, i32* %226, a... (idx: 0)        58                            57                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %225, i32* %226, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %225, i32* %226, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 44)
State: LEGUP_F_main_BB__227
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %229 = load i32* %228, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %229 = load i32* %228, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %229 = load i32* %228, align... (idx: 0)        48                            49                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %229 = load i32* %228, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %229 = load i32* %228, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 44)
State: LEGUP_F_main_BB__227
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %232, i32* %233, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %232, i32* %233, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %232, i32* %233, a... (idx: 0)        59                            59                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %232, i32* %233, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %232, i32* %233, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 46)
State: LEGUP_F_main_BB_thread
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        51                            49                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %13, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 45)
State: LEGUP_F_main_BB__234
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %13, align... can share an input with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        51                            40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %13, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 45)
State: LEGUP_F_main_BB__241
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %242 = load i32* %scevgep2, ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
                                                  main_main_0_dmem_local_mem_dual_port_0
  %242 = load i32* %scevgep2, ... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0
  %242 = load i32* %scevgep2, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %242 = load i32* %scevgep2, ... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB__241
Binding functional unit type: outData_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %243 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %243 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %243 = load i32* %scevgep, a... (idx: 0) -> main_outData_local_mem_dual_port_0 (mux inputs: 1)


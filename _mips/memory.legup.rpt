//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Wed Apr 19 18:27:07 2017
//----------------------------------------------------------------------------//

allocateRAM: @imem
Constant: 1
allocateRAM: @A
Constant: 1
allocateRAM: @outData
Constant: 1
allocating global ram: @imem
allocating global ram: @A
allocating global ram: @outData
allocateRAM: %reg
Constant: 0
allocateRAM: %dmem
Constant: 0
# of Vertices: 176
Representatives: 
1 -> 1
2 -> 2
3 -> 3
4 -> 4
5 -> 5
6 -> 6
7 -> 7
8 -> 8
9 -> 9
10 -> 10
11 -> 11
12 -> 12
13 -> 13
14 -> 14
15 -> 15
16 -> 16
17 -> 17
18 -> 18
19 -> 19
20 -> 20
21 -> 21
22 -> 22
23 -> 23
24 -> 24
25 -> 25
26 -> 26
27 -> 27
28 -> 28
29 -> 29
30 -> 30
31 -> 31
32 -> 32
33 -> 33
34 -> 34
35 -> 35
36 -> 36
37 -> 37
38 -> 38
39 -> 39
40 -> 40
41 -> 41
42 -> 42
43 -> 43
44 -> 44
45 -> 45
46 -> 46
47 -> 47
48 -> 48
49 -> 49
50 -> 50
51 -> 51
52 -> 52
53 -> 53
54 -> 54
55 -> 55
56 -> 56
57 -> 57
58 -> 58
59 -> 59
60 -> 60
61 -> 61
62 -> 62
63 -> 63
64 -> 64
65 -> 65
66 -> 66
67 -> 67
68 -> 68
69 -> 69
70 -> 70
71 -> 71
72 -> 72
73 -> 73
74 -> 74
75 -> 75
76 -> 76
77 -> 77
78 -> 78
79 -> 79
80 -> 80
81 -> 81
82 -> 82
83 -> 83
84 -> 84
85 -> 85
86 -> 86
87 -> 87
88 -> 88
89 -> 89
90 -> 90
91 -> 91
92 -> 92
93 -> 93
94 -> 94
95 -> 95
96 -> 96
97 -> 97
98 -> 98
99 -> 99
100 -> 100
101 -> 101
102 -> 102
103 -> 103
104 -> 104
105 -> 105
106 -> 106
107 -> 107
108 -> 108
109 -> 109
110 -> 110
111 -> 111
112 -> 112
113 -> 113
114 -> 114
115 -> 115
116 -> 116
117 -> 117
118 -> 118
119 -> 119
120 -> 120
121 -> 121
122 -> 122
123 -> 123
124 -> 124
125 -> 125
126 -> 126
127 -> 127
128 -> 128
129 -> 129
130 -> 130
131 -> 131
132 -> 132
133 -> 133
134 -> 134
135 -> 135
136 -> 136
137 -> 137
138 -> 138
139 -> 139
140 -> 140
141 -> 141
142 -> 142
143 -> 143
144 -> 144
145 -> 145
146 -> 146
147 -> 147
148 -> 148
149 -> 149
150 -> 150
151 -> 151
152 -> 152
153 -> 153
154 -> 154
155 -> 155
156 -> 156
157 -> 157
158 -> 158
159 -> 159
160 -> 160
161 -> 161
162 -> 162
163 -> 163
164 -> 164
165 -> 165
166 -> 166
167 -> 167
168 -> 168
169 -> 169
170 -> 170
171 -> 171
172 -> 172
173 -> 173
174 -> 174
175 -> 175
176 -> 176

Connections (Graph): 
1 -> 47 
2 -> 46 
3 -> 43 
4 -> 41 
5 -> 172 
6 -> 170 
7 -> 
8 -> 
9 -> 
10 -> 
11 -> 
12 -> 
13 -> 
14 -> 
15 -> 51 53 57 59 62 64 70 72 80 82 85 87 90 92 95 98 101 103 106 108 111 113 116 118 121 123 127 130 133 136 142 144 149 151 154 156 159 162 165 
16 -> 22 25 27 29 31 36 38 39 40 50 52 55 56 58 60 61 63 69 71 77 78 79 81 83 84 86 88 89 91 93 94 96 97 99 100 102 104 105 107 109 110 112 114 115 117 119 120 122 125 126 128 129 131 132 134 135 140 141 143 147 148 150 153 155 158 161 163 164 166 
17 -> 139 171 
18 -> 19 42 138 146 169 
19 -> 
20 -> 
21 -> 20 
22 -> 
23 -> 
24 -> 23 26 28 30 
25 -> 
26 -> 
27 -> 
28 -> 
29 -> 
30 -> 
31 -> 
32 -> 
33 -> 32 
34 -> 
35 -> 34 37 
36 -> 
37 -> 
38 -> 
39 -> 
40 -> 
41 -> 
42 -> 
43 -> 
44 -> 
45 -> 44 
46 -> 
47 -> 137 145 
48 -> 
49 -> 48 152 157 160 
50 -> 
51 -> 54 
52 -> 
53 -> 54 
54 -> 
55 -> 
56 -> 
57 -> 
58 -> 
59 -> 
60 -> 
61 -> 
62 -> 
63 -> 
64 -> 
65 -> 
66 -> 65 
67 -> 
68 -> 67 
69 -> 
70 -> 
71 -> 
72 -> 
73 -> 
74 -> 73 
75 -> 
76 -> 75 
77 -> 
78 -> 
79 -> 
80 -> 
81 -> 
82 -> 
83 -> 
84 -> 
85 -> 
86 -> 
87 -> 
88 -> 
89 -> 
90 -> 
91 -> 
92 -> 
93 -> 
94 -> 
95 -> 
96 -> 
97 -> 
98 -> 
99 -> 
100 -> 
101 -> 
102 -> 
103 -> 
104 -> 
105 -> 
106 -> 
107 -> 
108 -> 
109 -> 
110 -> 
111 -> 
112 -> 
113 -> 
114 -> 
115 -> 
116 -> 
117 -> 
118 -> 
119 -> 
120 -> 
121 -> 
122 -> 
123 -> 124 
124 -> 
125 -> 
126 -> 
127 -> 
128 -> 
129 -> 
130 -> 
131 -> 
132 -> 
133 -> 
134 -> 
135 -> 
136 -> 137 
137 -> 
138 -> 
139 -> 
140 -> 
141 -> 
142 -> 
143 -> 
144 -> 145 
145 -> 
146 -> 
147 -> 
148 -> 
149 -> 
150 -> 
151 -> 
152 -> 
153 -> 
154 -> 
155 -> 
156 -> 
157 -> 
158 -> 
159 -> 
160 -> 
161 -> 
162 -> 
163 -> 
164 -> 
165 -> 
166 -> 
167 -> 
168 -> 167 
169 -> 
170 -> 
171 -> 
172 -> 
173 -> 
174 -> 173 
175 -> 
176 -> 175 

Points-to-set: 
1 -> {}
2 -> {1, }
3 -> {}
4 -> {3, }
5 -> {}
6 -> {5, }
7 -> {}
8 -> {7, }
9 -> {}
10 -> {9, }
11 -> {}
12 -> {11, }
13 -> {}
14 -> {13, }
15 -> {}
16 -> {15, }
17 -> {}
18 -> {17, }
19 -> {17, }
20 -> {}
21 -> {}
22 -> {15, }
23 -> {}
24 -> {}
25 -> {15, }
26 -> {}
27 -> {15, }
28 -> {}
29 -> {15, }
30 -> {}
31 -> {15, }
32 -> {}
33 -> {}
34 -> {}
35 -> {}
36 -> {15, }
37 -> {}
38 -> {15, }
39 -> {15, }
40 -> {15, }
41 -> {3, }
42 -> {17, }
43 -> {}
44 -> {}
45 -> {}
46 -> {1, }
47 -> {}
48 -> {}
49 -> {}
50 -> {15, }
51 -> {}
52 -> {15, }
53 -> {}
54 -> {}
55 -> {15, }
56 -> {15, }
57 -> {}
58 -> {15, }
59 -> {}
60 -> {15, }
61 -> {15, }
62 -> {}
63 -> {15, }
64 -> {}
65 -> {}
66 -> {}
67 -> {}
68 -> {}
69 -> {15, }
70 -> {}
71 -> {15, }
72 -> {}
73 -> {}
74 -> {}
75 -> {}
76 -> {}
77 -> {15, }
78 -> {15, }
79 -> {15, }
80 -> {}
81 -> {15, }
82 -> {}
83 -> {15, }
84 -> {15, }
85 -> {}
86 -> {15, }
87 -> {}
88 -> {15, }
89 -> {15, }
90 -> {}
91 -> {15, }
92 -> {}
93 -> {15, }
94 -> {15, }
95 -> {}
96 -> {15, }
97 -> {15, }
98 -> {}
99 -> {15, }
100 -> {15, }
101 -> {}
102 -> {15, }
103 -> {}
104 -> {15, }
105 -> {15, }
106 -> {}
107 -> {15, }
108 -> {}
109 -> {15, }
110 -> {15, }
111 -> {}
112 -> {15, }
113 -> {}
114 -> {15, }
115 -> {15, }
116 -> {}
117 -> {15, }
118 -> {}
119 -> {15, }
120 -> {15, }
121 -> {}
122 -> {15, }
123 -> {}
124 -> {}
125 -> {15, }
126 -> {15, }
127 -> {}
128 -> {15, }
129 -> {15, }
130 -> {}
131 -> {15, }
132 -> {15, }
133 -> {}
134 -> {15, }
135 -> {15, }
136 -> {}
137 -> {}
138 -> {17, }
139 -> {}
140 -> {15, }
141 -> {15, }
142 -> {}
143 -> {15, }
144 -> {}
145 -> {}
146 -> {17, }
147 -> {15, }
148 -> {15, }
149 -> {}
150 -> {15, }
151 -> {}
152 -> {}
153 -> {15, }
154 -> {}
155 -> {15, }
156 -> {}
157 -> {}
158 -> {15, }
159 -> {}
160 -> {}
161 -> {15, }
162 -> {}
163 -> {15, }
164 -> {15, }
165 -> {}
166 -> {15, }
167 -> {}
168 -> {}
169 -> {17, }
170 -> {5, }
171 -> {}
172 -> {}
173 -> {}
174 -> {}
175 -> {}
176 -> {}

Variable: Int -> Value* mapping
8: @.str = private unnamed_addr constant [8 x i8] c"default\00", align 1
10: @.str1 = private unnamed_addr constant [11 x i8] c"Result: %d\00", align 1
4: @A = internal unnamed_addr constant [8 x i32] [i32 22, i32 5, i32 -9, i32 3, i32 -17, i32 38, i32 0, i32 11], align 4
21:   %indvar15 = phi i32 [ %indvar.next16, %2 ], [ 0, %0 ]
12: @.str2 = private unnamed_addr constant [13 x i8] c"RESULT: PASS\00", align 1
14: @.str3 = private unnamed_addr constant [13 x i8] c"RESULT: FAIL\00", align 1
2: @imem = internal unnamed_addr constant [44 x i32] [i32 -1885077504, i32 665124868, i32 614858756, i32 266368, i32 12726305, i32 202375190, i32 0, i32 872546314, i32 12, i32 1006702593, i32 875036672, i32 280704, i32 17385505, i32 -1926627328, i32 350336, i32 17520673, i32 -1922301952, i32 25847850, i32 295698435, i32 -1389625344, i32 -1385562112, i32 65011720, i32 666763252, i32 -1346437112, i32 -1347354620, i32 -1347420160, i32 605028352, i32 705167368, i32 285212683, i32 638648321, i32 707264520, i32 285212678, i32 637796352, i32 639959040, i32 202375177, i32 640745473, i32 135266334, i32 638582785, i32 135266331, i32 -1883308024, i32 -1884225532, i32 -1884291072, i32 666697740, i32 65011720], align 4
6: @outData = internal unnamed_addr constant [8 x i32] [i32 -17, i32 -9, i32 0, i32 3, i32 5, i32 11, i32 22, i32 38], align 4
19:   %s.i.0 = getelementptr [64 x i32]* %dmem, i32 0, i32 %indvar15
20:   %indvar.next16 = add i32 %indvar15, 1
33:   %indvar7 = phi i32 [ 0, %legup_memset_4.exit.preheader ], [ %indvar.next8, %3 ]
24:   %i1.0 = mul i32 %indvar7, 5
44:   %17 = add nsw i32 %12, 1
168:   %19 = phi i32 [ %235, %234 ], [ 0, %.preheader ]
49:   %pc.0 = phi i32 [ %pc.6, %234 ], [ 4194304, %.preheader ]
46:   %22 = getelementptr inbounds [44 x i32]* @imem, i32 0, i32 %21
47:   %23 = load i32* %22, align 4
48:   %24 = add nsw i32 %pc.0, 4
16:   %reg = alloca [32 x i32], align 4
18:   %dmem = alloca [64 x i32], align 4
86:   %86 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
87:   %87 = load i32* %86, align 4
88:   %89 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
89:   %91 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
50:   %37 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
22:   %scevgep14 = getelementptr [32 x i32]* %reg, i32 0, i32 %i1.0
23:   %4 = add i32 %i1.0, 1
25:   %scevgep13 = getelementptr [32 x i32]* %reg, i32 0, i32 %4
26:   %5 = add i32 %i1.0, 2
27:   %scevgep12 = getelementptr [32 x i32]* %reg, i32 0, i32 %5
28:   %6 = add i32 %i1.0, 3
29:   %scevgep11 = getelementptr [32 x i32]* %reg, i32 0, i32 %6
30:   %7 = add i32 %i1.0, 4
31:   %scevgep10 = getelementptr [32 x i32]* %reg, i32 0, i32 %7
32:   %indvar.next8 = add i32 %indvar7, 1
35:   %indvar = phi i32 [ 0, %.preheader5.preheader ], [ %indvar.next, %8 ]
34:   %i1.1 = add i32 %indvar, 30
36:   %scevgep6 = getelementptr [32 x i32]* %reg, i32 0, i32 %i1.1
37:   %indvar.next = add i32 %indvar, 1
38:   %10 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 29
45:   %12 = phi i32 [ 0, %9 ], [ %17, %15 ]
39:   %13 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 0
40:   %14 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 31
41:   %scevgep4 = getelementptr [8 x i32]* @A, i32 0, i32 %12
42:   %scevgep3 = getelementptr [64 x i32]* %dmem, i32 0, i32 %12
43:   %16 = load i32* %scevgep4, align 4
111:   %123 = load i32* %122, align 4
112:   %124 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
113:   %125 = load i32* %124, align 4
114:   %128 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
115:   %130 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
116:   %131 = load i32* %130, align 4
117:   %132 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
118:   %133 = load i32* %132, align 4
119:   %136 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
120:   %138 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
121:   %139 = load i32* %138, align 4
174:   %main_result.0 = phi i32 [ %238, %.loopexit ], [ %246, %241 ]
176:   %240 = phi i32 [ 0, %.loopexit ], [ %247, %241 ]
169:   %scevgep2 = getelementptr [64 x i32]* %dmem, i32 0, i32 %240
170:   %scevgep = getelementptr [8 x i32]* @outData, i32 0, i32 %240
171:   %242 = load i32* %scevgep2, align 4
172:   %243 = load i32* %scevgep, align 4
173:   %246 = add nsw i32 %main_result.0, %245
175:   %247 = add nsw i32 %240, 1
51:   %38 = load i32* %37, align 4
52:   %39 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
53:   %40 = load i32* %39, align 4
54:   %41 = add nsw i32 %38, %40
55:   %42 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
56:   %44 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
57:   %45 = load i32* %44, align 4
58:   %46 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
59:   %47 = load i32* %46, align 4
60:   %49 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
61:   %51 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
62:   %52 = load i32* %51, align 4
63:   %54 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
64:   %55 = load i32* %54, align 4
66:   %57 = mul nsw i64 %53, %56
65:   %58 = trunc i64 %57 to i32
68:   %59 = lshr i64 %57, 32
67:   %60 = trunc i64 %59 to i32
69:   %62 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
70:   %63 = load i32* %62, align 4
71:   %65 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
72:   %66 = load i32* %65, align 4
74:   %68 = mul i64 %64, %67
73:   %69 = trunc i64 %68 to i32
76:   %70 = lshr i64 %68, 32
75:   %71 = trunc i64 %70 to i32
77:   %73 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
78:   %75 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
79:   %77 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
80:   %78 = load i32* %77, align 4
81:   %79 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
82:   %80 = load i32* %79, align 4
83:   %82 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
84:   %84 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
85:   %85 = load i32* %84, align 4
150:   %198 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
151:   %199 = load i32* %198, align 4
152:   %203 = add nsw i32 %pc.0, %202
153:   %205 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
154:   %206 = load i32* %205, align 4
155:   %207 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
156:   %208 = load i32* %207, align 4
90:   %92 = load i32* %91, align 4
91:   %93 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
92:   %94 = load i32* %93, align 4
93:   %96 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
94:   %98 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
95:   %99 = load i32* %98, align 4
96:   %101 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
97:   %103 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
98:   %104 = load i32* %103, align 4
99:   %106 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
100:   %108 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
101:   %109 = load i32* %108, align 4
102:   %110 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
103:   %111 = load i32* %110, align 4
104:   %113 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
105:   %115 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %33
106:   %116 = load i32* %115, align 4
107:   %117 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
108:   %118 = load i32* %117, align 4
109:   %120 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %31
110:   %122 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %35
122:   %152 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
123:   %153 = load i32* %152, align 4
124:   %155 = add nsw i32 %153, %154
125:   %156 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
126:   %158 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
127:   %159 = load i32* %158, align 4
128:   %162 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
129:   %164 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
130:   %165 = load i32* %164, align 4
131:   %168 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
132:   %170 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
133:   %171 = load i32* %170, align 4
134:   %174 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
135:   %176 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
136:   %177 = load i32* %176, align 4
137:   %178 = add nsw i32 %177, %23
138:   %181 = getelementptr inbounds [64 x i32]* %dmem, i32 0, i32 %180
139:   %182 = load i32* %181, align 4
140:   %183 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
141:   %185 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
142:   %186 = load i32* %185, align 4
143:   %187 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
144:   %188 = load i32* %187, align 4
145:   %189 = add nsw i32 %188, %23
146:   %192 = getelementptr inbounds [64 x i32]* %dmem, i32 0, i32 %191
147:   %194 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
148:   %196 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
149:   %197 = load i32* %196, align 4
157:   %212 = add nsw i32 %pc.0, %211
158:   %214 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
159:   %215 = load i32* %214, align 4
160:   %219 = add nsw i32 %pc.0, %218
161:   %221 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
162:   %222 = load i32* %221, align 4
163:   %226 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
164:   %228 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %150
165:   %229 = load i32* %228, align 4
166:   %233 = getelementptr inbounds [32 x i32]* %reg, i32 0, i32 %148
167:   %235 = add nsw i32 %19, 1
Memory: Int -> Value* mapping
7: @.str = private unnamed_addr constant [8 x i8] c"default\00", align 1
9: @.str1 = private unnamed_addr constant [11 x i8] c"Result: %d\00", align 1
3: @A = internal unnamed_addr constant [8 x i32] [i32 22, i32 5, i32 -9, i32 3, i32 -17, i32 38, i32 0, i32 11], align 4
11: @.str2 = private unnamed_addr constant [13 x i8] c"RESULT: PASS\00", align 1
13: @.str3 = private unnamed_addr constant [13 x i8] c"RESULT: FAIL\00", align 1
1: @imem = internal unnamed_addr constant [44 x i32] [i32 -1885077504, i32 665124868, i32 614858756, i32 266368, i32 12726305, i32 202375190, i32 0, i32 872546314, i32 12, i32 1006702593, i32 875036672, i32 280704, i32 17385505, i32 -1926627328, i32 350336, i32 17520673, i32 -1922301952, i32 25847850, i32 295698435, i32 -1389625344, i32 -1385562112, i32 65011720, i32 666763252, i32 -1346437112, i32 -1347354620, i32 -1347420160, i32 605028352, i32 705167368, i32 285212683, i32 638648321, i32 707264520, i32 285212678, i32 637796352, i32 639959040, i32 202375177, i32 640745473, i32 135266334, i32 638582785, i32 135266331, i32 -1883308024, i32 -1884225532, i32 -1884291072, i32 666697740, i32 65011720], align 4
5: @outData = internal unnamed_addr constant [8 x i32] [i32 -17, i32 -9, i32 0, i32 3, i32 5, i32 11, i32 22, i32 38], align 4
15:   %reg = alloca [32 x i32], align 4
17:   %dmem = alloca [64 x i32], align 4
digraph "_mips.bc" {
    1 [label="#1",color=blue,style=solid];
    2 [label="imem",color=blue,style=solid];
    3 [label="#3",color=blue,style=solid];
    4 [label="A",color=blue,style=solid];
    5 [label="#5",color=blue,style=solid];
    6 [label="outData",color=blue,style=solid];
    7 [label="#7",color=blue,style=solid];
    8 [label=".str",color=blue,style=solid];
    9 [label="#9",color=blue,style=solid];
    10 [label=".str1",color=blue,style=solid];
    11 [label="#11",color=blue,style=solid];
    12 [label=".str2",color=blue,style=solid];
    13 [label="#13",color=blue,style=solid];
    14 [label=".str3",color=blue,style=solid];
    15 [label="#15",color=blue,style=solid];
    16 [label="reg",color=blue,style=solid];
    17 [label="#17",color=blue,style=solid];
    18 [label="dmem",color=blue,style=solid];
    19 [label="s.i.0",color=blue,style=solid];
    20 [label="indvar.next16",color=blue,style=solid];
    21 [label="indvar15",color=blue,style=solid];
    22 [label="scevgep14",color=blue,style=solid];
    23 [label="unknown",color=blue,style=solid];
    24 [label="i1.0",color=blue,style=solid];
    25 [label="scevgep13",color=blue,style=solid];
    26 [label="unknown",color=blue,style=solid];
    27 [label="scevgep12",color=blue,style=solid];
    28 [label="unknown",color=blue,style=solid];
    29 [label="scevgep11",color=blue,style=solid];
    30 [label="unknown",color=blue,style=solid];
    31 [label="scevgep10",color=blue,style=solid];
    32 [label="indvar.next8",color=blue,style=solid];
    33 [label="indvar7",color=blue,style=solid];
    34 [label="i1.1",color=blue,style=solid];
    35 [label="indvar",color=blue,style=solid];
    36 [label="scevgep6",color=blue,style=solid];
    37 [label="indvar.next",color=blue,style=solid];
    38 [label="unknown",color=blue,style=solid];
    39 [label="unknown",color=blue,style=solid];
    40 [label="unknown",color=blue,style=solid];
    41 [label="scevgep4",color=blue,style=solid];
    42 [label="scevgep3",color=blue,style=solid];
    43 [label="unknown",color=blue,style=solid];
    44 [label="unknown",color=blue,style=solid];
    45 [label="unknown",color=blue,style=solid];
    46 [label="unknown",color=blue,style=solid];
    47 [label="unknown",color=blue,style=solid];
    48 [label="unknown",color=blue,style=solid];
    49 [label="pc.0",color=blue,style=solid];
    50 [label="unknown",color=blue,style=solid];
    51 [label="unknown",color=blue,style=solid];
    52 [label="unknown",color=blue,style=solid];
    53 [label="unknown",color=blue,style=solid];
    54 [label="unknown",color=blue,style=solid];
    55 [label="unknown",color=blue,style=solid];
    56 [label="unknown",color=blue,style=solid];
    57 [label="unknown",color=blue,style=solid];
    58 [label="unknown",color=blue,style=solid];
    59 [label="unknown",color=blue,style=solid];
    60 [label="unknown",color=blue,style=solid];
    61 [label="unknown",color=blue,style=solid];
    62 [label="unknown",color=blue,style=solid];
    63 [label="unknown",color=blue,style=solid];
    64 [label="unknown",color=blue,style=solid];
    65 [label="unknown",color=blue,style=solid];
    66 [label="unknown",color=blue,style=solid];
    67 [label="unknown",color=blue,style=solid];
    68 [label="unknown",color=blue,style=solid];
    69 [label="unknown",color=blue,style=solid];
    70 [label="unknown",color=blue,style=solid];
    71 [label="unknown",color=blue,style=solid];
    72 [label="unknown",color=blue,style=solid];
    73 [label="unknown",color=blue,style=solid];
    74 [label="unknown",color=blue,style=solid];
    75 [label="unknown",color=blue,style=solid];
    76 [label="unknown",color=blue,style=solid];
    77 [label="unknown",color=blue,style=solid];
    78 [label="unknown",color=blue,style=solid];
    79 [label="unknown",color=blue,style=solid];
    80 [label="unknown",color=blue,style=solid];
    81 [label="unknown",color=blue,style=solid];
    82 [label="unknown",color=blue,style=solid];
    83 [label="unknown",color=blue,style=solid];
    84 [label="unknown",color=blue,style=solid];
    85 [label="unknown",color=blue,style=solid];
    86 [label="unknown",color=blue,style=solid];
    87 [label="unknown",color=blue,style=solid];
    88 [label="unknown",color=blue,style=solid];
    89 [label="unknown",color=blue,style=solid];
    90 [label="unknown",color=blue,style=solid];
    91 [label="unknown",color=blue,style=solid];
    92 [label="unknown",color=blue,style=solid];
    93 [label="unknown",color=blue,style=solid];
    94 [label="unknown",color=blue,style=solid];
    95 [label="unknown",color=blue,style=solid];
    96 [label="unknown",color=blue,style=solid];
    97 [label="unknown",color=blue,style=solid];
    98 [label="unknown",color=blue,style=solid];
    99 [label="unknown",color=blue,style=solid];
    100 [label="unknown",color=blue,style=solid];
    101 [label="unknown",color=blue,style=solid];
    102 [label="unknown",color=blue,style=solid];
    103 [label="unknown",color=blue,style=solid];
    104 [label="unknown",color=blue,style=solid];
    105 [label="unknown",color=blue,style=solid];
    106 [label="unknown",color=blue,style=solid];
    107 [label="unknown",color=blue,style=solid];
    108 [label="unknown",color=blue,style=solid];
    109 [label="unknown",color=blue,style=solid];
    110 [label="unknown",color=blue,style=solid];
    111 [label="unknown",color=blue,style=solid];
    112 [label="unknown",color=blue,style=solid];
    113 [label="unknown",color=blue,style=solid];
    114 [label="unknown",color=blue,style=solid];
    115 [label="unknown",color=blue,style=solid];
    116 [label="unknown",color=blue,style=solid];
    117 [label="unknown",color=blue,style=solid];
    118 [label="unknown",color=blue,style=solid];
    119 [label="unknown",color=blue,style=solid];
    120 [label="unknown",color=blue,style=solid];
    121 [label="unknown",color=blue,style=solid];
    122 [label="unknown",color=blue,style=solid];
    123 [label="unknown",color=blue,style=solid];
    124 [label="unknown",color=blue,style=solid];
    125 [label="unknown",color=blue,style=solid];
    126 [label="unknown",color=blue,style=solid];
    127 [label="unknown",color=blue,style=solid];
    128 [label="unknown",color=blue,style=solid];
    129 [label="unknown",color=blue,style=solid];
    130 [label="unknown",color=blue,style=solid];
    131 [label="unknown",color=blue,style=solid];
    132 [label="unknown",color=blue,style=solid];
    133 [label="unknown",color=blue,style=solid];
    134 [label="unknown",color=blue,style=solid];
    135 [label="unknown",color=blue,style=solid];
    136 [label="unknown",color=blue,style=solid];
    137 [label="unknown",color=blue,style=solid];
    138 [label="unknown",color=blue,style=solid];
    139 [label="unknown",color=blue,style=solid];
    140 [label="unknown",color=blue,style=solid];
    141 [label="unknown",color=blue,style=solid];
    142 [label="unknown",color=blue,style=solid];
    143 [label="unknown",color=blue,style=solid];
    144 [label="unknown",color=blue,style=solid];
    145 [label="unknown",color=blue,style=solid];
    146 [label="unknown",color=blue,style=solid];
    147 [label="unknown",color=blue,style=solid];
    148 [label="unknown",color=blue,style=solid];
    149 [label="unknown",color=blue,style=solid];
    150 [label="unknown",color=blue,style=solid];
    151 [label="unknown",color=blue,style=solid];
    152 [label="unknown",color=blue,style=solid];
    153 [label="unknown",color=blue,style=solid];
    154 [label="unknown",color=blue,style=solid];
    155 [label="unknown",color=blue,style=solid];
    156 [label="unknown",color=blue,style=solid];
    157 [label="unknown",color=blue,style=solid];
    158 [label="unknown",color=blue,style=solid];
    159 [label="unknown",color=blue,style=solid];
    160 [label="unknown",color=blue,style=solid];
    161 [label="unknown",color=blue,style=solid];
    162 [label="unknown",color=blue,style=solid];
    163 [label="unknown",color=blue,style=solid];
    164 [label="unknown",color=blue,style=solid];
    165 [label="unknown",color=blue,style=solid];
    166 [label="unknown",color=blue,style=solid];
    167 [label="unknown",color=blue,style=solid];
    168 [label="unknown",color=blue,style=solid];
    169 [label="scevgep2",color=blue,style=solid];
    170 [label="scevgep",color=blue,style=solid];
    171 [label="unknown",color=blue,style=solid];
    172 [label="unknown",color=blue,style=solid];
    173 [label="unknown",color=blue,style=solid];
    174 [label="main_result.0",color=blue,style=solid];
    175 [label="unknown",color=blue,style=solid];
    176 [label="unknown",color=blue,style=solid];
    1 -> 47;
    2 -> 46;
    3 -> 43;
    4 -> 41;
    5 -> 172;
    6 -> 170;
    15 -> 51;
    15 -> 53;
    15 -> 57;
    15 -> 59;
    15 -> 62;
    15 -> 64;
    15 -> 70;
    15 -> 72;
    15 -> 80;
    15 -> 82;
    15 -> 85;
    15 -> 87;
    15 -> 90;
    15 -> 92;
    15 -> 95;
    15 -> 98;
    15 -> 101;
    15 -> 103;
    15 -> 106;
    15 -> 108;
    15 -> 111;
    15 -> 113;
    15 -> 116;
    15 -> 118;
    15 -> 121;
    15 -> 123;
    15 -> 127;
    15 -> 130;
    15 -> 133;
    15 -> 136;
    15 -> 142;
    15 -> 144;
    15 -> 149;
    15 -> 151;
    15 -> 154;
    15 -> 156;
    15 -> 159;
    15 -> 162;
    15 -> 165;
    16 -> 22;
    16 -> 25;
    16 -> 27;
    16 -> 29;
    16 -> 31;
    16 -> 36;
    16 -> 38;
    16 -> 39;
    16 -> 40;
    16 -> 50;
    16 -> 52;
    16 -> 55;
    16 -> 56;
    16 -> 58;
    16 -> 60;
    16 -> 61;
    16 -> 63;
    16 -> 69;
    16 -> 71;
    16 -> 77;
    16 -> 78;
    16 -> 79;
    16 -> 81;
    16 -> 83;
    16 -> 84;
    16 -> 86;
    16 -> 88;
    16 -> 89;
    16 -> 91;
    16 -> 93;
    16 -> 94;
    16 -> 96;
    16 -> 97;
    16 -> 99;
    16 -> 100;
    16 -> 102;
    16 -> 104;
    16 -> 105;
    16 -> 107;
    16 -> 109;
    16 -> 110;
    16 -> 112;
    16 -> 114;
    16 -> 115;
    16 -> 117;
    16 -> 119;
    16 -> 120;
    16 -> 122;
    16 -> 125;
    16 -> 126;
    16 -> 128;
    16 -> 129;
    16 -> 131;
    16 -> 132;
    16 -> 134;
    16 -> 135;
    16 -> 140;
    16 -> 141;
    16 -> 143;
    16 -> 147;
    16 -> 148;
    16 -> 150;
    16 -> 153;
    16 -> 155;
    16 -> 158;
    16 -> 161;
    16 -> 163;
    16 -> 164;
    16 -> 166;
    17 -> 139;
    17 -> 171;
    18 -> 19;
    18 -> 42;
    18 -> 138;
    18 -> 146;
    18 -> 169;
    21 -> 20;
    24 -> 23;
    24 -> 26;
    24 -> 28;
    24 -> 30;
    33 -> 32;
    35 -> 34;
    35 -> 37;
    45 -> 44;
    47 -> 137;
    47 -> 145;
    49 -> 48;
    49 -> 152;
    49 -> 157;
    49 -> 160;
    51 -> 54;
    53 -> 54;
    66 -> 65;
    68 -> 67;
    74 -> 73;
    76 -> 75;
    123 -> 124;
    136 -> 137;
    144 -> 145;
    168 -> 167;
    174 -> 173;
    176 -> 175;
    pts2 [label="#1",color=red,style=dashed,shape=box];
    2 -> pts2 [color=red,style=dashed];
    pts4 [label="#3",color=red,style=dashed,shape=box];
    4 -> pts4 [color=red,style=dashed];
    pts6 [label="#5",color=red,style=dashed,shape=box];
    6 -> pts6 [color=red,style=dashed];
    pts8 [label="#7",color=red,style=dashed,shape=box];
    8 -> pts8 [color=red,style=dashed];
    pts10 [label="#9",color=red,style=dashed,shape=box];
    10 -> pts10 [color=red,style=dashed];
    pts12 [label="#11",color=red,style=dashed,shape=box];
    12 -> pts12 [color=red,style=dashed];
    pts14 [label="#13",color=red,style=dashed,shape=box];
    14 -> pts14 [color=red,style=dashed];
    pts16 [label="#15",color=red,style=dashed,shape=box];
    16 -> pts16 [color=red,style=dashed];
    pts18 [label="#17",color=red,style=dashed,shape=box];
    18 -> pts18 [color=red,style=dashed];
    pts19 [label="#17",color=red,style=dashed,shape=box];
    19 -> pts19 [color=red,style=dashed];
    pts22 [label="#15",color=red,style=dashed,shape=box];
    22 -> pts22 [color=red,style=dashed];
    pts25 [label="#15",color=red,style=dashed,shape=box];
    25 -> pts25 [color=red,style=dashed];
    pts27 [label="#15",color=red,style=dashed,shape=box];
    27 -> pts27 [color=red,style=dashed];
    pts29 [label="#15",color=red,style=dashed,shape=box];
    29 -> pts29 [color=red,style=dashed];
    pts31 [label="#15",color=red,style=dashed,shape=box];
    31 -> pts31 [color=red,style=dashed];
    pts36 [label="#15",color=red,style=dashed,shape=box];
    36 -> pts36 [color=red,style=dashed];
    pts38 [label="#15",color=red,style=dashed,shape=box];
    38 -> pts38 [color=red,style=dashed];
    pts39 [label="#15",color=red,style=dashed,shape=box];
    39 -> pts39 [color=red,style=dashed];
    pts40 [label="#15",color=red,style=dashed,shape=box];
    40 -> pts40 [color=red,style=dashed];
    pts41 [label="#3",color=red,style=dashed,shape=box];
    41 -> pts41 [color=red,style=dashed];
    pts42 [label="#17",color=red,style=dashed,shape=box];
    42 -> pts42 [color=red,style=dashed];
    pts46 [label="#1",color=red,style=dashed,shape=box];
    46 -> pts46 [color=red,style=dashed];
    pts50 [label="#15",color=red,style=dashed,shape=box];
    50 -> pts50 [color=red,style=dashed];
    pts52 [label="#15",color=red,style=dashed,shape=box];
    52 -> pts52 [color=red,style=dashed];
    pts55 [label="#15",color=red,style=dashed,shape=box];
    55 -> pts55 [color=red,style=dashed];
    pts56 [label="#15",color=red,style=dashed,shape=box];
    56 -> pts56 [color=red,style=dashed];
    pts58 [label="#15",color=red,style=dashed,shape=box];
    58 -> pts58 [color=red,style=dashed];
    pts60 [label="#15",color=red,style=dashed,shape=box];
    60 -> pts60 [color=red,style=dashed];
    pts61 [label="#15",color=red,style=dashed,shape=box];
    61 -> pts61 [color=red,style=dashed];
    pts63 [label="#15",color=red,style=dashed,shape=box];
    63 -> pts63 [color=red,style=dashed];
    pts69 [label="#15",color=red,style=dashed,shape=box];
    69 -> pts69 [color=red,style=dashed];
    pts71 [label="#15",color=red,style=dashed,shape=box];
    71 -> pts71 [color=red,style=dashed];
    pts77 [label="#15",color=red,style=dashed,shape=box];
    77 -> pts77 [color=red,style=dashed];
    pts78 [label="#15",color=red,style=dashed,shape=box];
    78 -> pts78 [color=red,style=dashed];
    pts79 [label="#15",color=red,style=dashed,shape=box];
    79 -> pts79 [color=red,style=dashed];
    pts81 [label="#15",color=red,style=dashed,shape=box];
    81 -> pts81 [color=red,style=dashed];
    pts83 [label="#15",color=red,style=dashed,shape=box];
    83 -> pts83 [color=red,style=dashed];
    pts84 [label="#15",color=red,style=dashed,shape=box];
    84 -> pts84 [color=red,style=dashed];
    pts86 [label="#15",color=red,style=dashed,shape=box];
    86 -> pts86 [color=red,style=dashed];
    pts88 [label="#15",color=red,style=dashed,shape=box];
    88 -> pts88 [color=red,style=dashed];
    pts89 [label="#15",color=red,style=dashed,shape=box];
    89 -> pts89 [color=red,style=dashed];
    pts91 [label="#15",color=red,style=dashed,shape=box];
    91 -> pts91 [color=red,style=dashed];
    pts93 [label="#15",color=red,style=dashed,shape=box];
    93 -> pts93 [color=red,style=dashed];
    pts94 [label="#15",color=red,style=dashed,shape=box];
    94 -> pts94 [color=red,style=dashed];
    pts96 [label="#15",color=red,style=dashed,shape=box];
    96 -> pts96 [color=red,style=dashed];
    pts97 [label="#15",color=red,style=dashed,shape=box];
    97 -> pts97 [color=red,style=dashed];
    pts99 [label="#15",color=red,style=dashed,shape=box];
    99 -> pts99 [color=red,style=dashed];
    pts100 [label="#15",color=red,style=dashed,shape=box];
    100 -> pts100 [color=red,style=dashed];
    pts102 [label="#15",color=red,style=dashed,shape=box];
    102 -> pts102 [color=red,style=dashed];
    pts104 [label="#15",color=red,style=dashed,shape=box];
    104 -> pts104 [color=red,style=dashed];
    pts105 [label="#15",color=red,style=dashed,shape=box];
    105 -> pts105 [color=red,style=dashed];
    pts107 [label="#15",color=red,style=dashed,shape=box];
    107 -> pts107 [color=red,style=dashed];
    pts109 [label="#15",color=red,style=dashed,shape=box];
    109 -> pts109 [color=red,style=dashed];
    pts110 [label="#15",color=red,style=dashed,shape=box];
    110 -> pts110 [color=red,style=dashed];
    pts112 [label="#15",color=red,style=dashed,shape=box];
    112 -> pts112 [color=red,style=dashed];
    pts114 [label="#15",color=red,style=dashed,shape=box];
    114 -> pts114 [color=red,style=dashed];
    pts115 [label="#15",color=red,style=dashed,shape=box];
    115 -> pts115 [color=red,style=dashed];
    pts117 [label="#15",color=red,style=dashed,shape=box];
    117 -> pts117 [color=red,style=dashed];
    pts119 [label="#15",color=red,style=dashed,shape=box];
    119 -> pts119 [color=red,style=dashed];
    pts120 [label="#15",color=red,style=dashed,shape=box];
    120 -> pts120 [color=red,style=dashed];
    pts122 [label="#15",color=red,style=dashed,shape=box];
    122 -> pts122 [color=red,style=dashed];
    pts125 [label="#15",color=red,style=dashed,shape=box];
    125 -> pts125 [color=red,style=dashed];
    pts126 [label="#15",color=red,style=dashed,shape=box];
    126 -> pts126 [color=red,style=dashed];
    pts128 [label="#15",color=red,style=dashed,shape=box];
    128 -> pts128 [color=red,style=dashed];
    pts129 [label="#15",color=red,style=dashed,shape=box];
    129 -> pts129 [color=red,style=dashed];
    pts131 [label="#15",color=red,style=dashed,shape=box];
    131 -> pts131 [color=red,style=dashed];
    pts132 [label="#15",color=red,style=dashed,shape=box];
    132 -> pts132 [color=red,style=dashed];
    pts134 [label="#15",color=red,style=dashed,shape=box];
    134 -> pts134 [color=red,style=dashed];
    pts135 [label="#15",color=red,style=dashed,shape=box];
    135 -> pts135 [color=red,style=dashed];
    pts138 [label="#17",color=red,style=dashed,shape=box];
    138 -> pts138 [color=red,style=dashed];
    pts140 [label="#15",color=red,style=dashed,shape=box];
    140 -> pts140 [color=red,style=dashed];
    pts141 [label="#15",color=red,style=dashed,shape=box];
    141 -> pts141 [color=red,style=dashed];
    pts143 [label="#15",color=red,style=dashed,shape=box];
    143 -> pts143 [color=red,style=dashed];
    pts146 [label="#17",color=red,style=dashed,shape=box];
    146 -> pts146 [color=red,style=dashed];
    pts147 [label="#15",color=red,style=dashed,shape=box];
    147 -> pts147 [color=red,style=dashed];
    pts148 [label="#15",color=red,style=dashed,shape=box];
    148 -> pts148 [color=red,style=dashed];
    pts150 [label="#15",color=red,style=dashed,shape=box];
    150 -> pts150 [color=red,style=dashed];
    pts153 [label="#15",color=red,style=dashed,shape=box];
    153 -> pts153 [color=red,style=dashed];
    pts155 [label="#15",color=red,style=dashed,shape=box];
    155 -> pts155 [color=red,style=dashed];
    pts158 [label="#15",color=red,style=dashed,shape=box];
    158 -> pts158 [color=red,style=dashed];
    pts161 [label="#15",color=red,style=dashed,shape=box];
    161 -> pts161 [color=red,style=dashed];
    pts163 [label="#15",color=red,style=dashed,shape=box];
    163 -> pts163 [color=red,style=dashed];
    pts164 [label="#15",color=red,style=dashed,shape=box];
    164 -> pts164 [color=red,style=dashed];
    pts166 [label="#15",color=red,style=dashed,shape=box];
    166 -> pts166 [color=red,style=dashed];
    pts169 [label="#17",color=red,style=dashed,shape=box];
    169 -> pts169 [color=red,style=dashed];
    pts170 [label="#5",color=red,style=dashed,shape=box];
    170 -> pts170 [color=red,style=dashed];
}
<badref> -> { 
	Addr: %dmem
		RAM: main_0_dmem
			Adding Local RAM: main_0_dmem to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%16 -> { 
	Addr: @A
		RAM: A
			Adding Local RAM: A to Fct: @main
}
<badref> -> { 
	Addr: %dmem
		RAM: main_0_dmem
			Adding Local RAM: main_0_dmem to Fct: @main
}
%23 -> { 
	Addr: @imem
		RAM: imem
			Adding Local RAM: imem to Fct: @main
}
%38 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%40 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%45 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%47 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%52 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%55 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%63 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%66 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%78 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%80 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%85 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%87 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%92 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%94 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%99 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%104 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%109 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%111 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%116 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%118 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%123 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%125 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%131 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%133 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%139 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%153 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%159 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%165 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%171 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%177 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%182 -> { 
	Addr: %dmem
		RAM: main_0_dmem
			Adding Local RAM: main_0_dmem to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%186 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%188 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %dmem
		RAM: main_0_dmem
			Adding Local RAM: main_0_dmem to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%197 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%199 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%206 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%208 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%215 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%222 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%229 -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
<badref> -> { 
	Addr: %reg
		RAM: main_0_reg
			Adding Local RAM: main_0_reg to Fct: @main
}
%242 -> { 
	Addr: %dmem
		RAM: main_0_dmem
			Adding Local RAM: main_0_dmem to Fct: @main
}
%243 -> { 
	Addr: @outData
		RAM: outData
			Adding Local RAM: outData to Fct: @main
}
Final memory allocation:
Global Memories:
Local Memories:
	ROM: imem Function: main
	ROM: A Function: main
	ROM: outData Function: main
	RAM: main_0_reg Function: main
	RAM: main_0_dmem Function: main

//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Tue Apr 25 11:27:45 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_main_BB__1_1 default: LEGUP_0
state: LEGUP_F_main_BB__1_1
   %float_exception_flags.0 = phi i32 [ 0, %0 ], [ %float_exception_flags.5, %float64_mul.exit ] (endState: LEGUP_F_main_BB__1_1)
   %main_result.02 = phi i32 [ 0, %0 ], [ %199, %float64_mul.exit ] (endState: LEGUP_F_main_BB__1_1)
   %2 = phi i32 [ 0, %0 ], [ %201, %float64_mul.exit ] (endState: LEGUP_F_main_BB__1_1)
   %scevgep = getelementptr [20 x i64]* @z_output, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %scevgep2 = getelementptr [20 x i64]* @b_input, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %scevgep3 = getelementptr [20 x i64]* @a_input, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %3 = load i64* %scevgep3, align 8, !tbaa !1 (endState: LEGUP_F_main_BB__1_2)
   %4 = load i64* %scevgep2, align 8, !tbaa !1 (endState: LEGUP_F_main_BB__1_2)
   Transition: default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB__1_2
   %5 = and i64 %3, 4503599627370495 (endState: LEGUP_F_main_BB__1_2)
   %6 = lshr i64 %3, 52 (endState: LEGUP_F_main_BB__1_2)
   %.tr.i19.i = trunc i64 %6 to i32 (endState: LEGUP_F_main_BB__1_2)
   %7 = and i32 %.tr.i19.i, 2047 (endState: LEGUP_F_main_BB__1_2)
   %8 = and i64 %4, 4503599627370495 (endState: LEGUP_F_main_BB__1_2)
   %9 = lshr i64 %4, 52 (endState: LEGUP_F_main_BB__1_2)
   %.tr.i18.i = trunc i64 %9 to i32 (endState: LEGUP_F_main_BB__1_2)
   %10 = and i32 %.tr.i18.i, 2047 (endState: LEGUP_F_main_BB__1_2)
   %11 = xor i64 %4, %3 (endState: LEGUP_F_main_BB__1_2)
   %12 = lshr i64 %11, 63 (endState: LEGUP_F_main_BB__1_2)
   %13 = icmp eq i32 %7, 2047 (endState: LEGUP_F_main_BB__1_2)
   br i1 %13, label %14, label %42
   Transition: if (%13): LEGUP_F_main_BB__14_3 default: LEGUP_F_main_BB__42_12
state: LEGUP_F_main_BB__14_3
   %15 = icmp eq i32 %2, 1 (endState: LEGUP_F_main_BB__14_3)
   br i1 %15, label %float64_is_signaling_nan.exit1.i11.i, label %16
   Transition: if (%15): LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5 default: LEGUP_F_main_BB__16_4
state: LEGUP_F_main_BB__16_4
   %17 = icmp eq i32 %10, 2047 (endState: LEGUP_F_main_BB__16_4)
   %18 = and i32 %2, -5 (endState: LEGUP_F_main_BB__16_4)
   %19 = icmp eq i32 %18, 0 (endState: LEGUP_F_main_BB__16_4)
   %or.cond.i = and i1 %17, %19 (endState: LEGUP_F_main_BB__16_4)
   br i1 %or.cond.i, label %float64_is_signaling_nan.exit1.i11.i, label %33
   Transition: if (%or.cond.i): LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5 default: LEGUP_F_main_BB__33_9
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5
   %20 = lshr i32 13, %2 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %21 = and i32 %20, 1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %not.3 = icmp ne i32 %21, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %.1 = and i1 %15, %not.3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %22 = trunc i64 %4 to i63 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %23 = icmp ugt i63 %22, -4503599627370496 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %24 = lshr i32 98, %2 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %25 = and i32 %24, 1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   %26 = icmp eq i32 %25, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i11i_5)
   br i1 %26, label %float64_is_signaling_nan.exit.i12.i, label %27
   Transition: if (%26): LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7 default: LEGUP_F_main_BB__27_6
state: LEGUP_F_main_BB__27_6
   %28 = and i32 %2, -5 (endState: LEGUP_F_main_BB__27_6)
   %29 = icmp eq i32 %28, 0 (endState: LEGUP_F_main_BB__27_6)
   br label %float64_is_signaling_nan.exit.i12.i
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7
state: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7
   %30 = phi i1 [ false, %float64_is_signaling_nan.exit1.i11.i ], [ %29, %27 ] (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7)
   %31 = or i1 %.1, %30 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7)
   %32 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7)
   %.float_exception_flags.0 = select i1 %31, i32 %32, i32 %float_exception_flags.0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7)
   %. = select i1 %31, i1 %30, i1 %23 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_7)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_8
state: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_8
   %.mux2.v.i15.i = select i1 %., i64 %4, i64 %3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_8)
   %.mux2.i16.i = or i64 %.mux2.v.i15.i, 2251799813685248 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexiti12i_8)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__33_9
   %34 = zext i32 %10 to i64 (endState: LEGUP_F_main_BB__33_9)
   %35 = or i64 %34, %8 (endState: LEGUP_F_main_BB__33_9)
   %36 = icmp eq i64 %35, 0 (endState: LEGUP_F_main_BB__33_9)
   br i1 %36, label %37, label %39
   Transition: if (%36): LEGUP_F_main_BB__37_10 default: LEGUP_F_main_BB__39_11
state: LEGUP_F_main_BB__37_10
   %38 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB__37_10)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__39_11
   %40 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB__39_11)
   %41 = or i64 %40, 9218868437227405312 (endState: LEGUP_F_main_BB__39_11)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__42_12
   %43 = icmp eq i32 %10, 2047 (endState: LEGUP_F_main_BB__42_12)
   br i1 %43, label %44, label %68
   Transition: if (%43): LEGUP_F_main_BB__44_13 default: LEGUP_F_main_BB__68_21
state: LEGUP_F_main_BB__44_13
   switch i32 %2, label %59 [
    i32 4, label %float64_is_signaling_nan.exit1.i.i
    i32 0, label %float64_is_signaling_nan.exit1.i.i
  ]
   Transition: switch (%2) 4: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14 0: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14 default: LEGUP_F_main_BB__59_18
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14
   %45 = lshr i32 13, %2 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %46 = and i32 %45, 1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %47 = icmp eq i32 %2, 1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %not. = icmp ne i32 %46, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %.2 = and i1 %47, %not. (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %48 = trunc i64 %4 to i63 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %49 = icmp ugt i63 %48, -4503599627370496 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %50 = lshr i32 98, %2 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %51 = and i32 %50, 1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   %52 = icmp eq i32 %51, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_14)
   br i1 %52, label %float64_is_signaling_nan.exit.i.i, label %53
   Transition: if (%52): LEGUP_F_main_BB_float64_is_signaling_nanexitii_16 default: LEGUP_F_main_BB__53_15
state: LEGUP_F_main_BB__53_15
   %54 = and i32 %2, -5 (endState: LEGUP_F_main_BB__53_15)
   %55 = icmp eq i32 %54, 0 (endState: LEGUP_F_main_BB__53_15)
   br label %float64_is_signaling_nan.exit.i.i
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16
state: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16
   %56 = phi i1 [ false, %float64_is_signaling_nan.exit1.i.i ], [ %55, %53 ] (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16)
   %57 = or i1 %.2, %56 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16)
   %58 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16)
   %.float_exception_flags.07 = select i1 %57, i32 %58, i32 %float_exception_flags.0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16)
   %.8 = select i1 %57, i1 %56, i1 %49 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_16)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexitii_17
state: LEGUP_F_main_BB_float64_is_signaling_nanexitii_17
   %.mux2.v.i.i = select i1 %.8, i64 %4, i64 %3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_17)
   %.mux2.i.i = or i64 %.mux2.v.i.i, 2251799813685248 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexitii_17)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__59_18
   %60 = zext i32 %7 to i64 (endState: LEGUP_F_main_BB__59_18)
   %61 = or i64 %60, %5 (endState: LEGUP_F_main_BB__59_18)
   %62 = icmp eq i64 %61, 0 (endState: LEGUP_F_main_BB__59_18)
   br i1 %62, label %63, label %65
   Transition: if (%62): LEGUP_F_main_BB__63_19 default: LEGUP_F_main_BB__65_20
state: LEGUP_F_main_BB__63_19
   %64 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB__63_19)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__65_20
   %66 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB__65_20)
   %67 = or i64 %66, 9218868437227405312 (endState: LEGUP_F_main_BB__65_20)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__68_21
   %69 = icmp eq i32 %7, 0 (endState: LEGUP_F_main_BB__68_21)
   br i1 %69, label %70, label %91
   Transition: if (%69): LEGUP_F_main_BB__70_22 default: LEGUP_F_main_BB__91_28
state: LEGUP_F_main_BB__70_22
   %71 = icmp eq i32 %2, 1 (endState: LEGUP_F_main_BB__70_22)
   br i1 %71, label %74, label %72
   Transition: if (%71): LEGUP_F_main_BB__74_24 default: LEGUP_F_main_BB__72_23
state: LEGUP_F_main_BB__72_23
   %73 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB__72_23)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__74_24
   %75 = lshr i64 %5, 32 (endState: LEGUP_F_main_BB__74_24)
   %extract.t.i.i4.i = trunc i64 %75 to i32 (endState: LEGUP_F_main_BB__74_24)
   %76 = icmp ult i32 %extract.t.i.i4.i, 65536 (endState: LEGUP_F_main_BB__74_24)
   %77 = shl nuw nsw i64 %75, 16 (endState: LEGUP_F_main_BB__74_24)
   %78 = trunc i64 %77 to i32 (endState: LEGUP_F_main_BB__74_24)
   %.a.i.i.i5.i = select i1 %76, i32 %78, i32 %extract.t.i.i4.i (endState: LEGUP_F_main_BB__74_24)
   %..i.i.i6.i = select i1 %76, i32 16, i32 0 (endState: LEGUP_F_main_BB__74_24)
   %79 = icmp ult i32 %.a.i.i.i5.i, 16777216 (endState: LEGUP_F_main_BB__74_24)
   br i1 %79, label %80, label %normalizeFloat64Subnormal.exit9.i
   Transition: if (%79): LEGUP_F_main_BB__80_25 default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26
state: LEGUP_F_main_BB__80_25
   %81 = or i32 %..i.i.i6.i, 8 (endState: LEGUP_F_main_BB__80_25)
   %82 = shl i32 %.a.i.i.i5.i, 8 (endState: LEGUP_F_main_BB__80_25)
   br label %normalizeFloat64Subnormal.exit9.i
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26
   %.1.i.i.i7.i = phi i32 [ %82, %80 ], [ %.a.i.i.i5.i, %74 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26)
   %shiftCount.1.i.i.i8.i = phi i32 [ %81, %80 ], [ %..i.i.i6.i, %74 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26)
   %83 = lshr i32 %.1.i.i.i7.i, 24 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26)
   %84 = getelementptr inbounds [256 x i32]* @countLeadingZeros32.countLeadingZerosHigh, i32 0, i32 %83 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_26)
   %85 = load i32* %84, align 4, !tbaa !5 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27
   %86 = add i32 %shiftCount.1.i.i.i8.i, %85 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   %87 = add nsw i32 %86, -11 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   %88 = zext i32 %87 to i64 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   %89 = shl i64 %5, %88 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   %90 = sub i32 12, %86 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9i_27)
   br label %91
   Transition: default: LEGUP_F_main_BB__91_28
state: LEGUP_F_main_BB__91_28
   %92 = phi i32 [ %90, %normalizeFloat64Subnormal.exit9.i ], [ %7, %68 ] (endState: LEGUP_F_main_BB__91_28)
   %93 = phi i64 [ %89, %normalizeFloat64Subnormal.exit9.i ], [ %5, %68 ] (endState: LEGUP_F_main_BB__91_28)
   %94 = icmp eq i32 %10, 0 (endState: LEGUP_F_main_BB__91_28)
   br i1 %94, label %95, label %115
   Transition: if (%94): LEGUP_F_main_BB__95_29 default: LEGUP_F_main_BB__115_35
state: LEGUP_F_main_BB__95_29
   switch i32 %2, label %96 [
    i32 4, label %98
    i32 0, label %98
  ]
   Transition: switch (%2) 4: LEGUP_F_main_BB__98_31 0: LEGUP_F_main_BB__98_31 default: LEGUP_F_main_BB__96_30
state: LEGUP_F_main_BB__96_30
   %97 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB__96_30)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__98_31
   %99 = lshr i64 %8, 32 (endState: LEGUP_F_main_BB__98_31)
   %extract.t.i.i.i = trunc i64 %99 to i32 (endState: LEGUP_F_main_BB__98_31)
   %100 = icmp ult i32 %extract.t.i.i.i, 65536 (endState: LEGUP_F_main_BB__98_31)
   %101 = shl nuw nsw i64 %99, 16 (endState: LEGUP_F_main_BB__98_31)
   %102 = trunc i64 %101 to i32 (endState: LEGUP_F_main_BB__98_31)
   %.a.i.i.i.i = select i1 %100, i32 %102, i32 %extract.t.i.i.i (endState: LEGUP_F_main_BB__98_31)
   %..i.i.i.i = select i1 %100, i32 16, i32 0 (endState: LEGUP_F_main_BB__98_31)
   %103 = icmp ult i32 %.a.i.i.i.i, 16777216 (endState: LEGUP_F_main_BB__98_31)
   br i1 %103, label %104, label %normalizeFloat64Subnormal.exit.i
   Transition: if (%103): LEGUP_F_main_BB__104_32 default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
state: LEGUP_F_main_BB__104_32
   %105 = or i32 %..i.i.i.i, 8 (endState: LEGUP_F_main_BB__104_32)
   %106 = shl i32 %.a.i.i.i.i, 8 (endState: LEGUP_F_main_BB__104_32)
   br label %normalizeFloat64Subnormal.exit.i
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
   %.1.i.i.i.i = phi i32 [ %106, %104 ], [ %.a.i.i.i.i, %98 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %shiftCount.1.i.i.i.i = phi i32 [ %105, %104 ], [ %..i.i.i.i, %98 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %107 = lshr i32 %.1.i.i.i.i, 24 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %108 = getelementptr inbounds [256 x i32]* @countLeadingZeros32.countLeadingZerosHigh, i32 0, i32 %107 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %109 = load i32* %108, align 4, !tbaa !5 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34
   %110 = add i32 %shiftCount.1.i.i.i.i, %109 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %111 = add nsw i32 %110, -11 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %112 = zext i32 %111 to i64 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %113 = shl i64 %8, %112 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %114 = sub i32 12, %110 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   br label %115
   Transition: default: LEGUP_F_main_BB__115_35
state: LEGUP_F_main_BB__115_35
   %116 = phi i32 [ %114, %normalizeFloat64Subnormal.exit.i ], [ %10, %91 ] (endState: LEGUP_F_main_BB__115_35)
   %117 = phi i64 [ %113, %normalizeFloat64Subnormal.exit.i ], [ %8, %91 ] (endState: LEGUP_F_main_BB__115_35)
   %118 = add nsw i32 %116, %92 (endState: LEGUP_F_main_BB__115_35)
   %119 = shl i64 %93, 10 (endState: LEGUP_F_main_BB__115_35)
   %120 = shl i64 %117, 11 (endState: LEGUP_F_main_BB__115_35)
   %121 = lshr i64 %93, 22 (endState: LEGUP_F_main_BB__115_35)
   %122 = and i64 %121, 3221225471 (endState: LEGUP_F_main_BB__115_35)
   %123 = or i64 %122, 1073741824 (endState: LEGUP_F_main_BB__115_35)
   %124 = lshr i64 %117, 21 (endState: LEGUP_F_main_BB__115_35)
   %125 = and i64 %124, 2147483647 (endState: LEGUP_F_main_BB__115_35)
   %126 = or i64 %125, 2147483648 (endState: LEGUP_F_main_BB__115_35)
   %127 = and i64 %119, 4294966272 (endState: LEGUP_F_main_BB__115_35)
   %128 = and i64 %120, 4294965248 (endState: LEGUP_F_main_BB__115_35)
   %129 = mul i64 %128, %127 (endState: LEGUP_F_main_BB__115_36)
   %130 = mul i64 %126, %127 (endState: LEGUP_F_main_BB__115_36)
   %131 = mul i64 %128, %123 (endState: LEGUP_F_main_BB__115_36)
   %132 = mul i64 %126, %123 (endState: LEGUP_F_main_BB__115_36)
   Transition: default: LEGUP_F_main_BB__115_36
state: LEGUP_F_main_BB__115_36
   %overflow_intrinsic = zext i64 %130 to i65 (endState: LEGUP_F_main_BB__115_36)
   %overflow_intrinsic1 = zext i64 %131 to i65 (endState: LEGUP_F_main_BB__115_36)
   %overflow_intrinsic2 = add nuw i65 %overflow_intrinsic, %overflow_intrinsic1 (endState: LEGUP_F_main_BB__115_36)
   %overflow_intrinsic_sum = trunc i65 %overflow_intrinsic2 to i64 (endState: LEGUP_F_main_BB__115_36)
   %133 = lshr i65 %overflow_intrinsic2, 32 (endState: LEGUP_F_main_BB__115_36)
   %.tr = trunc i65 %133 to i64 (endState: LEGUP_F_main_BB__115_36)
   %134 = and i64 %.tr, 4294967296 (endState: LEGUP_F_main_BB__115_36)
   %135 = lshr i64 %overflow_intrinsic_sum, 32 (endState: LEGUP_F_main_BB__115_36)
   %137 = shl i64 %overflow_intrinsic_sum, 32 (endState: LEGUP_F_main_BB__115_36)
   %overflow_intrinsic4 = zext i64 %129 to i65 (endState: LEGUP_F_main_BB__115_36)
   %overflow_intrinsic5 = zext i64 %137 to i65 (endState: LEGUP_F_main_BB__115_36)
   Transition: default: LEGUP_F_main_BB__115_37
state: LEGUP_F_main_BB__115_37
   %136 = or i64 %134, %135 (endState: LEGUP_F_main_BB__115_37)
   %overflow_intrinsic6 = add nuw i65 %overflow_intrinsic4, %overflow_intrinsic5 (endState: LEGUP_F_main_BB__115_37)
   %overflow_intrinsic_sum7 = trunc i65 %overflow_intrinsic6 to i64 (endState: LEGUP_F_main_BB__115_37)
   %overflow_intrinsic8 = lshr i65 %overflow_intrinsic6, 64 (endState: LEGUP_F_main_BB__115_37)
   %138 = trunc i65 %overflow_intrinsic8 to i64 (endState: LEGUP_F_main_BB__115_37)
   Transition: default: LEGUP_F_main_BB__115_38
state: LEGUP_F_main_BB__115_38
   %139 = add i64 %138, %132 (endState: LEGUP_F_main_BB__115_38)
   %140 = add i64 %139, %136 (endState: LEGUP_F_main_BB__115_38)
   %141 = icmp ne i64 %overflow_intrinsic_sum7, 0 (endState: LEGUP_F_main_BB__115_38)
   %142 = zext i1 %141 to i64 (endState: LEGUP_F_main_BB__115_38)
   %143 = or i64 %140, %142 (endState: LEGUP_F_main_BB__115_38)
   %144 = shl i64 %143, 1 (endState: LEGUP_F_main_BB__115_38)
   %145 = icmp sgt i64 %144, -1 (endState: LEGUP_F_main_BB__115_38)
   %..i = select i1 %145, i64 %144, i64 %143 (endState: LEGUP_F_main_BB__115_38)
   %.20.v.i = select i1 %145, i32 -1024, i32 -1023 (endState: LEGUP_F_main_BB__115_38)
   %.20.i = add i32 %118, %.20.v.i (endState: LEGUP_F_main_BB__115_38)
   %.tr.i.i = trunc i64 %..i to i32 (endState: LEGUP_F_main_BB__115_38)
   %146 = and i32 %.tr.i.i, 1023 (endState: LEGUP_F_main_BB__115_38)
   %147 = and i32 %.20.i, 65535 (endState: LEGUP_F_main_BB__115_38)
   Transition: default: LEGUP_F_main_BB__115_39
state: LEGUP_F_main_BB__115_39
   %148 = icmp ugt i32 %147, 2044 (endState: LEGUP_F_main_BB__115_39)
   br i1 %148, label %149, label %.thread.i.i
   Transition: if (%148): LEGUP_F_main_BB__149_40 default: LEGUP_F_main_BB_threadii_50
state: LEGUP_F_main_BB__149_40
   %150 = icmp sgt i32 %.20.i, 2045 (endState: LEGUP_F_main_BB__149_40)
   br i1 %150, label %156, label %151
   Transition: if (%150): LEGUP_F_main_BB__156_43 default: LEGUP_F_main_BB__151_41
state: LEGUP_F_main_BB__151_41
   %152 = icmp eq i32 %.20.i, 2045 (endState: LEGUP_F_main_BB__151_41)
   br i1 %152, label %153, label %160
   Transition: if (%152): LEGUP_F_main_BB__153_42 default: LEGUP_F_main_BB__160_44
state: LEGUP_F_main_BB__153_42
   %154 = add i64 %..i, 512 (endState: LEGUP_F_main_BB__153_42)
   %155 = icmp slt i64 %154, 0 (endState: LEGUP_F_main_BB__153_42)
   br i1 %155, label %156, label %.thread.i.i
   Transition: if (%155): LEGUP_F_main_BB__156_43 default: LEGUP_F_main_BB_threadii_50
state: LEGUP_F_main_BB__156_43
   %157 = or i32 %float_exception_flags.0, 9 (endState: LEGUP_F_main_BB__156_43)
   %158 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB__156_43)
   %159 = or i64 %158, 9218868437227405312 (endState: LEGUP_F_main_BB__156_43)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB__160_44
   %161 = icmp slt i32 %.20.i, 0 (endState: LEGUP_F_main_BB__160_44)
   br i1 %161, label %162, label %.thread.i.i
   Transition: if (%161): LEGUP_F_main_BB__162_45 default: LEGUP_F_main_BB_threadii_50
state: LEGUP_F_main_BB__162_45
   %163 = icmp sgt i32 %.20.i, -64 (endState: LEGUP_F_main_BB__162_45)
   br i1 %163, label %164, label %174
   Transition: if (%163): LEGUP_F_main_BB__164_46 default: LEGUP_F_main_BB__174_47
state: LEGUP_F_main_BB__164_46
   %165 = sub nsw i32 0, %.20.i (endState: LEGUP_F_main_BB__164_46)
   %166 = zext i32 %165 to i64 (endState: LEGUP_F_main_BB__164_46)
   %167 = lshr i64 %..i, %166 (endState: LEGUP_F_main_BB__164_46)
   %168 = and i32 %.20.i, 63 (endState: LEGUP_F_main_BB__164_46)
   %169 = zext i32 %168 to i64 (endState: LEGUP_F_main_BB__164_46)
   %170 = shl i64 %..i, %169 (endState: LEGUP_F_main_BB__164_46)
   %171 = icmp ne i64 %170, 0 (endState: LEGUP_F_main_BB__164_46)
   %172 = zext i1 %171 to i64 (endState: LEGUP_F_main_BB__164_46)
   %173 = or i64 %172, %167 (endState: LEGUP_F_main_BB__164_46)
   br label %shift64RightJamming.exit.i.i
   Transition: default: LEGUP_F_main_BB_shift64RightJammingexitii_48
state: LEGUP_F_main_BB__174_47
   %175 = icmp ne i64 %..i, 0 (endState: LEGUP_F_main_BB__174_47)
   %176 = zext i1 %175 to i64 (endState: LEGUP_F_main_BB__174_47)
   br label %shift64RightJamming.exit.i.i
   Transition: default: LEGUP_F_main_BB_shift64RightJammingexitii_48
state: LEGUP_F_main_BB_shift64RightJammingexitii_48
   %z.0.i.i.i = phi i64 [ %173, %164 ], [ %176, %174 ] (endState: LEGUP_F_main_BB_shift64RightJammingexitii_48)
   %.tr3.i.i = trunc i64 %z.0.i.i.i to i32 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_48)
   %177 = and i32 %.tr3.i.i, 1023 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_48)
   %178 = icmp eq i32 %177, 0 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_48)
   br i1 %178, label %.thread6.i.i, label %179
   Transition: if (%178): LEGUP_F_main_BB_thread6ii_51 default: LEGUP_F_main_BB__179_49
state: LEGUP_F_main_BB__179_49
   %180 = or i32 %float_exception_flags.0, 4 (endState: LEGUP_F_main_BB__179_49)
   br label %.thread.i.i
   Transition: default: LEGUP_F_main_BB_threadii_50
state: LEGUP_F_main_BB_threadii_50
   %float_exception_flags.3 = phi i32 [ %float_exception_flags.0, %153 ], [ %180, %179 ], [ %float_exception_flags.0, %160 ], [ %float_exception_flags.0, %115 ] (endState: LEGUP_F_main_BB_threadii_50)
   %zSig5.i.i = phi i64 [ %..i, %153 ], [ %z.0.i.i.i, %179 ], [ %..i, %160 ], [ %..i, %115 ] (endState: LEGUP_F_main_BB_threadii_50)
   %.02.i.i = phi i32 [ 2045, %153 ], [ 0, %179 ], [ %.20.i, %160 ], [ %.20.i, %115 ] (endState: LEGUP_F_main_BB_threadii_50)
   %roundBits.0.i.i = phi i32 [ %146, %153 ], [ %177, %179 ], [ %146, %160 ], [ %146, %115 ] (endState: LEGUP_F_main_BB_threadii_50)
   %181 = icmp ne i32 %roundBits.0.i.i, 0 (endState: LEGUP_F_main_BB_threadii_50)
   %182 = zext i1 %181 to i32 (endState: LEGUP_F_main_BB_threadii_50)
   %float_exception_flags.3. = or i32 %float_exception_flags.3, %182 (endState: LEGUP_F_main_BB_threadii_50)
   br label %.thread6.i.i
   Transition: default: LEGUP_F_main_BB_thread6ii_51
state: LEGUP_F_main_BB_thread6ii_51
   %float_exception_flags.4 = phi i32 [ %float_exception_flags.0, %shift64RightJamming.exit.i.i ], [ %float_exception_flags.3., %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_51)
   %roundBits.09.i.i = phi i32 [ 0, %shift64RightJamming.exit.i.i ], [ %roundBits.0.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_51)
   %.028.i.i = phi i32 [ 0, %shift64RightJamming.exit.i.i ], [ %.02.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_51)
   %zSig57.i.i = phi i64 [ %z.0.i.i.i, %shift64RightJamming.exit.i.i ], [ %zSig5.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_51)
   %183 = add i64 %zSig57.i.i, 512 (endState: LEGUP_F_main_BB_thread6ii_51)
   %184 = lshr i64 %183, 10 (endState: LEGUP_F_main_BB_thread6ii_51)
   %185 = icmp eq i32 %roundBits.09.i.i, 512 (endState: LEGUP_F_main_BB_thread6ii_51)
   %186 = zext i1 %185 to i32 (endState: LEGUP_F_main_BB_thread6ii_51)
   %187 = xor i32 %186, -1 (endState: LEGUP_F_main_BB_thread6ii_51)
   %188 = sext i32 %187 to i64 (endState: LEGUP_F_main_BB_thread6ii_51)
   %189 = and i64 %184, %188 (endState: LEGUP_F_main_BB_thread6ii_51)
   %190 = icmp eq i64 %189, 0 (endState: LEGUP_F_main_BB_thread6ii_51)
   %191 = shl nuw i64 %12, 63 (endState: LEGUP_F_main_BB_thread6ii_51)
   %192 = zext i32 %.028.i.i to i64 (endState: LEGUP_F_main_BB_thread6ii_51)
   %.op.i.i = shl i64 %192, 52 (endState: LEGUP_F_main_BB_thread6ii_51)
   %193 = select i1 %190, i64 0, i64 %.op.i.i (endState: LEGUP_F_main_BB_thread6ii_51)
   %194 = or i64 %189, %191 (endState: LEGUP_F_main_BB_thread6ii_51)
   %195 = add i64 %193, %194 (endState: LEGUP_F_main_BB_thread6ii_51)
   br label %float64_mul.exit
   Transition: default: LEGUP_F_main_BB_float64_mulexit_52
state: LEGUP_F_main_BB_float64_mulexit_52
   %float_exception_flags.5 = phi i32 [ %.float_exception_flags.0, %float64_is_signaling_nan.exit.i12.i ], [ %38, %37 ], [ %float_exception_flags.0, %39 ], [ %64, %63 ], [ %float_exception_flags.0, %65 ], [ %.float_exception_flags.07, %float64_is_signaling_nan.exit.i.i ], [ %float_exception_flags.0, %72 ], [ %float_exception_flags.0, %96 ], [ %157, %156 ], [ %float_exception_flags.4, %.thread6.i.i ] (endState: LEGUP_F_main_BB_float64_mulexit_52)
   %.0.i = phi i64 [ %.mux2.i16.i, %float64_is_signaling_nan.exit.i12.i ], [ 9223372036854775807, %37 ], [ %41, %39 ], [ 9223372036854775807, %63 ], [ %67, %65 ], [ %.mux2.i.i, %float64_is_signaling_nan.exit.i.i ], [ %73, %72 ], [ %97, %96 ], [ %159, %156 ], [ %195, %.thread6.i.i ] (endState: LEGUP_F_main_BB_float64_mulexit_52)
   %196 = load i64* %scevgep, align 8, !tbaa !1 (endState: LEGUP_F_main_BB_float64_mulexit_53)
   %201 = add nsw i32 %2, 1 (endState: LEGUP_F_main_BB_float64_mulexit_52)
   %exitcond1 = icmp eq i32 %201, 20 (endState: LEGUP_F_main_BB_float64_mulexit_52)
   Transition: default: LEGUP_F_main_BB_float64_mulexit_53
state: LEGUP_F_main_BB_float64_mulexit_53
   %197 = icmp eq i64 %.0.i, %196 (endState: LEGUP_F_main_BB_float64_mulexit_53)
   %198 = zext i1 %197 to i32 (endState: LEGUP_F_main_BB_float64_mulexit_53)
   %199 = add nsw i32 %198, %main_result.02 (endState: LEGUP_F_main_BB_float64_mulexit_53)
   %200 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([65 x i8]* @.str, i32 0, i32 0), i64 %3, i64 %4, i64 %196, i64 %.0.i) #1 (endState: LEGUP_F_main_BB_float64_mulexit_53)
   br i1 %exitcond1, label %202, label %1
   Transition: if (%exitcond1): LEGUP_F_main_BB__202_54 default: LEGUP_F_main_BB__1_1
state: LEGUP_F_main_BB__202_54
   %203 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str1, i32 0, i32 0), i32 %199) #1 (endState: LEGUP_F_main_BB__202_54)
   %204 = icmp eq i32 %199, 20 (endState: LEGUP_F_main_BB__202_54)
   br i1 %204, label %205, label %207
   Transition: if (%204): LEGUP_F_main_BB__205_55 default: LEGUP_F_main_BB__207_56
state: LEGUP_F_main_BB__205_55
   %206 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__205_55)
   br label %209
   Transition: default: LEGUP_F_main_BB__209_57
state: LEGUP_F_main_BB__207_56
   %208 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str3, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__207_56)
   br label %209
   Transition: default: LEGUP_F_main_BB__209_57
state: LEGUP_F_main_BB__209_57
   ret i32 %199
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %14 Num States: 1
Basic Block: %16 Num States: 1
Basic Block: %float64_is_signaling_nan.exit1.i11.i Num States: 1
Basic Block: %27 Num States: 1
Basic Block: %float64_is_signaling_nan.exit.i12.i Num States: 2
Basic Block: %33 Num States: 1
Basic Block: %37 Num States: 1
Basic Block: %39 Num States: 1
Basic Block: %42 Num States: 1
Basic Block: %44 Num States: 1
Basic Block: %float64_is_signaling_nan.exit1.i.i Num States: 1
Basic Block: %53 Num States: 1
Basic Block: %float64_is_signaling_nan.exit.i.i Num States: 2
Basic Block: %59 Num States: 1
Basic Block: %63 Num States: 1
Basic Block: %65 Num States: 1
Basic Block: %68 Num States: 1
Basic Block: %70 Num States: 1
Basic Block: %72 Num States: 1
Basic Block: %74 Num States: 1
Basic Block: %80 Num States: 1
Basic Block: %normalizeFloat64Subnormal.exit9.i Num States: 2
Basic Block: %91 Num States: 1
Basic Block: %95 Num States: 1
Basic Block: %96 Num States: 1
Basic Block: %98 Num States: 1
Basic Block: %104 Num States: 1
Basic Block: %normalizeFloat64Subnormal.exit.i Num States: 2
Basic Block: %115 Num States: 5
Basic Block: %149 Num States: 1
Basic Block: %151 Num States: 1
Basic Block: %153 Num States: 1
Basic Block: %156 Num States: 1
Basic Block: %160 Num States: 1
Basic Block: %162 Num States: 1
Basic Block: %164 Num States: 1
Basic Block: %174 Num States: 1
Basic Block: %shift64RightJamming.exit.i.i Num States: 1
Basic Block: %179 Num States: 1
Basic Block: %.thread.i.i Num States: 1
Basic Block: %.thread6.i.i Num States: 1
Basic Block: %float64_mul.exit Num States: 2
Basic Block: %202 Num States: 1
Basic Block: %205 Num States: 1
Basic Block: %207 Num States: 1
Basic Block: %209 Num States: 1
End Function: main
--------------------------------------------------------------------------------


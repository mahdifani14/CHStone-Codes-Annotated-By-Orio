//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Apr 15 11:37:15 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: encode
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
accumc_local_mem_dual_port    1                             
accumd_local_mem_dual_port    1                             
altfp_fptosi_64               1                             
altfp_multiply_64             1                             
altfp_sitofp_64               1                             
dec_del_bph_local_mem_dual_port1                             
dec_del_bpl_local_mem_dual_port1                             
dec_del_dhx_local_mem_dual_port2                             
dec_del_dltx_local_mem_dual_port2                             
mem_dual_port                 2                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    2                             
signed_divide_32              1                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             

Running Bipartite Weighted Matching on function: encode
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        0                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        1                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* getelementptr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* getelementptr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %11 = load i32* %tqmf_ptr.0,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %11 = load i32* %tqmf_ptr.0,... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %12 = load i32* %h_ptr.0, al... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %12 = load i32* %h_ptr.0, al... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %11 = load i32* %tqmf_ptr.0,... (idx: 0)        5                             5                             
  %12 = load i32* %h_ptr.0, al... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %11 = load i32* %tqmf_ptr.0,... (idx: 0)        1                             0                             
  %12 = load i32* %h_ptr.0, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load i32* %tqmf_ptr.0,... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 1)
  %12 = load i32* %h_ptr.0, al... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_encode_BB__10
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %15 = load i32* %scevgep25, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %15 = load i32* %scevgep25, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %16 = load i32* %scevgep27, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %16 = load i32* %scevgep27, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %15 = load i32* %scevgep25, ... (idx: 0)        6                             6                             
  %16 = load i32* %scevgep27, ... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %15 = load i32* %scevgep25, ... (idx: 0)        1                             0                             
  %16 = load i32* %scevgep27, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load i32* %scevgep25, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 2)
  %16 = load i32* %scevgep27, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_encode_BB__20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %21 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %21 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %22 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %22 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %21 = load i32* getelementpt... (idx: 0)        -3                            -3                            
  %22 = load i32* getelementpt... (idx: 1)        -3                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %21 = load i32* getelementpt... (idx: 0)        1                             0                             
  %22 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 2)
  %22 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_encode_BB__25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %28 = load i32* %tqmf_ptr1.0... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %28 = load i32* %tqmf_ptr1.0... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %28 = load i32* %tqmf_ptr1.0... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %28 = load i32* %tqmf_ptr1.0... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = load i32* %tqmf_ptr1.0... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_encode_BB__25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %28, i32* %tqmf_pt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %28, i32* %tqmf_pt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %28, i32* %tqmf_pt... (idx: 0)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %28, i32* %tqmf_pt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %28, i32* %tqmf_pt... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin1, i32* getele... (idx: 0)        -2                            -1                            
  store i32 %xin2, i32* getele... (idx: 1)        -2                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin1, i32* getele... (idx: 0)        1                             0                             
  store i32 %xin2, i32* getele... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %xin1, i32* getele... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
  store i32 %xin2, i32* getele... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__30
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %33 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %33 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %34 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %34 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %33 = load i32* getelementpt... (idx: 0)        -2                            -1                            
  %34 = load i32* getelementpt... (idx: 1)        -2                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %33 = load i32* getelementpt... (idx: 0)        1                             0                             
  %34 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
  %34 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %38 = load i32* %.0.i, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %38 = load i32* %.0.i, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %39 = load i32* %.01.i, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %39 = load i32* %.01.i, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %38 = load i32* %.0.i, align... (idx: 0)        8                             9                             
  %39 = load i32* %.01.i, alig... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %38 = load i32* %.0.i, align... (idx: 0)        1                             0                             
  %39 = load i32* %.01.i, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load i32* %.0.i, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %39 = load i32* %.01.i, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %49 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %49 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %50 = load i32* @al1, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %50 = load i32* @al1, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %49 = load i32* @rlt1, align... (idx: 0)        -1                            0                             
  %50 = load i32* @al1, align ... (idx: 1)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %49 = load i32* @rlt1, align... (idx: 0)        1                             0                             
  %50 = load i32* @al1, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = load i32* @rlt1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %50 = load i32* @al1, align ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %51 = load i32* @rlt2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %51 = load i32* @rlt2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %52 = load i32* @al2, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %52 = load i32* @al2, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %51 = load i32* @rlt2, align... (idx: 0)        -1                            0                             
  %52 = load i32* @al2, align ... (idx: 1)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %51 = load i32* @rlt2, align... (idx: 0)        1                             0                             
  %52 = load i32* @al2, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = load i32* @rlt2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %52 = load i32* @al2, align ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %61 = load i32* @detl, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %61 = load i32* @detl, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %61 = load i32* @detl, align... (idx: 0)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %61 = load i32* @detl, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %61 = load i32* @detl, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_encode_BB__67
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %68 = load i32* %scevgep14, ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %68 = load i32* %scevgep14, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = load i32* %scevgep14, ... (idx: 0) -> encode_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_encode_BB_loopexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %80 = load i32* @nbl, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %80 = load i32* @nbl, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %80 = load i32* @nbl, align ... (idx: 0)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %80 = load i32* @nbl, align ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = load i32* @nbl, align ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_encode_BB_loopexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %74 = load i32* %.in, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %74 = load i32* %.in, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %74 = load i32* %.in, align ... (idx: 0)        9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %74 = load i32* %.in, align ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load i32* %.in, align ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_encode_BB_loopexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %77 = load i32* %76, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_0
  %77 = load i32* %76, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_1
  %84 = load i32* %83, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_0
  %84 = load i32* %83, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %77 = load i32* %76, align 4 (idx: 0)           10                            10                            
  %84 = load i32* %83, align 4 (idx: 1)           10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %77 = load i32* %76, align 4 (idx: 0)           1                             0                             
  %84 = load i32* %83, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = load i32* %76, align 4 (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 6)
  %84 = load i32* %83, align 4 (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_encode_BB_loopexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %74, i32* @il, ali... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %74, i32* @il, ali... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %74, i32* @il, ali... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %74, i32* @il, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %74, i32* @il, ali... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_encode_BB_logsclexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %.1.i23, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %.1.i23, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %93 = load i32* %92, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_0
  %93 = load i32* %92, align 4 can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %.1.i23, i32* @nbl... (idx: 0)        12                            11                            
  %93 = load i32* %92, align 4 (idx: 1)           12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %.1.i23, i32* @nbl... (idx: 0)        1                             0                             
  %93 = load i32* %92, align 4 (idx: 1)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %.1.i23, i32* @nbl... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 8)
  %93 = load i32* %92, align 4 (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_encode_BB_logsclexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %96, i32* @detl, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %96, i32* @detl, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %96, i32* @detl, a... (idx: 0)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %96, i32* @detl, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %96, i32* @detl, a... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_encode_BB__100
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %101 = load i32* %scevgep10,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %101 = load i32* %scevgep10,... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %101 = load i32* %scevgep10,... (idx: 0)        13                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %101 = load i32* %scevgep10,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %101 = load i32* %scevgep10,... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_encode_BB__100
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %103, i32* %scevge... can share an input with another operation already assigned to encode_mem_dual_port_0
  store i32 %103, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %103, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %103, i32* %scevge... (idx: 0)        14                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %103, i32* %scevge... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %103, i32* %scevge... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_encode_BB__106
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %107 = load i32* %scevgep13,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %107 = load i32* %scevgep13,... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %112 = load i32* %scevgep12,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %112 = load i32* %scevgep12,... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %107 = load i32* %scevgep13,... (idx: 0)        15                            13                            
  %112 = load i32* %scevgep12,... (idx: 1)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %107 = load i32* %scevgep13,... (idx: 0)        1                             0                             
  %112 = load i32* %scevgep12,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = load i32* %scevgep13,... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  %112 = load i32* %scevgep12,... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_encode_BB__106
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %115, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %115, i32* %scevge... can share an input with another operation already assigned to encode_mem_dual_port_1
  store i32 %115, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %115, i32* %scevge... (idx: 0)        26                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %115, i32* %scevge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %115, i32* %scevge... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB_upzeroexit21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %117 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %117 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %118 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %118 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %117 = load i32* getelementp... (idx: 0)        6                             5                             
  %118 = load i32* getelementp... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %117 = load i32* getelementp... (idx: 0)        1                             0                             
  %118 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  %118 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB_upzeroexit21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %119 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %119 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %34, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %34, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %119 = load i32* getelementp... (idx: 0)        6                             5                             
  store i32 %34, i32* geteleme... (idx: 1)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %119 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %34, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  store i32 %34, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_encode_BB_upzeroexit21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %79, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %79, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %120 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %120 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %79, i32* geteleme... (idx: 0)        16                            16                            
  %120 = load i32* @plt1, alig... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %79, i32* geteleme... (idx: 0)        1                             0                             
  %120 = load i32* @plt1, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %79, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 12)
  %120 = load i32* @plt1, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_encode_BB_upzeroexit21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %117, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %117, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %121 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %121 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %117, i32* getelem... (idx: 0)        17                            16                            
  %121 = load i32* @plt2, alig... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %117, i32* getelem... (idx: 0)        1                             0                             
  %121 = load i32* @plt2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %117, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 13)
  %121 = load i32* @plt2, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_encode_BB_upzeroexit21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %118, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %118, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %119, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %119, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %118, i32* getelem... (idx: 0)        18                            16                            
  store i32 %119, i32* getelem... (idx: 1)        18                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %118, i32* getelem... (idx: 0)        1                             0                             
  store i32 %119, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %118, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 14)
  store i32 %119, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_encode_BB_uppol2exit17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %49, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %49, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %120, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %120, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %49, i32* @rlt2, a... (idx: 0)        19                            17                            
  store i32 %120, i32* @plt2, ... (idx: 1)        19                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %49, i32* @rlt2, a... (idx: 0)        1                             0                             
  store i32 %120, i32* @plt2, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %49, i32* @rlt2, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  store i32 %120, i32* @plt2, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_uppol2exit17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %97, i32* @plt1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %97, i32* @plt1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %147 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %147 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %97, i32* @plt1, a... (idx: 0)        20                            18                            
  %147 = load i32* getelementp... (idx: 1)        10                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %97, i32* @plt1, a... (idx: 0)        1                             0                             
  %147 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %97, i32* @plt1, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 16)
  %147 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_uppol2exit17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl2.1.i16, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl2.1.i16, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %148 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %148 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl2.1.i16, i32* ... (idx: 0)        21                            18                            
  %148 = load i32* getelementp... (idx: 1)        11                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl2.1.i16, i32* ... (idx: 0)        1                             0                             
  %148 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl2.1.i16, i32* ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  %148 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_uppol2exit17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i11, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i11, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %146, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %146, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i11, i32* ... (idx: 0)        22                            18                            
  store i32 %146, i32* @rlt1, ... (idx: 1)        22                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i11, i32* ... (idx: 0)        1                             0                             
  store i32 %146, i32* @rlt1, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i11, i32* ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 18)
  store i32 %146, i32* @rlt1, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB__151
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %152 = load i32* %.0.i7, ali... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %152 = load i32* %.0.i7, ali... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %153 = load i32* %.01.i6, al... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %153 = load i32* %.01.i6, al... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %152 = load i32* %.0.i7, ali... (idx: 0)        23                            19                            
  %153 = load i32* %.01.i6, al... (idx: 1)        23                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %152 = load i32* %.0.i7, ali... (idx: 0)        1                             0                             
  %153 = load i32* %.01.i6, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %152 = load i32* %.0.i7, ali... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  %153 = load i32* %.01.i6, al... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_filtezexit8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %157 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %157 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %158 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %158 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %157 = load i32* @rh1, align... (idx: 0)        14                            10                            
  %158 = load i32* @ah1, align... (idx: 1)        14                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %157 = load i32* @rh1, align... (idx: 0)        1                             0                             
  %158 = load i32* @ah1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %157 = load i32* @rh1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  %158 = load i32* @ah1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_filtezexit8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %159 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %160 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %160 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %159 = load i32* @rh2, align... (idx: 0)        14                            10                            
  %160 = load i32* @ah2, align... (idx: 1)        14                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %159 = load i32* @rh2, align... (idx: 0)        1                             0                             
  %160 = load i32* @ah2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load i32* @rh2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  %160 = load i32* @ah2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_filtezexit8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %170 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %170 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %181 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %181 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %170 = load i32* @deth, alig... (idx: 0)        14                            10                            
  %181 = load i32* @nbh, align... (idx: 1)        14                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %170 = load i32* @deth, alig... (idx: 0)        1                             0                             
  %181 = load i32* @nbh, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %170 = load i32* @deth, alig... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  %181 = load i32* @nbh, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_filtezexit8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %178 = load i32* %177, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %178 = load i32* %177, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %185 = load i32* %184, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %185 = load i32* %184, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %178 = load i32* %177, align... (idx: 0)        24                            20                            
  %185 = load i32* %184, align... (idx: 1)        24                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %178 = load i32* %177, align... (idx: 0)        1                             0                             
  %185 = load i32* %184, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %178 = load i32* %177, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 20)
  %185 = load i32* %184, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_encode_BB_logschexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %.1.i, i32* @nbh, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %.1.i, i32* @nbh, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %194 = load i32* %193, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %194 = load i32* %193, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %.1.i, i32* @nbh, ... (idx: 0)        25                            21                            
  %194 = load i32* %193, align... (idx: 1)        25                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %.1.i, i32* @nbh, ... (idx: 0)        1                             0                             
  %194 = load i32* %193, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %.1.i, i32* @nbh, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 21)
  %194 = load i32* %193, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_encode_BB_logschexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %197, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %197, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %197, i32* @deth, ... (idx: 0)        26                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %197, i32* @deth, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %197, i32* @deth, ... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_encode_BB__201
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %202 = load i32* %scevgep, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %202 = load i32* %scevgep, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %202 = load i32* %scevgep, a... (idx: 0)        26                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %202 = load i32* %scevgep, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %202 = load i32* %scevgep, a... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB__201
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %204, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %204, i32* %scevge... can share an input with another operation already assigned to encode_mem_dual_port_1
  store i32 %204, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %204, i32* %scevge... (idx: 0)        36                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %204, i32* %scevge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %204, i32* %scevge... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_encode_BB__207
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %208 = load i32* %scevgep5, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %208 = load i32* %scevgep5, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %213 = load i32* %scevgep4, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %213 = load i32* %scevgep4, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %208 = load i32* %scevgep5, ... (idx: 0)        26                            25                            
  %213 = load i32* %scevgep4, ... (idx: 1)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %208 = load i32* %scevgep5, ... (idx: 0)        1                             0                             
  %213 = load i32* %scevgep4, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %208 = load i32* %scevgep5, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 22)
  %213 = load i32* %scevgep4, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_encode_BB__207
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %216, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %216, i32* %scevge... can share an input with another operation already assigned to encode_mem_dual_port_1
  store i32 %216, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %216, i32* %scevge... (idx: 0)        37                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %216, i32* %scevge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %216, i32* %scevge... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %218 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %218 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %219 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %219 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %218 = load i32* getelementp... (idx: 0)        17                            17                            
  %219 = load i32* getelementp... (idx: 1)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %218 = load i32* getelementp... (idx: 0)        1                             0                             
  %219 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %218 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 22)
  %219 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %220 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %220 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %148, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %148, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %220 = load i32* getelementp... (idx: 0)        17                            17                            
  store i32 %148, i32* getelem... (idx: 1)        27                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %220 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %148, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 22)
  store i32 %148, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %180, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %180, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %221 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %221 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %180, i32* getelem... (idx: 0)        27                            28                            
  %221 = load i32* @ph1, align... (idx: 1)        17                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %180, i32* getelem... (idx: 0)        1                             0                             
  %221 = load i32* @ph1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %180, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 23)
  %221 = load i32* @ph1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %218, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %218, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %222 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %222 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %218, i32* getelem... (idx: 0)        28                            28                            
  %222 = load i32* @ph2, align... (idx: 1)        18                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %218, i32* getelem... (idx: 0)        1                             0                             
  %222 = load i32* @ph2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %218, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 24)
  %222 = load i32* @ph2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %219, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %219, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %220, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %220, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %219, i32* getelem... (idx: 0)        29                            28                            
  store i32 %220, i32* getelem... (idx: 1)        29                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %219, i32* getelem... (idx: 0)        1                             0                             
  store i32 %220, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %219, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 25)
  store i32 %220, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_encode_BB_uppol2exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %157, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %157, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %221, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %221, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %157, i32* @rh2, a... (idx: 0)        30                            29                            
  store i32 %221, i32* @ph2, a... (idx: 1)        30                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %157, i32* @rh2, a... (idx: 0)        1                             0                             
  store i32 %221, i32* @ph2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %157, i32* @rh2, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 26)
  store i32 %221, i32* @ph2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_encode_BB_uppol2exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl2.1.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl2.1.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %198, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %198, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl2.1.i, i32* @a... (idx: 0)        31                            30                            
  store i32 %198, i32* @ph1, a... (idx: 1)        31                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl2.1.i, i32* @a... (idx: 0)        1                             0                             
  store i32 %198, i32* @ph1, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl2.1.i, i32* @a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 27)
  store i32 %198, i32* @ph1, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_encode_BB_uppol2exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %247, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %247, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        32                            31                            
  store i32 %247, i32* @rh1, a... (idx: 1)        32                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        1                             0                             
  store i32 %247, i32* @rh1, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i, i32* @a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 28)
  store i32 %247, i32* @rh1, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 27)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        0                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        1                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 32, i32* @detl, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 8, i32* @deth, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rlt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @rlt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rlt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rlt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @plt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @plt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @plt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @plt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @al1, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @al1, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @al2, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @al1, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rh2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @rh2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @nbl, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rh2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ph2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ph2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rh1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ph2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ah2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ah2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ph1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ah2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @nbh, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @nbh, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ah1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @nbh, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__3
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 0, i32* %scevgep73... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 0, i32* %scevgep73... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep73... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__3
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 0, i32* %scevgep74... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 0, i32* %scevgep74... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep74... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__3
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep76... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep76... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* %scevgep75... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep75... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep76... (idx: 0)        5                             5                             
  store i32 0, i32* %scevgep75... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep76... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep75... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep76... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  store i32 0, i32* %scevgep75... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__6
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 0, i32* %scevgep68... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 0, i32* %scevgep68... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep68... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__6
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 0, i32* %scevgep69... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 0, i32* %scevgep69... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep69... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep71... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep71... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* %scevgep70... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep70... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep71... (idx: 0)        6                             6                             
  store i32 0, i32* %scevgep70... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep71... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep70... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep71... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  store i32 0, i32* %scevgep70... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep66... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep66... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep66... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep66... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep66... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__12
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 0, i32* %scevgep64... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 0, i32* %scevgep64... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep64... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__12
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 0, i32* %scevgep63... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 0, i32* %scevgep63... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep63... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %28 = sitofp i32 %i1.0.i to ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %28 = sitofp i32 %i1.0.i to ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = sitofp i32 %i1.0.i to ... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %31 = load i32* %scevgep61, ... (idx: 0)        10                            10                            
  %32 = load i32* %scevgep60, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %31 = load i32* %scevgep61, ... (idx: 0)        1                             0                             
  %32 = load i32* %scevgep60, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = load i32* %scevgep61, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %32 = load i32* %scevgep60, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %35 = sitofp i32 %19 to doub... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %35 = sitofp i32 %19 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = sitofp i32 %19 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 2)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %42 = sitofp i32 %18 to doub... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %42 = sitofp i32 %18 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = sitofp i32 %18 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 3)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %38 = load i32* %scevgep59, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %38 = load i32* %scevgep59, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %39 = load i32* %scevgep58, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %39 = load i32* %scevgep58, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %38 = load i32* %scevgep59, ... (idx: 0)        6                             6                             
  %39 = load i32* %scevgep58, ... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %38 = load i32* %scevgep59, ... (idx: 0)        1                             0                             
  %39 = load i32* %scevgep58, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load i32* %scevgep59, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 2)
  %39 = load i32* %scevgep58, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %49 = sitofp i32 %17 to doub... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %49 = sitofp i32 %17 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = sitofp i32 %17 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 4)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %56 = sitofp i32 %16 to doub... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %56 = sitofp i32 %16 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = sitofp i32 %16 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 5)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %63 = sitofp i32 %15 to doub... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %63 = sitofp i32 %15 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = sitofp i32 %15 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 6)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %29 = fmul double %28, 5.000... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %29 = fmul double %28, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = fmul double %28, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_sitofp_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %70 = sitofp i32 %14 to doub... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_sitofp_64_0        
  %70 = sitofp i32 %14 to doub... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = sitofp i32 %14 to doub... (idx: 0) -> main_altfp_sitofp_64_0 (mux inputs: 7)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %36 = fmul double %35, 5.000... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %36 = fmul double %35, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = fmul double %35, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 2)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %43 = fmul double %42, 5.000... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %43 = fmul double %42, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = fmul double %42, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 3)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %50 = fmul double %49, 5.000... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %50 = fmul double %49, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %50 = fmul double %49, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 4)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %57 = fmul double %56, 5.000... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %57 = fmul double %56, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = fmul double %56, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 5)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %64 = fmul double %63, 5.000... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %64 = fmul double %63, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = fmul double %63, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 6)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_multiply_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %71 = fmul double %70, 5.000... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_multiply_64_0      
  %71 = fmul double %70, 5.000... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = fmul double %70, 5.000... (idx: 0) -> main_altfp_multiply_64_0 (mux inputs: 7)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %30 = fptosi double %29 to i... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %30 = fptosi double %29 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = fptosi double %29 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %37 = fptosi double %36 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %37 = fptosi double %36 to i... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %37 = fptosi double %36 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = fptosi double %36 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 2)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %44 = fptosi double %43 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %44 = fptosi double %43 to i... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %44 = fptosi double %43 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %44 = fptosi double %43 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 3)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %51 = fptosi double %50 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %51 = fptosi double %50 to i... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %51 = fptosi double %50 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = fptosi double %50 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 4)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %58 = fptosi double %57 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %58 = fptosi double %57 to i... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %58 = fptosi double %57 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %58 = fptosi double %57 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 5)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %65 = fptosi double %64 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %65 = fptosi double %64 to i... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %65 = fptosi double %64 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %65 = fptosi double %64 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 6)
State: LEGUP_F_main_BB__20
Binding functional unit type: altfp_fptosi_64
Weight matrix for operation/function unit matching:
  %72 = fptosi double %71 to i... can share an output register with another operation already assigned to main_altfp_fptosi_64_0
                                                  main_altfp_fptosi_64_0        
  %72 = fptosi double %71 to i... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_altfp_fptosi_64_0        
  %72 = fptosi double %71 to i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = fptosi double %71 to i... (idx: 0) -> main_altfp_fptosi_64_0 (mux inputs: 7)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load i32* %scevgep57, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %45 = load i32* %scevgep57, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %46 = load i32* %scevgep56, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %46 = load i32* %scevgep56, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %45 = load i32* %scevgep57, ... (idx: 0)        7                             7                             
  %46 = load i32* %scevgep56, ... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %45 = load i32* %scevgep57, ... (idx: 0)        1                             0                             
  %46 = load i32* %scevgep56, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load i32* %scevgep57, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 3)
  %46 = load i32* %scevgep56, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* %scevgep55, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %52 = load i32* %scevgep55, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %53 = load i32* %scevgep54, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %53 = load i32* %scevgep54, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %52 = load i32* %scevgep55, ... (idx: 0)        8                             8                             
  %53 = load i32* %scevgep54, ... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %52 = load i32* %scevgep55, ... (idx: 0)        1                             0                             
  %53 = load i32* %scevgep54, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* %scevgep55, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 4)
  %53 = load i32* %scevgep54, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %59 = load i32* %scevgep53, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %59 = load i32* %scevgep53, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %60 = load i32* %scevgep52, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %60 = load i32* %scevgep52, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %59 = load i32* %scevgep53, ... (idx: 0)        9                             9                             
  %60 = load i32* %scevgep52, ... (idx: 1)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %59 = load i32* %scevgep53, ... (idx: 0)        1                             0                             
  %60 = load i32* %scevgep52, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = load i32* %scevgep53, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 5)
  %60 = load i32* %scevgep52, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load i32* %scevgep51, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %66 = load i32* %scevgep51, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %67 = load i32* %scevgep50, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %67 = load i32* %scevgep50, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %66 = load i32* %scevgep51, ... (idx: 0)        10                            10                            
  %67 = load i32* %scevgep50, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %66 = load i32* %scevgep51, ... (idx: 0)        1                             0                             
  %67 = load i32* %scevgep50, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load i32* %scevgep51, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 6)
  %67 = load i32* %scevgep50, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__20
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %73 = load i32* %scevgep49, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %73 = load i32* %scevgep49, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %74 = load i32* %scevgep48, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %74 = load i32* %scevgep48, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %73 = load i32* %scevgep49, ... (idx: 0)        11                            11                            
  %74 = load i32* %scevgep48, ... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %73 = load i32* %scevgep49, ... (idx: 0)        1                             0                             
  %74 = load i32* %scevgep48, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %73 = load i32* %scevgep49, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 7)
  %74 = load i32* %scevgep48, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_preheader42
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %78 = load i32* @il, align 4 can share an output register with another operation already assigned to main_mem_dual_port_0
  %78 = load i32* @il, align 4 can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load i32* @il, align 4 (idx: 0)           -2                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load i32* @il, align 4 (idx: 0)           0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = load i32* @il, align 4 (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__80
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %82 = sdiv i32 %i1.1.i, 2 (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %82 = sdiv i32 %i1.1.i, 2 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = sdiv i32 %i1.1.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__80
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %83 = load i32* %scevgep44, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %83 = load i32* %scevgep44, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %83 = load i32* %scevgep44, ... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %83 = load i32* %scevgep44, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load i32* %scevgep44, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__80
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %84 = load i32* %scevgep43, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %84 = load i32* %scevgep43, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %84 = load i32* %scevgep43, ... (idx: 0)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %84 = load i32* %scevgep43, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load i32* %scevgep43, ... (idx: 0) -> main_test_data_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__89
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %93 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %93 = load i32* getelementpt... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %93 = load i32* getelementpt... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %93 = load i32* getelementpt... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__89
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %94 = load i32* getelementpt... (idx: 0)        -4                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %94 = load i32* getelementpt... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i32* getelementpt... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__89
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
  %90 = sdiv i32 %i.0.i, 2 can share an output register with another operation already assigned to main_signed_divide_32_0
                                                  main_signed_divide_32_0       
  %90 = sdiv i32 %i.0.i, 2 (idx: 0)               6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %90 = sdiv i32 %i.0.i, 2 (idx: 0)               1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = sdiv i32 %i.0.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__97
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %98 = load i32* %.0.i.i.i, a... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %98 = load i32* %.0.i.i.i, a... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %98 = load i32* %.0.i.i.i, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = load i32* %.0.i.i.i, a... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__97
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %99 = load i32* %.01.i.i.i, ... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %99 = load i32* %.01.i.i.i, ... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %99 = load i32* %.01.i.i.i, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i32* %.01.i.i.i, ... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_filtezexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %124 = load i32* %123, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %124 = load i32* %123, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load i32* %113, align... (idx: 0)        8                             7                             
  %124 = load i32* %123, align... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load i32* %113, align... (idx: 0)        1                             0                             
  %124 = load i32* %123, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = load i32* %113, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %124 = load i32* %123, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_filtezexitii
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %117 = load i32* %79, align ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %117 = load i32* %79, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i32* %79, align ... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_logsclexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %133 = load i32* %132, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %133 = load i32* %132, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %133 = load i32* %132, align... (idx: 0)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %133 = load i32* %132, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %133 = load i32* %132, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__140
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %141 = load i32* %scevgep14,... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %141 = load i32* %scevgep14,... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %141 = load i32* %scevgep14,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = load i32* %scevgep14,... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__140
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %143, i32* %scevge... can share an input with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
  store i32 %143, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %143, i32* %scevge... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %143, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %143, i32* %scevge... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__146
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %152 = load i32* %scevgep11,... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %152 = load i32* %scevgep11,... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %152 = load i32* %scevgep11,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %152 = load i32* %scevgep11,... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__146
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %147 = load i32* %scevgep12,... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %147 = load i32* %scevgep12,... (idx: 0)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %147 = load i32* %scevgep12,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %147 = load i32* %scevgep12,... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__146
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %155, i32* %scevge... can share an input with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
  store i32 %155, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %155, i32* %scevge... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %155, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %155, i32* %scevge... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_upzeroexit21ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %157 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  %158 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %157 = load i32* getelementp... (idx: 0)        -2                            0                             
  %158 = load i32* getelementp... (idx: 1)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %157 = load i32* getelementp... (idx: 0)        1                             0                             
  %158 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %157 = load i32* getelementp... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
  %158 = load i32* getelementp... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_upzeroexit21ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %94, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %159 = load i32* getelementp... (idx: 0)        -2                            0                             
  store i32 %94, i32* geteleme... (idx: 1)        8                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %159 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %94, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load i32* getelementp... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %94, i32* geteleme... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexit21ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %157, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %157, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
  store i32 %116, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %116, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %157, i32* getelem... (idx: 0)        8                             6                             
  store i32 %116, i32* getelem... (idx: 1)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %157, i32* getelem... (idx: 0)        1                             0                             
  store i32 %116, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %157, i32* getelem... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %116, i32* getelem... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_upzeroexit21ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %158, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %158, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
  store i32 %159, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %159, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %158, i32* getelem... (idx: 0)        9                             7                             
  store i32 %159, i32* getelem... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %158, i32* getelem... (idx: 0)        1                             0                             
  store i32 %159, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %158, i32* getelem... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %159, i32* getelem... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_uppol2exit17ii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %182 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %182 = load i32* getelementp... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %182 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %182 = load i32* getelementp... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_uppol2exit17ii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %183 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %183 = load i32* getelementp... (idx: 0)        -4                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %183 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %183 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__186
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %187 = load i32* %.0.i7.i.i,... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %187 = load i32* %.0.i7.i.i,... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %187 = load i32* %.0.i7.i.i,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %187 = load i32* %.0.i7.i.i,... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__186
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %188 = load i32* %.01.i6.i.i... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %188 = load i32* %.01.i6.i.i... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %188 = load i32* %.01.i6.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = load i32* %.01.i6.i.i... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_filtezexit8ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %203 = load i32* %202, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %203 = load i32* %202, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %209 = load i32* %208, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %209 = load i32* %208, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %203 = load i32* %202, align... (idx: 0)        9                             9                             
  %209 = load i32* %208, align... (idx: 1)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %203 = load i32* %202, align... (idx: 0)        1                             0                             
  %209 = load i32* %208, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %203 = load i32* %202, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %209 = load i32* %208, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_logschexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %218 = load i32* %217, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %218 = load i32* %217, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %218 = load i32* %217, align... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %218 = load i32* %217, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %218 = load i32* %217, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__225
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %226 = load i32* %scevgep24,... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %226 = load i32* %scevgep24,... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %226 = load i32* %scevgep24,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %226 = load i32* %scevgep24,... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__225
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %228, i32* %scevge... can share an input with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
  store i32 %228, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %228, i32* %scevge... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %228, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %228, i32* %scevge... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__231
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %237 = load i32* %scevgep21,... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %237 = load i32* %scevgep21,... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %237 = load i32* %scevgep21,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %237 = load i32* %scevgep21,... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__231
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %232 = load i32* %scevgep22,... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %232 = load i32* %scevgep22,... (idx: 0)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %232 = load i32* %scevgep22,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %232 = load i32* %scevgep22,... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__231
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %240, i32* %scevge... can share an input with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
  store i32 %240, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %240, i32* %scevge... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %240, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %240, i32* %scevge... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %242 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  %243 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %242 = load i32* getelementp... (idx: 0)        -2                            0                             
  %243 = load i32* getelementp... (idx: 1)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %242 = load i32* getelementp... (idx: 0)        1                             0                             
  %243 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %242 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
  %243 = load i32* getelementp... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %244 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %183, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %244 = load i32* getelementp... (idx: 0)        -2                            0                             
  store i32 %183, i32* getelem... (idx: 1)        8                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %244 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %183, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %244 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %183, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %242, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %242, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
  store i32 %205, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %205, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %242, i32* getelem... (idx: 0)        8                             6                             
  store i32 %205, i32* getelem... (idx: 1)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %242, i32* getelem... (idx: 0)        1                             0                             
  store i32 %205, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %242, i32* getelem... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %205, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %243, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %243, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
  store i32 %244, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %244, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %243, i32* getelem... (idx: 0)        9                             7                             
  store i32 %244, i32* getelem... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %243, i32* getelem... (idx: 0)        1                             0                             
  store i32 %244, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %243, i32* getelem... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %244, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__275
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %278 = load i32* %ac_ptr.0.i... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %278 = load i32* %ac_ptr.0.i... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %278 = load i32* %ac_ptr.0.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %278 = load i32* %ac_ptr.0.i... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__275
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %282 = load i32* %ad_ptr.0.i... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %282 = load i32* %ad_ptr.0.i... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %282 = load i32* %ad_ptr.0.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %282 = load i32* %ad_ptr.0.i... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__275
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %279 = load i32* %h_ptr.0.i.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %279 = load i32* %h_ptr.0.i.... can share an output register with another operation already assigned to main_mem_dual_port_1
  %283 = load i32* %scevgep29,... can share an output register with another operation already assigned to main_mem_dual_port_0
  %283 = load i32* %scevgep29,... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %279 = load i32* %h_ptr.0.i.... (idx: 0)        11                            10                            
  %283 = load i32* %scevgep29,... (idx: 1)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %279 = load i32* %h_ptr.0.i.... (idx: 0)        1                             0                             
  %283 = load i32* %scevgep29,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %279 = load i32* %h_ptr.0.i.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %283 = load i32* %scevgep29,... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__287
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %289 = load i32* getelementp... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %289 = load i32* getelementp... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %289 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %289 = load i32* getelementp... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__287
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %290 = load i32* getelementp... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %290 = load i32* getelementp... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %290 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %290 = load i32* getelementp... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__295
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %296 = load i32* %ac_ptr1.0.... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %296 = load i32* %ac_ptr1.0.... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %296 = load i32* %ac_ptr1.0.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %296 = load i32* %ac_ptr1.0.... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__295
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %297 = load i32* %ad_ptr1.0.... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %297 = load i32* %ad_ptr1.0.... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %297 = load i32* %ad_ptr1.0.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %297 = load i32* %ad_ptr1.0.... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__295
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %296, i32* %ac_ptr... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  store i32 %296, i32* %ac_ptr... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 %296, i32* %ac_ptr... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %296, i32* %ac_ptr... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__295
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %297, i32* %ad_ptr... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  store i32 %297, i32* %ad_ptr... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 %297, i32* %ad_ptr... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %297, i32* %ad_ptr... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %268, i32* getelem... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  store i32 %268, i32* getelem... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 %268, i32* getelem... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %268, i32* getelem... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %269, i32* getelem... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  store i32 %269, i32* getelem... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 %269, i32* getelem... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %269, i32* getelem... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %303, i32* %scevge... (idx: 0)        20                            20                            
  store i32 %305, i32* %scevge... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %303, i32* %scevge... (idx: 0)        1                             0                             
  store i32 %305, i32* %scevge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %303, i32* %scevge... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %305, i32* %scevge... (idx: 1) -> main_result_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__314
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %315 = load i32* %scevgep4, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_0
  %315 = load i32* %scevgep4, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_1
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %315 = load i32* %scevgep4, ... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %315 = load i32* %scevgep4, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %315 = load i32* %scevgep4, ... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__314
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %316 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %316 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %316 = load i32* %scevgep, a... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)


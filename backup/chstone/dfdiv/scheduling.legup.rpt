//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Apr 22 17:14:17 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   br label %1
   Transition: if (start): LEGUP_F_main_BB__1_1 default: LEGUP_0
state: LEGUP_F_main_BB__1_1
   %float_exception_flags.0 = phi i32 [ 0, %0 ], [ %float_exception_flags.6, %float64_div.exit ] (endState: LEGUP_F_main_BB__1_1)
   %main_result.02 = phi i32 [ 0, %0 ], [ %245, %float64_div.exit ] (endState: LEGUP_F_main_BB__1_1)
   %2 = phi i32 [ 0, %0 ], [ %247, %float64_div.exit ] (endState: LEGUP_F_main_BB__1_1)
   %scevgep = getelementptr [22 x i64]* @z_output, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %3 = add i32 %2, -1 (endState: LEGUP_F_main_BB__1_1)
   %scevgep4 = getelementptr [22 x i64]* @b_input, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %scevgep5 = getelementptr [22 x i64]* @a_input, i32 0, i32 %2 (endState: LEGUP_F_main_BB__1_1)
   %4 = load i64* %scevgep5, align 8, !tbaa !1 (endState: LEGUP_F_main_BB__1_2)
   %5 = load i64* %scevgep4, align 8, !tbaa !1 (endState: LEGUP_F_main_BB__1_2)
   Transition: default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB__1_2
   %6 = and i64 %4, 4503599627370495 (endState: LEGUP_F_main_BB__1_2)
   %7 = lshr i64 %4, 52 (endState: LEGUP_F_main_BB__1_2)
   %.tr.i27.i = trunc i64 %7 to i32 (endState: LEGUP_F_main_BB__1_2)
   %8 = and i32 %.tr.i27.i, 2047 (endState: LEGUP_F_main_BB__1_2)
   %9 = and i64 %5, 4503599627370495 (endState: LEGUP_F_main_BB__1_2)
   %10 = lshr i64 %5, 52 (endState: LEGUP_F_main_BB__1_2)
   %.tr.i26.i = trunc i64 %10 to i32 (endState: LEGUP_F_main_BB__1_2)
   %11 = and i32 %.tr.i26.i, 2047 (endState: LEGUP_F_main_BB__1_2)
   %12 = xor i64 %5, %4 (endState: LEGUP_F_main_BB__1_2)
   %13 = lshr i64 %12, 63 (endState: LEGUP_F_main_BB__1_2)
   %14 = icmp eq i32 %8, 2047 (endState: LEGUP_F_main_BB__1_2)
   br i1 %14, label %15, label %40
   Transition: if (%14): LEGUP_F_main_BB__15_3 default: LEGUP_F_main_BB__40_14
state: LEGUP_F_main_BB__15_3
   %16 = lshr i32 4178942, %2 (endState: LEGUP_F_main_BB__15_3)
   %17 = and i32 %16, 1 (endState: LEGUP_F_main_BB__15_3)
   %18 = icmp eq i32 %17, 0 (endState: LEGUP_F_main_BB__15_3)
   br i1 %18, label %float64_is_signaling_nan.exit1.i19.i, label %24
   Transition: if (%18): LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4 default: LEGUP_F_main_BB__24_7
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4
   %19 = icmp ult i32 %3, 3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %20 = icmp eq i32 %2, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %.9 = and i1 %19, %20 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %21 = trunc i64 %5 to i63 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %22 = icmp ugt i63 %21, -4503599627370496 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %23 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %.float_exception_flags.0 = select i1 %.9, i32 %23, i32 %float_exception_flags.0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   %not.1.demorgan = and i1 %19, %20 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_4)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_5
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_5
   %not.1 = xor i1 %not.1.demorgan, true (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_5)
   %. = and i1 %22, %not.1 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_5)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_6
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_6
   %.mux2.v.i23.i = select i1 %., i64 %5, i64 %4 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_6)
   %.mux2.i24.i = or i64 %.mux2.v.i23.i, 2251799813685248 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i19i_6)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__24_7
   %25 = icmp eq i32 %11, 2047 (endState: LEGUP_F_main_BB__24_7)
   br i1 %25, label %26, label %37
   Transition: if (%25): LEGUP_F_main_BB__26_8 default: LEGUP_F_main_BB__37_13
state: LEGUP_F_main_BB__26_8
   %27 = lshr i32 262125, %2 (endState: LEGUP_F_main_BB__26_8)
   %28 = and i32 %27, 1 (endState: LEGUP_F_main_BB__26_8)
   %29 = icmp eq i32 %28, 0 (endState: LEGUP_F_main_BB__26_8)
   br i1 %29, label %float64_is_signaling_nan.exit1.i12.i, label %35
   Transition: if (%29): LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9 default: LEGUP_F_main_BB__35_12
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9
   %30 = icmp ult i32 %3, 3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %31 = icmp eq i32 %2, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %.10 = and i1 %30, %31 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %32 = trunc i64 %5 to i63 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %33 = icmp ugt i63 %32, -4503599627370496 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %34 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %.float_exception_flags.018 = select i1 %.10, i32 %34, i32 %float_exception_flags.0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   %not.2.demorgan = and i1 %30, %31 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_9)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_10
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_10
   %not.2 = xor i1 %not.2.demorgan, true (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_10)
   %.19 = and i1 %33, %not.2 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_10)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_11
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_11
   %.mux2.v.i16.i = select i1 %.19, i64 %5, i64 %4 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_11)
   %.mux2.i17.i = or i64 %.mux2.v.i16.i, 2251799813685248 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1i12i_11)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__35_12
   %36 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB__35_12)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__37_13
   %38 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB__37_13)
   %39 = or i64 %38, 9218868437227405312 (endState: LEGUP_F_main_BB__37_13)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__40_14
   switch i32 %11, label %83 [
    i32 2047, label %41
    i32 0, label %52
  ]
   Transition: switch (%11) 2047: LEGUP_F_main_BB__41_15 0: LEGUP_F_main_BB__52_20 default: LEGUP_F_main_BB__83_28
state: LEGUP_F_main_BB__41_15
   %42 = lshr i32 262125, %2 (endState: LEGUP_F_main_BB__41_15)
   %43 = and i32 %42, 1 (endState: LEGUP_F_main_BB__41_15)
   %44 = icmp eq i32 %43, 0 (endState: LEGUP_F_main_BB__41_15)
   br i1 %44, label %float64_is_signaling_nan.exit1.i.i, label %50
   Transition: if (%44): LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16 default: LEGUP_F_main_BB__50_19
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16
   %45 = icmp ult i32 %3, 3 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %46 = icmp eq i32 %2, 0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %.11 = and i1 %45, %46 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %47 = trunc i64 %5 to i63 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %48 = icmp ugt i63 %47, -4503599627370496 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %49 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %.float_exception_flags.020 = select i1 %.11, i32 %49, i32 %float_exception_flags.0 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   %not..demorgan = and i1 %45, %46 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_16)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_17
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_17
   %not. = xor i1 %not..demorgan, true (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_17)
   %.21 = and i1 %48, %not. (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_17)
   Transition: default: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_18
state: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_18
   %.mux2.v.i.i = select i1 %.21, i64 %5, i64 %4 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_18)
   %.mux2.i.i = or i64 %.mux2.v.i.i, 2251799813685248 (endState: LEGUP_F_main_BB_float64_is_signaling_nanexit1ii_18)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__50_19
   %51 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB__50_19)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__52_20
   %53 = lshr i32 262125, %2 (endState: LEGUP_F_main_BB__52_20)
   %54 = and i32 %53, 1 (endState: LEGUP_F_main_BB__52_20)
   %55 = icmp eq i32 %54, 0 (endState: LEGUP_F_main_BB__52_20)
   br i1 %55, label %66, label %56
   Transition: if (%55): LEGUP_F_main_BB__66_24 default: LEGUP_F_main_BB__56_21
state: LEGUP_F_main_BB__56_21
   %57 = zext i32 %8 to i64 (endState: LEGUP_F_main_BB__56_21)
   %58 = or i64 %57, %6 (endState: LEGUP_F_main_BB__56_21)
   %59 = icmp eq i64 %58, 0 (endState: LEGUP_F_main_BB__56_21)
   br i1 %59, label %60, label %62
   Transition: if (%59): LEGUP_F_main_BB__60_22 default: LEGUP_F_main_BB__62_23
state: LEGUP_F_main_BB__60_22
   %61 = or i32 %float_exception_flags.0, 16 (endState: LEGUP_F_main_BB__60_22)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__62_23
   %63 = or i32 %float_exception_flags.0, 2 (endState: LEGUP_F_main_BB__62_23)
   %64 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB__62_23)
   %65 = or i64 %64, 9218868437227405312 (endState: LEGUP_F_main_BB__62_23)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__66_24
   %67 = lshr i64 %9, 32 (endState: LEGUP_F_main_BB__66_24)
   %extract.t.i.i5.i = trunc i64 %67 to i32 (endState: LEGUP_F_main_BB__66_24)
   %68 = icmp ult i32 %extract.t.i.i5.i, 65536 (endState: LEGUP_F_main_BB__66_24)
   %69 = shl nuw nsw i64 %67, 16 (endState: LEGUP_F_main_BB__66_24)
   %70 = trunc i64 %69 to i32 (endState: LEGUP_F_main_BB__66_24)
   %.a.i.i.i6.i = select i1 %68, i32 %70, i32 %extract.t.i.i5.i (endState: LEGUP_F_main_BB__66_24)
   %..i.i.i7.i = select i1 %68, i32 16, i32 0 (endState: LEGUP_F_main_BB__66_24)
   %71 = icmp ult i32 %.a.i.i.i6.i, 16777216 (endState: LEGUP_F_main_BB__66_24)
   br i1 %71, label %72, label %normalizeFloat64Subnormal.exit10.i
   Transition: if (%71): LEGUP_F_main_BB__72_25 default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26
state: LEGUP_F_main_BB__72_25
   %73 = or i32 %..i.i.i7.i, 8 (endState: LEGUP_F_main_BB__72_25)
   %74 = shl i32 %.a.i.i.i6.i, 8 (endState: LEGUP_F_main_BB__72_25)
   br label %normalizeFloat64Subnormal.exit10.i
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26
   %.1.i.i.i8.i = phi i32 [ %74, %72 ], [ %.a.i.i.i6.i, %66 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26)
   %shiftCount.1.i.i.i9.i = phi i32 [ %73, %72 ], [ %..i.i.i7.i, %66 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26)
   %75 = lshr i32 %.1.i.i.i8.i, 24 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26)
   %76 = getelementptr inbounds [256 x i32]* @countLeadingZeros32.countLeadingZerosHigh, i32 0, i32 %75 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_26)
   %77 = load i32* %76, align 4, !tbaa !5 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27
   %78 = add i32 %shiftCount.1.i.i.i9.i, %77 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   %79 = add nsw i32 %78, -11 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   %80 = zext i32 %79 to i64 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   %81 = shl i64 %9, %80 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   %82 = sub i32 12, %78 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexit10i_27)
   br label %83
   Transition: default: LEGUP_F_main_BB__83_28
state: LEGUP_F_main_BB__83_28
   %84 = phi i32 [ %11, %40 ], [ %82, %normalizeFloat64Subnormal.exit10.i ] (endState: LEGUP_F_main_BB__83_28)
   %85 = phi i64 [ %9, %40 ], [ %81, %normalizeFloat64Subnormal.exit10.i ] (endState: LEGUP_F_main_BB__83_28)
   %86 = icmp eq i32 %8, 0 (endState: LEGUP_F_main_BB__83_28)
   br i1 %86, label %87, label %110
   Transition: if (%86): LEGUP_F_main_BB__87_29 default: LEGUP_F_main_BB__110_35
state: LEGUP_F_main_BB__87_29
   %88 = lshr i32 4178942, %2 (endState: LEGUP_F_main_BB__87_29)
   %89 = and i32 %88, 1 (endState: LEGUP_F_main_BB__87_29)
   %90 = icmp eq i32 %89, 0 (endState: LEGUP_F_main_BB__87_29)
   br i1 %90, label %93, label %91
   Transition: if (%90): LEGUP_F_main_BB__93_31 default: LEGUP_F_main_BB__91_30
state: LEGUP_F_main_BB__91_30
   %92 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB__91_30)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__93_31
   %94 = lshr i64 %6, 32 (endState: LEGUP_F_main_BB__93_31)
   %extract.t.i.i.i = trunc i64 %94 to i32 (endState: LEGUP_F_main_BB__93_31)
   %95 = icmp ult i32 %extract.t.i.i.i, 65536 (endState: LEGUP_F_main_BB__93_31)
   %96 = shl nuw nsw i64 %94, 16 (endState: LEGUP_F_main_BB__93_31)
   %97 = trunc i64 %96 to i32 (endState: LEGUP_F_main_BB__93_31)
   %.a.i.i.i.i = select i1 %95, i32 %97, i32 %extract.t.i.i.i (endState: LEGUP_F_main_BB__93_31)
   %..i.i.i.i = select i1 %95, i32 16, i32 0 (endState: LEGUP_F_main_BB__93_31)
   %98 = icmp ult i32 %.a.i.i.i.i, 16777216 (endState: LEGUP_F_main_BB__93_31)
   br i1 %98, label %99, label %normalizeFloat64Subnormal.exit.i
   Transition: if (%98): LEGUP_F_main_BB__99_32 default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
state: LEGUP_F_main_BB__99_32
   %100 = or i32 %..i.i.i.i, 8 (endState: LEGUP_F_main_BB__99_32)
   %101 = shl i32 %.a.i.i.i.i, 8 (endState: LEGUP_F_main_BB__99_32)
   br label %normalizeFloat64Subnormal.exit.i
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33
   %.1.i.i.i.i = phi i32 [ %101, %99 ], [ %.a.i.i.i.i, %93 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %shiftCount.1.i.i.i.i = phi i32 [ %100, %99 ], [ %..i.i.i.i, %93 ] (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %102 = lshr i32 %.1.i.i.i.i, 24 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %103 = getelementptr inbounds [256 x i32]* @countLeadingZeros32.countLeadingZerosHigh, i32 0, i32 %102 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_33)
   %104 = load i32* %103, align 4, !tbaa !5 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   Transition: default: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34
state: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34
   %105 = add i32 %shiftCount.1.i.i.i.i, %104 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %106 = add nsw i32 %105, -11 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %107 = zext i32 %106 to i64 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %108 = shl i64 %6, %107 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   %109 = sub i32 12, %105 (endState: LEGUP_F_main_BB_normalizeFloat64Subnormalexiti_34)
   br label %110
   Transition: default: LEGUP_F_main_BB__110_35
state: LEGUP_F_main_BB__110_35
   %111 = phi i32 [ %109, %normalizeFloat64Subnormal.exit.i ], [ %8, %83 ] (endState: LEGUP_F_main_BB__110_35)
   %112 = phi i64 [ %108, %normalizeFloat64Subnormal.exit.i ], [ %6, %83 ] (endState: LEGUP_F_main_BB__110_35)
   %113 = sub nsw i32 %111, %84 (endState: LEGUP_F_main_BB__110_35)
   %114 = add nsw i32 %113, 1021 (endState: LEGUP_F_main_BB__110_35)
   %115 = shl i64 %112, 10 (endState: LEGUP_F_main_BB__110_35)
   %116 = or i64 %115, 4611686018427387904 (endState: LEGUP_F_main_BB__110_35)
   %117 = shl i64 %85, 11 (endState: LEGUP_F_main_BB__110_35)
   %118 = or i64 %117, -9223372036854775808 (endState: LEGUP_F_main_BB__110_35)
   %119 = shl i64 %116, 1 (endState: LEGUP_F_main_BB__110_35)
   %120 = icmp ugt i64 %118, %119 (endState: LEGUP_F_main_BB__110_35)
   br i1 %120, label %124, label %121
   Transition: if (%120): LEGUP_F_main_BB__124_37 default: LEGUP_F_main_BB__121_36
state: LEGUP_F_main_BB__121_36
   %122 = lshr exact i64 %116, 1 (endState: LEGUP_F_main_BB__121_36)
   %123 = add nsw i32 %113, 1022 (endState: LEGUP_F_main_BB__121_36)
   br label %124
   Transition: default: LEGUP_F_main_BB__124_37
state: LEGUP_F_main_BB__124_37
   %125 = phi i64 [ %122, %121 ], [ %116, %110 ] (endState: LEGUP_F_main_BB__124_37)
   %zExp.0.i = phi i32 [ %123, %121 ], [ %114, %110 ] (endState: LEGUP_F_main_BB__124_37)
   %126 = icmp ugt i64 %118, %125 (endState: LEGUP_F_main_BB__124_37)
   br i1 %126, label %127, label %estimateDiv128To64.exit.thread.i
   Transition: if (%126): LEGUP_F_main_BB__127_38 default: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186
state: LEGUP_F_main_BB__127_38
   %128 = lshr i64 %118, 32 (endState: LEGUP_F_main_BB__127_38)
   %129 = shl nuw i64 %128, 32 (endState: LEGUP_F_main_BB__127_38)
   %130 = icmp ugt i64 %129, %125 (endState: LEGUP_F_main_BB__127_38)
   br i1 %130, label %131, label %134
   Transition: if (%130): LEGUP_F_main_BB__131_39 default: LEGUP_F_main_BB__134_104
state: LEGUP_F_main_BB__131_39
   %132 = udiv i64 %125, %128 (endState: LEGUP_F_main_BB__131_103)
   Transition: default: LEGUP_F_main_BB__131_40
state: LEGUP_F_main_BB__131_40
   Transition: default: LEGUP_F_main_BB__131_41
state: LEGUP_F_main_BB__131_41
   Transition: default: LEGUP_F_main_BB__131_42
state: LEGUP_F_main_BB__131_42
   Transition: default: LEGUP_F_main_BB__131_43
state: LEGUP_F_main_BB__131_43
   Transition: default: LEGUP_F_main_BB__131_44
state: LEGUP_F_main_BB__131_44
   Transition: default: LEGUP_F_main_BB__131_45
state: LEGUP_F_main_BB__131_45
   Transition: default: LEGUP_F_main_BB__131_46
state: LEGUP_F_main_BB__131_46
   Transition: default: LEGUP_F_main_BB__131_47
state: LEGUP_F_main_BB__131_47
   Transition: default: LEGUP_F_main_BB__131_48
state: LEGUP_F_main_BB__131_48
   Transition: default: LEGUP_F_main_BB__131_49
state: LEGUP_F_main_BB__131_49
   Transition: default: LEGUP_F_main_BB__131_50
state: LEGUP_F_main_BB__131_50
   Transition: default: LEGUP_F_main_BB__131_51
state: LEGUP_F_main_BB__131_51
   Transition: default: LEGUP_F_main_BB__131_52
state: LEGUP_F_main_BB__131_52
   Transition: default: LEGUP_F_main_BB__131_53
state: LEGUP_F_main_BB__131_53
   Transition: default: LEGUP_F_main_BB__131_54
state: LEGUP_F_main_BB__131_54
   Transition: default: LEGUP_F_main_BB__131_55
state: LEGUP_F_main_BB__131_55
   Transition: default: LEGUP_F_main_BB__131_56
state: LEGUP_F_main_BB__131_56
   Transition: default: LEGUP_F_main_BB__131_57
state: LEGUP_F_main_BB__131_57
   Transition: default: LEGUP_F_main_BB__131_58
state: LEGUP_F_main_BB__131_58
   Transition: default: LEGUP_F_main_BB__131_59
state: LEGUP_F_main_BB__131_59
   Transition: default: LEGUP_F_main_BB__131_60
state: LEGUP_F_main_BB__131_60
   Transition: default: LEGUP_F_main_BB__131_61
state: LEGUP_F_main_BB__131_61
   Transition: default: LEGUP_F_main_BB__131_62
state: LEGUP_F_main_BB__131_62
   Transition: default: LEGUP_F_main_BB__131_63
state: LEGUP_F_main_BB__131_63
   Transition: default: LEGUP_F_main_BB__131_64
state: LEGUP_F_main_BB__131_64
   Transition: default: LEGUP_F_main_BB__131_65
state: LEGUP_F_main_BB__131_65
   Transition: default: LEGUP_F_main_BB__131_66
state: LEGUP_F_main_BB__131_66
   Transition: default: LEGUP_F_main_BB__131_67
state: LEGUP_F_main_BB__131_67
   Transition: default: LEGUP_F_main_BB__131_68
state: LEGUP_F_main_BB__131_68
   Transition: default: LEGUP_F_main_BB__131_69
state: LEGUP_F_main_BB__131_69
   Transition: default: LEGUP_F_main_BB__131_70
state: LEGUP_F_main_BB__131_70
   Transition: default: LEGUP_F_main_BB__131_71
state: LEGUP_F_main_BB__131_71
   Transition: default: LEGUP_F_main_BB__131_72
state: LEGUP_F_main_BB__131_72
   Transition: default: LEGUP_F_main_BB__131_73
state: LEGUP_F_main_BB__131_73
   Transition: default: LEGUP_F_main_BB__131_74
state: LEGUP_F_main_BB__131_74
   Transition: default: LEGUP_F_main_BB__131_75
state: LEGUP_F_main_BB__131_75
   Transition: default: LEGUP_F_main_BB__131_76
state: LEGUP_F_main_BB__131_76
   Transition: default: LEGUP_F_main_BB__131_77
state: LEGUP_F_main_BB__131_77
   Transition: default: LEGUP_F_main_BB__131_78
state: LEGUP_F_main_BB__131_78
   Transition: default: LEGUP_F_main_BB__131_79
state: LEGUP_F_main_BB__131_79
   Transition: default: LEGUP_F_main_BB__131_80
state: LEGUP_F_main_BB__131_80
   Transition: default: LEGUP_F_main_BB__131_81
state: LEGUP_F_main_BB__131_81
   Transition: default: LEGUP_F_main_BB__131_82
state: LEGUP_F_main_BB__131_82
   Transition: default: LEGUP_F_main_BB__131_83
state: LEGUP_F_main_BB__131_83
   Transition: default: LEGUP_F_main_BB__131_84
state: LEGUP_F_main_BB__131_84
   Transition: default: LEGUP_F_main_BB__131_85
state: LEGUP_F_main_BB__131_85
   Transition: default: LEGUP_F_main_BB__131_86
state: LEGUP_F_main_BB__131_86
   Transition: default: LEGUP_F_main_BB__131_87
state: LEGUP_F_main_BB__131_87
   Transition: default: LEGUP_F_main_BB__131_88
state: LEGUP_F_main_BB__131_88
   Transition: default: LEGUP_F_main_BB__131_89
state: LEGUP_F_main_BB__131_89
   Transition: default: LEGUP_F_main_BB__131_90
state: LEGUP_F_main_BB__131_90
   Transition: default: LEGUP_F_main_BB__131_91
state: LEGUP_F_main_BB__131_91
   Transition: default: LEGUP_F_main_BB__131_92
state: LEGUP_F_main_BB__131_92
   Transition: default: LEGUP_F_main_BB__131_93
state: LEGUP_F_main_BB__131_93
   Transition: default: LEGUP_F_main_BB__131_94
state: LEGUP_F_main_BB__131_94
   Transition: default: LEGUP_F_main_BB__131_95
state: LEGUP_F_main_BB__131_95
   Transition: default: LEGUP_F_main_BB__131_96
state: LEGUP_F_main_BB__131_96
   Transition: default: LEGUP_F_main_BB__131_97
state: LEGUP_F_main_BB__131_97
   Transition: default: LEGUP_F_main_BB__131_98
state: LEGUP_F_main_BB__131_98
   Transition: default: LEGUP_F_main_BB__131_99
state: LEGUP_F_main_BB__131_99
   Transition: default: LEGUP_F_main_BB__131_100
state: LEGUP_F_main_BB__131_100
   Transition: default: LEGUP_F_main_BB__131_101
state: LEGUP_F_main_BB__131_101
   Transition: default: LEGUP_F_main_BB__131_102
state: LEGUP_F_main_BB__131_102
   Transition: default: LEGUP_F_main_BB__131_103
state: LEGUP_F_main_BB__131_103
   %133 = shl i64 %132, 32 (endState: LEGUP_F_main_BB__131_103)
   br label %134
   Transition: default: LEGUP_F_main_BB__134_104
state: LEGUP_F_main_BB__134_104
   %135 = phi i64 [ %133, %131 ], [ -4294967296, %127 ] (endState: LEGUP_F_main_BB__134_104)
   %136 = lshr exact i64 %135, 32 (endState: LEGUP_F_main_BB__134_104)
   %137 = and i64 %117, 4294965248 (endState: LEGUP_F_main_BB__134_104)
   %138 = mul i64 %136, %137 (endState: LEGUP_F_main_BB__134_105)
   %139 = mul i64 %136, %128 (endState: LEGUP_F_main_BB__134_105)
   Transition: default: LEGUP_F_main_BB__134_105
state: LEGUP_F_main_BB__134_105
   %140 = lshr i64 %138, 32 (endState: LEGUP_F_main_BB__134_105)
   %141 = shl i64 %138, 32 (endState: LEGUP_F_main_BB__134_105)
   %142 = sub i64 0, %141 (endState: LEGUP_F_main_BB__134_105)
   %143 = icmp ne i64 %141, 0 (endState: LEGUP_F_main_BB__134_105)
   %.neg.i.i.i = sext i1 %143 to i64 (endState: LEGUP_F_main_BB__134_105)
   %.neg3.i.i = sub i64 %125, %139 (endState: LEGUP_F_main_BB__134_105)
   %144 = sub i64 %.neg3.i.i, %140 (endState: LEGUP_F_main_BB__134_105)
   %145 = add i64 %144, %.neg.i.i.i (endState: LEGUP_F_main_BB__134_105)
   %146 = icmp slt i64 %145, 0 (endState: LEGUP_F_main_BB__134_105)
   br i1 %146, label %.lr.ph.i.i, label %._crit_edge.i.i
   Transition: if (%146): LEGUP_F_main_BB_lrphii_106 default: LEGUP_F_main_BB__crit_edgeii_110
state: LEGUP_F_main_BB_lrphii_106
   %147 = shl i64 %85, 43 (endState: LEGUP_F_main_BB_lrphii_106)
   %overflow_intrinsic1 = zext i64 %147 to i65 (endState: LEGUP_F_main_BB_lrphii_106)
   br label %148
   Transition: default: LEGUP_F_main_BB__148_107
state: LEGUP_F_main_BB__148_107
   %z.05.i.i = phi i64 [ %135, %.lr.ph.i.i ], [ %151, %148 ] (endState: LEGUP_F_main_BB__148_107)
   %149 = phi i64 [ %142, %.lr.ph.i.i ], [ %overflow_intrinsic_sum, %148 ] (endState: LEGUP_F_main_BB__148_107)
   %150 = phi i64 [ %145, %.lr.ph.i.i ], [ %154, %148 ] (endState: LEGUP_F_main_BB__148_107)
   %151 = add i64 %z.05.i.i, -4294967296 (endState: LEGUP_F_main_BB__148_107)
   %overflow_intrinsic = zext i64 %149 to i65 (endState: LEGUP_F_main_BB__148_107)
   %overflow_intrinsic2 = add nuw i65 %overflow_intrinsic, %overflow_intrinsic1 (endState: LEGUP_F_main_BB__148_107)
   %overflow_intrinsic_sum = trunc i65 %overflow_intrinsic2 to i64 (endState: LEGUP_F_main_BB__148_107)
   %overflow_intrinsic3 = lshr i65 %overflow_intrinsic2, 64 (endState: LEGUP_F_main_BB__148_107)
   %152 = add i64 %150, %128 (endState: LEGUP_F_main_BB__148_107)
   %153 = trunc i65 %overflow_intrinsic3 to i64 (endState: LEGUP_F_main_BB__148_107)
   Transition: default: LEGUP_F_main_BB__148_108
state: LEGUP_F_main_BB__148_108
   %154 = add i64 %152, %153 (endState: LEGUP_F_main_BB__148_108)
   %155 = icmp slt i64 %154, 0 (endState: LEGUP_F_main_BB__148_108)
   br i1 %155, label %148, label %._crit_edge.i.i.loopexit
   Transition: if (%155): LEGUP_F_main_BB__148_107 default: LEGUP_F_main_BB__crit_edgeiiloopexit_109
state: LEGUP_F_main_BB__crit_edgeiiloopexit_109
   br label %._crit_edge.i.i
   Transition: default: LEGUP_F_main_BB__crit_edgeii_110
state: LEGUP_F_main_BB__crit_edgeii_110
   %z.0.lcssa.i.i = phi i64 [ %135, %134 ], [ %151, %._crit_edge.i.i.loopexit ] (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %.lcssa4.i.i = phi i64 [ %142, %134 ], [ %overflow_intrinsic_sum, %._crit_edge.i.i.loopexit ] (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %.lcssa.i.i = phi i64 [ %145, %134 ], [ %154, %._crit_edge.i.i.loopexit ] (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %156 = shl i64 %.lcssa.i.i, 32 (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %157 = lshr i64 %.lcssa4.i.i, 32 (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %158 = or i64 %156, %157 (endState: LEGUP_F_main_BB__crit_edgeii_110)
   %159 = icmp ugt i64 %129, %158 (endState: LEGUP_F_main_BB__crit_edgeii_110)
   br i1 %159, label %160, label %estimateDiv128To64.exit.i
   Transition: if (%159): LEGUP_F_main_BB__160_111 default: LEGUP_F_main_BB_estimateDiv128To64exiti_176
state: LEGUP_F_main_BB__160_111
   %161 = udiv i64 %158, %128 (endState: LEGUP_F_main_BB__160_175)
   Transition: default: LEGUP_F_main_BB__160_112
state: LEGUP_F_main_BB__160_112
   Transition: default: LEGUP_F_main_BB__160_113
state: LEGUP_F_main_BB__160_113
   Transition: default: LEGUP_F_main_BB__160_114
state: LEGUP_F_main_BB__160_114
   Transition: default: LEGUP_F_main_BB__160_115
state: LEGUP_F_main_BB__160_115
   Transition: default: LEGUP_F_main_BB__160_116
state: LEGUP_F_main_BB__160_116
   Transition: default: LEGUP_F_main_BB__160_117
state: LEGUP_F_main_BB__160_117
   Transition: default: LEGUP_F_main_BB__160_118
state: LEGUP_F_main_BB__160_118
   Transition: default: LEGUP_F_main_BB__160_119
state: LEGUP_F_main_BB__160_119
   Transition: default: LEGUP_F_main_BB__160_120
state: LEGUP_F_main_BB__160_120
   Transition: default: LEGUP_F_main_BB__160_121
state: LEGUP_F_main_BB__160_121
   Transition: default: LEGUP_F_main_BB__160_122
state: LEGUP_F_main_BB__160_122
   Transition: default: LEGUP_F_main_BB__160_123
state: LEGUP_F_main_BB__160_123
   Transition: default: LEGUP_F_main_BB__160_124
state: LEGUP_F_main_BB__160_124
   Transition: default: LEGUP_F_main_BB__160_125
state: LEGUP_F_main_BB__160_125
   Transition: default: LEGUP_F_main_BB__160_126
state: LEGUP_F_main_BB__160_126
   Transition: default: LEGUP_F_main_BB__160_127
state: LEGUP_F_main_BB__160_127
   Transition: default: LEGUP_F_main_BB__160_128
state: LEGUP_F_main_BB__160_128
   Transition: default: LEGUP_F_main_BB__160_129
state: LEGUP_F_main_BB__160_129
   Transition: default: LEGUP_F_main_BB__160_130
state: LEGUP_F_main_BB__160_130
   Transition: default: LEGUP_F_main_BB__160_131
state: LEGUP_F_main_BB__160_131
   Transition: default: LEGUP_F_main_BB__160_132
state: LEGUP_F_main_BB__160_132
   Transition: default: LEGUP_F_main_BB__160_133
state: LEGUP_F_main_BB__160_133
   Transition: default: LEGUP_F_main_BB__160_134
state: LEGUP_F_main_BB__160_134
   Transition: default: LEGUP_F_main_BB__160_135
state: LEGUP_F_main_BB__160_135
   Transition: default: LEGUP_F_main_BB__160_136
state: LEGUP_F_main_BB__160_136
   Transition: default: LEGUP_F_main_BB__160_137
state: LEGUP_F_main_BB__160_137
   Transition: default: LEGUP_F_main_BB__160_138
state: LEGUP_F_main_BB__160_138
   Transition: default: LEGUP_F_main_BB__160_139
state: LEGUP_F_main_BB__160_139
   Transition: default: LEGUP_F_main_BB__160_140
state: LEGUP_F_main_BB__160_140
   Transition: default: LEGUP_F_main_BB__160_141
state: LEGUP_F_main_BB__160_141
   Transition: default: LEGUP_F_main_BB__160_142
state: LEGUP_F_main_BB__160_142
   Transition: default: LEGUP_F_main_BB__160_143
state: LEGUP_F_main_BB__160_143
   Transition: default: LEGUP_F_main_BB__160_144
state: LEGUP_F_main_BB__160_144
   Transition: default: LEGUP_F_main_BB__160_145
state: LEGUP_F_main_BB__160_145
   Transition: default: LEGUP_F_main_BB__160_146
state: LEGUP_F_main_BB__160_146
   Transition: default: LEGUP_F_main_BB__160_147
state: LEGUP_F_main_BB__160_147
   Transition: default: LEGUP_F_main_BB__160_148
state: LEGUP_F_main_BB__160_148
   Transition: default: LEGUP_F_main_BB__160_149
state: LEGUP_F_main_BB__160_149
   Transition: default: LEGUP_F_main_BB__160_150
state: LEGUP_F_main_BB__160_150
   Transition: default: LEGUP_F_main_BB__160_151
state: LEGUP_F_main_BB__160_151
   Transition: default: LEGUP_F_main_BB__160_152
state: LEGUP_F_main_BB__160_152
   Transition: default: LEGUP_F_main_BB__160_153
state: LEGUP_F_main_BB__160_153
   Transition: default: LEGUP_F_main_BB__160_154
state: LEGUP_F_main_BB__160_154
   Transition: default: LEGUP_F_main_BB__160_155
state: LEGUP_F_main_BB__160_155
   Transition: default: LEGUP_F_main_BB__160_156
state: LEGUP_F_main_BB__160_156
   Transition: default: LEGUP_F_main_BB__160_157
state: LEGUP_F_main_BB__160_157
   Transition: default: LEGUP_F_main_BB__160_158
state: LEGUP_F_main_BB__160_158
   Transition: default: LEGUP_F_main_BB__160_159
state: LEGUP_F_main_BB__160_159
   Transition: default: LEGUP_F_main_BB__160_160
state: LEGUP_F_main_BB__160_160
   Transition: default: LEGUP_F_main_BB__160_161
state: LEGUP_F_main_BB__160_161
   Transition: default: LEGUP_F_main_BB__160_162
state: LEGUP_F_main_BB__160_162
   Transition: default: LEGUP_F_main_BB__160_163
state: LEGUP_F_main_BB__160_163
   Transition: default: LEGUP_F_main_BB__160_164
state: LEGUP_F_main_BB__160_164
   Transition: default: LEGUP_F_main_BB__160_165
state: LEGUP_F_main_BB__160_165
   Transition: default: LEGUP_F_main_BB__160_166
state: LEGUP_F_main_BB__160_166
   Transition: default: LEGUP_F_main_BB__160_167
state: LEGUP_F_main_BB__160_167
   Transition: default: LEGUP_F_main_BB__160_168
state: LEGUP_F_main_BB__160_168
   Transition: default: LEGUP_F_main_BB__160_169
state: LEGUP_F_main_BB__160_169
   Transition: default: LEGUP_F_main_BB__160_170
state: LEGUP_F_main_BB__160_170
   Transition: default: LEGUP_F_main_BB__160_171
state: LEGUP_F_main_BB__160_171
   Transition: default: LEGUP_F_main_BB__160_172
state: LEGUP_F_main_BB__160_172
   Transition: default: LEGUP_F_main_BB__160_173
state: LEGUP_F_main_BB__160_173
   Transition: default: LEGUP_F_main_BB__160_174
state: LEGUP_F_main_BB__160_174
   Transition: default: LEGUP_F_main_BB__160_175
state: LEGUP_F_main_BB__160_175
   br label %estimateDiv128To64.exit.i
   Transition: default: LEGUP_F_main_BB_estimateDiv128To64exiti_176
state: LEGUP_F_main_BB_estimateDiv128To64exiti_176
   %162 = phi i64 [ %161, %160 ], [ 4294967295, %._crit_edge.i.i ] (endState: LEGUP_F_main_BB_estimateDiv128To64exiti_176)
   %163 = or i64 %162, %z.0.lcssa.i.i (endState: LEGUP_F_main_BB_estimateDiv128To64exiti_176)
   %164 = and i64 %163, 511 (endState: LEGUP_F_main_BB_estimateDiv128To64exiti_176)
   %165 = icmp ult i64 %164, 3 (endState: LEGUP_F_main_BB_estimateDiv128To64exiti_176)
   br i1 %165, label %166, label %estimateDiv128To64.exit.thread.i
   Transition: if (%165): LEGUP_F_main_BB__166_177 default: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186
state: LEGUP_F_main_BB__166_177
   %167 = lshr i64 %163, 32 (endState: LEGUP_F_main_BB__166_177)
   %168 = and i64 %163, 4294967295 (endState: LEGUP_F_main_BB__166_177)
   %169 = mul i64 %168, %137 (endState: LEGUP_F_main_BB__166_178)
   %170 = mul i64 %167, %137 (endState: LEGUP_F_main_BB__166_178)
   %171 = mul i64 %168, %128 (endState: LEGUP_F_main_BB__166_178)
   %172 = mul i64 %167, %128 (endState: LEGUP_F_main_BB__166_178)
   Transition: default: LEGUP_F_main_BB__166_178
state: LEGUP_F_main_BB__166_178
   %overflow_intrinsic4 = zext i64 %170 to i65 (endState: LEGUP_F_main_BB__166_178)
   %overflow_intrinsic5 = zext i64 %171 to i65 (endState: LEGUP_F_main_BB__166_178)
   %overflow_intrinsic6 = add nuw i65 %overflow_intrinsic4, %overflow_intrinsic5 (endState: LEGUP_F_main_BB__166_178)
   %overflow_intrinsic_sum7 = trunc i65 %overflow_intrinsic6 to i64 (endState: LEGUP_F_main_BB__166_178)
   %173 = lshr i65 %overflow_intrinsic6, 32 (endState: LEGUP_F_main_BB__166_178)
   %.tr = trunc i65 %173 to i64 (endState: LEGUP_F_main_BB__166_178)
   %174 = and i64 %.tr, 4294967296 (endState: LEGUP_F_main_BB__166_178)
   %175 = lshr i64 %overflow_intrinsic_sum7, 32 (endState: LEGUP_F_main_BB__166_178)
   %177 = shl i64 %overflow_intrinsic_sum7, 32 (endState: LEGUP_F_main_BB__166_178)
   %overflow_intrinsic10 = zext i64 %169 to i65 (endState: LEGUP_F_main_BB__166_178)
   %overflow_intrinsic11 = zext i64 %177 to i65 (endState: LEGUP_F_main_BB__166_178)
   %.neg31.i = sub i64 %125, %172 (endState: LEGUP_F_main_BB__166_178)
   Transition: default: LEGUP_F_main_BB__166_179
state: LEGUP_F_main_BB__166_179
   %176 = or i64 %174, %175 (endState: LEGUP_F_main_BB__166_179)
   %overflow_intrinsic12 = add nuw i65 %overflow_intrinsic10, %overflow_intrinsic11 (endState: LEGUP_F_main_BB__166_179)
   %overflow_intrinsic_sum13 = trunc i65 %overflow_intrinsic12 to i64 (endState: LEGUP_F_main_BB__166_179)
   %sext = ashr i65 %overflow_intrinsic12, 64 (endState: LEGUP_F_main_BB__166_179)
   %.neg29.i = trunc i65 %sext to i64 (endState: LEGUP_F_main_BB__166_179)
   Transition: default: LEGUP_F_main_BB__166_180
state: LEGUP_F_main_BB__166_180
   %178 = sub i64 0, %overflow_intrinsic_sum13 (endState: LEGUP_F_main_BB__166_180)
   %179 = icmp ne i64 %overflow_intrinsic_sum13, 0 (endState: LEGUP_F_main_BB__166_180)
   %.neg.i.i = sext i1 %179 to i64 (endState: LEGUP_F_main_BB__166_180)
   %.neg33.i = add i64 %.neg31.i, %.neg29.i (endState: LEGUP_F_main_BB__166_180)
   %180 = sub i64 %.neg33.i, %176 (endState: LEGUP_F_main_BB__166_180)
   %181 = add i64 %180, %.neg.i.i (endState: LEGUP_F_main_BB__166_180)
   %182 = icmp slt i64 %181, 0 (endState: LEGUP_F_main_BB__166_180)
   br i1 %182, label %.lr.ph.i.preheader, label %._crit_edge.i
   Transition: if (%182): LEGUP_F_main_BB_lrphipreheader_181 default: LEGUP_F_main_BB__crit_edgei_185
state: LEGUP_F_main_BB_lrphipreheader_181
   %overflow_intrinsic17 = zext i64 %118 to i65 (endState: LEGUP_F_main_BB_lrphipreheader_181)
   br label %.lr.ph.i
   Transition: default: LEGUP_F_main_BB_lrphi_182
state: LEGUP_F_main_BB_lrphi_182
   %zSig.037.i = phi i64 [ %185, %.lr.ph.i ], [ %163, %.lr.ph.i.preheader ] (endState: LEGUP_F_main_BB_lrphi_182)
   %183 = phi i64 [ %overflow_intrinsic_sum19, %.lr.ph.i ], [ %178, %.lr.ph.i.preheader ] (endState: LEGUP_F_main_BB_lrphi_182)
   %184 = phi i64 [ %187, %.lr.ph.i ], [ %181, %.lr.ph.i.preheader ] (endState: LEGUP_F_main_BB_lrphi_182)
   %185 = add i64 %zSig.037.i, -1 (endState: LEGUP_F_main_BB_lrphi_182)
   %overflow_intrinsic16 = zext i64 %183 to i65 (endState: LEGUP_F_main_BB_lrphi_182)
   %overflow_intrinsic18 = add nuw i65 %overflow_intrinsic16, %overflow_intrinsic17 (endState: LEGUP_F_main_BB_lrphi_182)
   %overflow_intrinsic_sum19 = trunc i65 %overflow_intrinsic18 to i64 (endState: LEGUP_F_main_BB_lrphi_182)
   %overflow_intrinsic20 = lshr i65 %overflow_intrinsic18, 64 (endState: LEGUP_F_main_BB_lrphi_182)
   %186 = trunc i65 %overflow_intrinsic20 to i64 (endState: LEGUP_F_main_BB_lrphi_182)
   Transition: default: LEGUP_F_main_BB_lrphi_183
state: LEGUP_F_main_BB_lrphi_183
   %187 = add i64 %186, %184 (endState: LEGUP_F_main_BB_lrphi_183)
   %188 = icmp slt i64 %187, 0 (endState: LEGUP_F_main_BB_lrphi_183)
   br i1 %188, label %.lr.ph.i, label %._crit_edge.i.loopexit
   Transition: if (%188): LEGUP_F_main_BB_lrphi_182 default: LEGUP_F_main_BB__crit_edgeiloopexit_184
state: LEGUP_F_main_BB__crit_edgeiloopexit_184
   br label %._crit_edge.i
   Transition: default: LEGUP_F_main_BB__crit_edgei_185
state: LEGUP_F_main_BB__crit_edgei_185
   %zSig.0.lcssa.i = phi i64 [ %163, %166 ], [ %185, %._crit_edge.i.loopexit ] (endState: LEGUP_F_main_BB__crit_edgei_185)
   %.lcssa.i = phi i64 [ %178, %166 ], [ %overflow_intrinsic_sum19, %._crit_edge.i.loopexit ] (endState: LEGUP_F_main_BB__crit_edgei_185)
   %189 = icmp ne i64 %.lcssa.i, 0 (endState: LEGUP_F_main_BB__crit_edgei_185)
   %190 = zext i1 %189 to i64 (endState: LEGUP_F_main_BB__crit_edgei_185)
   %191 = or i64 %190, %zSig.0.lcssa.i (endState: LEGUP_F_main_BB__crit_edgei_185)
   br label %estimateDiv128To64.exit.thread.i
   Transition: default: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186
state: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186
   %zSig.1.i = phi i64 [ %191, %._crit_edge.i ], [ %163, %estimateDiv128To64.exit.i ], [ -1, %124 ] (endState: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186)
   %.tr.i.i = trunc i64 %zSig.1.i to i32 (endState: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186)
   %192 = and i32 %.tr.i.i, 1023 (endState: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186)
   %193 = and i32 %zExp.0.i, 65535 (endState: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186)
   %194 = icmp ugt i32 %193, 2044 (endState: LEGUP_F_main_BB_estimateDiv128To64exitthreadi_186)
   br i1 %194, label %195, label %.thread.i.i
   Transition: if (%194): LEGUP_F_main_BB__195_187 default: LEGUP_F_main_BB_threadii_197
state: LEGUP_F_main_BB__195_187
   %196 = icmp sgt i32 %zExp.0.i, 2045 (endState: LEGUP_F_main_BB__195_187)
   br i1 %196, label %202, label %197
   Transition: if (%196): LEGUP_F_main_BB__202_190 default: LEGUP_F_main_BB__197_188
state: LEGUP_F_main_BB__197_188
   %198 = icmp eq i32 %zExp.0.i, 2045 (endState: LEGUP_F_main_BB__197_188)
   br i1 %198, label %199, label %206
   Transition: if (%198): LEGUP_F_main_BB__199_189 default: LEGUP_F_main_BB__206_191
state: LEGUP_F_main_BB__199_189
   %200 = add i64 %zSig.1.i, 512 (endState: LEGUP_F_main_BB__199_189)
   %201 = icmp slt i64 %200, 0 (endState: LEGUP_F_main_BB__199_189)
   br i1 %201, label %202, label %.thread.i.i
   Transition: if (%201): LEGUP_F_main_BB__202_190 default: LEGUP_F_main_BB_threadii_197
state: LEGUP_F_main_BB__202_190
   %203 = or i32 %float_exception_flags.0, 9 (endState: LEGUP_F_main_BB__202_190)
   %204 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB__202_190)
   %205 = or i64 %204, 9218868437227405312 (endState: LEGUP_F_main_BB__202_190)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB__206_191
   %207 = icmp slt i32 %zExp.0.i, 0 (endState: LEGUP_F_main_BB__206_191)
   br i1 %207, label %208, label %.thread.i.i
   Transition: if (%207): LEGUP_F_main_BB__208_192 default: LEGUP_F_main_BB_threadii_197
state: LEGUP_F_main_BB__208_192
   %209 = icmp sgt i32 %zExp.0.i, -64 (endState: LEGUP_F_main_BB__208_192)
   br i1 %209, label %210, label %220
   Transition: if (%209): LEGUP_F_main_BB__210_193 default: LEGUP_F_main_BB__220_194
state: LEGUP_F_main_BB__210_193
   %211 = sub nsw i32 0, %zExp.0.i (endState: LEGUP_F_main_BB__210_193)
   %212 = zext i32 %211 to i64 (endState: LEGUP_F_main_BB__210_193)
   %213 = lshr i64 %zSig.1.i, %212 (endState: LEGUP_F_main_BB__210_193)
   %214 = and i32 %zExp.0.i, 63 (endState: LEGUP_F_main_BB__210_193)
   %215 = zext i32 %214 to i64 (endState: LEGUP_F_main_BB__210_193)
   %216 = shl i64 %zSig.1.i, %215 (endState: LEGUP_F_main_BB__210_193)
   %217 = icmp ne i64 %216, 0 (endState: LEGUP_F_main_BB__210_193)
   %218 = zext i1 %217 to i64 (endState: LEGUP_F_main_BB__210_193)
   %219 = or i64 %218, %213 (endState: LEGUP_F_main_BB__210_193)
   br label %shift64RightJamming.exit.i.i
   Transition: default: LEGUP_F_main_BB_shift64RightJammingexitii_195
state: LEGUP_F_main_BB__220_194
   %221 = icmp ne i64 %zSig.1.i, 0 (endState: LEGUP_F_main_BB__220_194)
   %222 = zext i1 %221 to i64 (endState: LEGUP_F_main_BB__220_194)
   br label %shift64RightJamming.exit.i.i
   Transition: default: LEGUP_F_main_BB_shift64RightJammingexitii_195
state: LEGUP_F_main_BB_shift64RightJammingexitii_195
   %z.0.i.i.i = phi i64 [ %219, %210 ], [ %222, %220 ] (endState: LEGUP_F_main_BB_shift64RightJammingexitii_195)
   %.tr3.i.i = trunc i64 %z.0.i.i.i to i32 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_195)
   %223 = and i32 %.tr3.i.i, 1023 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_195)
   %224 = icmp eq i32 %223, 0 (endState: LEGUP_F_main_BB_shift64RightJammingexitii_195)
   br i1 %224, label %.thread6.i.i, label %225
   Transition: if (%224): LEGUP_F_main_BB_thread6ii_198 default: LEGUP_F_main_BB__225_196
state: LEGUP_F_main_BB__225_196
   %226 = or i32 %float_exception_flags.0, 4 (endState: LEGUP_F_main_BB__225_196)
   br label %.thread.i.i
   Transition: default: LEGUP_F_main_BB_threadii_197
state: LEGUP_F_main_BB_threadii_197
   %float_exception_flags.4 = phi i32 [ %float_exception_flags.0, %199 ], [ %226, %225 ], [ %float_exception_flags.0, %206 ], [ %float_exception_flags.0, %estimateDiv128To64.exit.thread.i ] (endState: LEGUP_F_main_BB_threadii_197)
   %zSig5.i.i = phi i64 [ %zSig.1.i, %199 ], [ %z.0.i.i.i, %225 ], [ %zSig.1.i, %206 ], [ %zSig.1.i, %estimateDiv128To64.exit.thread.i ] (endState: LEGUP_F_main_BB_threadii_197)
   %.02.i.i = phi i32 [ 2045, %199 ], [ 0, %225 ], [ %zExp.0.i, %206 ], [ %zExp.0.i, %estimateDiv128To64.exit.thread.i ] (endState: LEGUP_F_main_BB_threadii_197)
   %roundBits.0.i.i = phi i32 [ %192, %199 ], [ %223, %225 ], [ %192, %206 ], [ %192, %estimateDiv128To64.exit.thread.i ] (endState: LEGUP_F_main_BB_threadii_197)
   %227 = icmp ne i32 %roundBits.0.i.i, 0 (endState: LEGUP_F_main_BB_threadii_197)
   %228 = zext i1 %227 to i32 (endState: LEGUP_F_main_BB_threadii_197)
   %float_exception_flags.4. = or i32 %float_exception_flags.4, %228 (endState: LEGUP_F_main_BB_threadii_197)
   br label %.thread6.i.i
   Transition: default: LEGUP_F_main_BB_thread6ii_198
state: LEGUP_F_main_BB_thread6ii_198
   %float_exception_flags.5 = phi i32 [ %float_exception_flags.0, %shift64RightJamming.exit.i.i ], [ %float_exception_flags.4., %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_198)
   %roundBits.09.i.i = phi i32 [ 0, %shift64RightJamming.exit.i.i ], [ %roundBits.0.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_198)
   %.028.i.i = phi i32 [ 0, %shift64RightJamming.exit.i.i ], [ %.02.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_198)
   %zSig57.i.i = phi i64 [ %z.0.i.i.i, %shift64RightJamming.exit.i.i ], [ %zSig5.i.i, %.thread.i.i ] (endState: LEGUP_F_main_BB_thread6ii_198)
   %229 = add i64 %zSig57.i.i, 512 (endState: LEGUP_F_main_BB_thread6ii_198)
   %230 = lshr i64 %229, 10 (endState: LEGUP_F_main_BB_thread6ii_198)
   %231 = icmp eq i32 %roundBits.09.i.i, 512 (endState: LEGUP_F_main_BB_thread6ii_198)
   %232 = zext i1 %231 to i32 (endState: LEGUP_F_main_BB_thread6ii_198)
   %233 = xor i32 %232, -1 (endState: LEGUP_F_main_BB_thread6ii_198)
   %234 = sext i32 %233 to i64 (endState: LEGUP_F_main_BB_thread6ii_198)
   %235 = and i64 %230, %234 (endState: LEGUP_F_main_BB_thread6ii_198)
   %236 = icmp eq i64 %235, 0 (endState: LEGUP_F_main_BB_thread6ii_198)
   %237 = shl nuw i64 %13, 63 (endState: LEGUP_F_main_BB_thread6ii_198)
   %238 = zext i32 %.028.i.i to i64 (endState: LEGUP_F_main_BB_thread6ii_198)
   %.op.i.i = shl i64 %238, 52 (endState: LEGUP_F_main_BB_thread6ii_198)
   %239 = select i1 %236, i64 0, i64 %.op.i.i (endState: LEGUP_F_main_BB_thread6ii_198)
   %240 = or i64 %235, %237 (endState: LEGUP_F_main_BB_thread6ii_198)
   %241 = add i64 %239, %240 (endState: LEGUP_F_main_BB_thread6ii_198)
   br label %float64_div.exit
   Transition: default: LEGUP_F_main_BB_float64_divexit_199
state: LEGUP_F_main_BB_float64_divexit_199
   %float_exception_flags.6 = phi i32 [ %36, %35 ], [ %.float_exception_flags.018, %float64_is_signaling_nan.exit1.i12.i ], [ %float_exception_flags.0, %37 ], [ %.float_exception_flags.0, %float64_is_signaling_nan.exit1.i19.i ], [ %float_exception_flags.0, %91 ], [ %203, %202 ], [ %float_exception_flags.5, %.thread6.i.i ], [ %61, %60 ], [ %63, %62 ], [ %float_exception_flags.0, %50 ], [ %.float_exception_flags.020, %float64_is_signaling_nan.exit1.i.i ] (endState: LEGUP_F_main_BB_float64_divexit_199)
   %.0.i = phi i64 [ 9223372036854775807, %35 ], [ %.mux2.i17.i, %float64_is_signaling_nan.exit1.i12.i ], [ %39, %37 ], [ %.mux2.i24.i, %float64_is_signaling_nan.exit1.i19.i ], [ %92, %91 ], [ %205, %202 ], [ %241, %.thread6.i.i ], [ 9223372036854775807, %60 ], [ %65, %62 ], [ %51, %50 ], [ %.mux2.i.i, %float64_is_signaling_nan.exit1.i.i ] (endState: LEGUP_F_main_BB_float64_divexit_199)
   %242 = load i64* %scevgep, align 8, !tbaa !1 (endState: LEGUP_F_main_BB_float64_divexit_200)
   %247 = add nsw i32 %2, 1 (endState: LEGUP_F_main_BB_float64_divexit_199)
   %exitcond3 = icmp eq i32 %247, 22 (endState: LEGUP_F_main_BB_float64_divexit_199)
   Transition: default: LEGUP_F_main_BB_float64_divexit_200
state: LEGUP_F_main_BB_float64_divexit_200
   %243 = icmp eq i64 %.0.i, %242 (endState: LEGUP_F_main_BB_float64_divexit_200)
   %244 = zext i1 %243 to i32 (endState: LEGUP_F_main_BB_float64_divexit_200)
   %245 = add nsw i32 %244, %main_result.02 (endState: LEGUP_F_main_BB_float64_divexit_200)
   %246 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([65 x i8]* @.str, i32 0, i32 0), i64 %4, i64 %5, i64 %242, i64 %.0.i) #1 (endState: LEGUP_F_main_BB_float64_divexit_200)
   br i1 %exitcond3, label %248, label %1
   Transition: if (%exitcond3): LEGUP_F_main_BB__248_201 default: LEGUP_F_main_BB__1_1
state: LEGUP_F_main_BB__248_201
   %249 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str1, i32 0, i32 0), i32 %245) #1 (endState: LEGUP_F_main_BB__248_201)
   %250 = icmp eq i32 %245, 22 (endState: LEGUP_F_main_BB__248_201)
   br i1 %250, label %251, label %253
   Transition: if (%250): LEGUP_F_main_BB__251_202 default: LEGUP_F_main_BB__253_203
state: LEGUP_F_main_BB__251_202
   %252 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__251_202)
   br label %255
   Transition: default: LEGUP_F_main_BB__255_204
state: LEGUP_F_main_BB__253_203
   %254 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str3, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__253_203)
   br label %255
   Transition: default: LEGUP_F_main_BB__255_204
state: LEGUP_F_main_BB__255_204
   ret i32 %245
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %15 Num States: 1
Basic Block: %float64_is_signaling_nan.exit1.i19.i Num States: 3
Basic Block: %24 Num States: 1
Basic Block: %26 Num States: 1
Basic Block: %float64_is_signaling_nan.exit1.i12.i Num States: 3
Basic Block: %35 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %37 Num States: 1
Basic Block: %40 Num States: 1
Basic Block: %41 Num States: 1
Basic Block: %float64_is_signaling_nan.exit1.i.i Num States: 3
Basic Block: %50 Num States: 1
Basic Block: %52 Num States: 1
Basic Block: %56 Num States: 1
Basic Block: %60 Num States: 1
Basic Block: %62 Num States: 1
Basic Block: %66 Num States: 1
Basic Block: %72 Num States: 1
Basic Block: %normalizeFloat64Subnormal.exit10.i Num States: 2
Basic Block: %83 Num States: 1
Basic Block: %87 Num States: 1
Basic Block: %91 Num States: 1
Basic Block: %93 Num States: 1
Basic Block: %99 Num States: 1
Basic Block: %normalizeFloat64Subnormal.exit.i Num States: 2
Basic Block: %110 Num States: 1
Basic Block: %121 Num States: 1
Basic Block: %124 Num States: 1
Basic Block: %127 Num States: 1
Basic Block: %131 Num States: 65
Basic Block: %134 Num States: 2
Basic Block: %.lr.ph.i.i Num States: 1
Basic Block: %148 Num States: 2
Basic Block: %._crit_edge.i.i.loopexit Num States: 1
Basic Block: %._crit_edge.i.i Num States: 1
Basic Block: %160 Num States: 65
Basic Block: %estimateDiv128To64.exit.i Num States: 1
Basic Block: %166 Num States: 4
Basic Block: %.lr.ph.i.preheader Num States: 1
Basic Block: %.lr.ph.i Num States: 2
Basic Block: %._crit_edge.i.loopexit Num States: 1
Basic Block: %._crit_edge.i Num States: 1
Basic Block: %estimateDiv128To64.exit.thread.i Num States: 1
Basic Block: %195 Num States: 1
Basic Block: %197 Num States: 1
Basic Block: %199 Num States: 1
Basic Block: %202 Num States: 1
Basic Block: %206 Num States: 1
Basic Block: %208 Num States: 1
Basic Block: %210 Num States: 1
Basic Block: %220 Num States: 1
Basic Block: %shift64RightJamming.exit.i.i Num States: 1
Basic Block: %225 Num States: 1
Basic Block: %.thread.i.i Num States: 1
Basic Block: %.thread6.i.i Num States: 1
Basic Block: %float64_div.exit Num States: 2
Basic Block: %248 Num States: 1
Basic Block: %251 Num States: 1
Basic Block: %253 Num States: 1
Basic Block: %255 Num States: 1
End Function: main
--------------------------------------------------------------------------------


//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Apr 22 16:23:11 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: float64_mul
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             
test_in_local_mem_dual_port   1                             
test_out_local_mem_dual_port  1                             
unsigned_divide_64            1                             
--------------------------------------------------------------------------------
Function: roundAndPackFloat64
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 1                             

Running Bipartite Weighted Matching on function: roundAndPackFloat64
State: LEGUP_F_roundAndPackFloat64_BB__11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  %12 = load i32* @float_excep... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  %12 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* @float_excep... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_roundAndPackFloat64_BB__11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %13, i32* @float_e... can share an output register with another operation already assigned to roundAndPackFloat64_mem_dual_port_0
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %13, i32* @float_e... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %13, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %13, i32* @float_e... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_roundAndPackFloat64_BB__36
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %37 = load i32* @float_excep... can share an output register with another operation already assigned to roundAndPackFloat64_mem_dual_port_0
                                                  roundAndPackFloat64_mem_dual_port_0
  %37 = load i32* @float_excep... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  %37 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = load i32* @float_excep... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_roundAndPackFloat64_BB__36
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %38, i32* @float_e... can share an output register with another operation already assigned to roundAndPackFloat64_mem_dual_port_0
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %38, i32* @float_e... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %38, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %38, i32* @float_e... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_roundAndPackFloat64_BB__40
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %41 = load i32* @float_excep... can share an output register with another operation already assigned to roundAndPackFloat64_mem_dual_port_0
                                                  roundAndPackFloat64_mem_dual_port_0
  %41 = load i32* @float_excep... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  %41 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load i32* @float_excep... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_roundAndPackFloat64_BB__40
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %42, i32* @float_e... can share an output register with another operation already assigned to roundAndPackFloat64_mem_dual_port_0
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %42, i32* @float_e... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  roundAndPackFloat64_mem_dual_port_0
  store i32 %42, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %42, i32* @float_e... (idx: 0) -> roundAndPackFloat64_mem_dual_port_0 (mux inputs: 3)

Running Bipartite Weighted Matching on function: float64_mul
State: LEGUP_F_float64_mul_BB_threadi12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %32 = load i32* @float_excep... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %32 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load i32* @float_excep... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_float64_mul_BB_threadi12
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %33, i32* @float_e... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  store i32 %33, i32* @float_e... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  store i32 %33, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %33, i32* @float_e... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_float64_mul_BB__38
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %39 = load i32* @float_excep... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  %39 = load i32* @float_excep... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %39 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = load i32* @float_excep... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_float64_mul_BB__38
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %40, i32* @float_e... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  store i32 %40, i32* @float_e... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  store i32 %40, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %40, i32* @float_e... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_float64_mul_BB_threadi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %64 = load i32* @float_excep... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  %64 = load i32* @float_excep... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %64 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = load i32* @float_excep... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_float64_mul_BB_threadi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %65, i32* @float_e... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  store i32 %65, i32* @float_e... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  store i32 %65, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %65, i32* @float_e... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_float64_mul_BB__70
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %71 = load i32* @float_excep... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  %71 = load i32* @float_excep... (idx: 0)        -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %71 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = load i32* @float_excep... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_float64_mul_BB__70
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %72, i32* @float_e... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  store i32 %72, i32* @float_e... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  store i32 %72, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %72, i32* @float_e... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_float64_mul_BB_normalizeFloat64Subnormalexit9
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %93 = load i32* %92, align 4... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  %93 = load i32* %92, align 4... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %93 = load i32* %92, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %93 = load i32* %92, align 4... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_float64_mul_BB_normalizeFloat64Subnormalexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %119 = load i32* %118, align... can share an output register with another operation already assigned to float64_mul_mem_dual_port_0
                                                  float64_mul_mem_dual_port_0   
  %119 = load i32* %118, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  float64_mul_mem_dual_port_0   
  %119 = load i32* %118, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = load i32* %118, align... (idx: 0) -> float64_mul_mem_dual_port_0 (mux inputs: 6)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__1
Binding functional unit type: test_in_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_in_local_mem_dual_port_0
  %2 = load i64* %scevgep6, al... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_in_local_mem_dual_port_0
  %2 = load i64* %scevgep6, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i64* %scevgep6, al... (idx: 0) -> main_test_in_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_countLeadingZeros32exitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %24 = load i32* %23, align 4... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %24 = load i32* %23, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i32* %23, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi19ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %65 = load i32* @float_excep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %65 = load i32* @float_excep... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %65 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %65 = load i32* @float_excep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi19ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %66, i32* @float_e... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %66, i32* @float_e... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %66, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %66, i32* @float_e... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi12ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %87 = load i32* @float_excep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %87 = load i32* @float_excep... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %87 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = load i32* @float_excep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi12ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %88, i32* @float_e... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %88, i32* @float_e... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %88, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %88, i32* @float_e... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* @float_excep... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %90 = load i32* @float_excep... (idx: 0)        -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %90 = load i32* @float_excep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* @float_excep... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %91, i32* @float_e... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %91, i32* @float_e... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %91, i32* @float_e... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %91, i32* @float_e... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_threadiii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %114 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %114 = load i32* @float_exce... (idx: 0)        -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %114 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_threadiii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %115, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %115, i32* @float_... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %115, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %115, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__120
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %124 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %124 = load i32* @float_exce... (idx: 0)        0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %124 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %124 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__125
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %126, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %126, i32* @float_... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %126, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %126, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__127
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %128, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %128, i32* @float_... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %128, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %128, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_normalizeFloat64Subnormalexit9ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %142 = load i32* %141, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %142 = load i32* %141, align... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %142 = load i32* %141, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %142 = load i32* %141, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_normalizeFloat64Subnormalexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %168 = load i32* %167, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %168 = load i32* %167, align... (idx: 0)        13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %168 = load i32* %167, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %168 = load i32* %167, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB__196
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %197 = udiv i64 %190, %193 (idx: 0)             20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %197 = udiv i64 %190, %193 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %197 = udiv i64 %190, %193 (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 2)
State: LEGUP_F_main_BB__225
Binding functional unit type: unsigned_divide_64
Weight matrix for operation/function unit matching:
  %226 = udiv i64 %223, %193 can share an input with another operation already assigned to main_unsigned_divide_64_0
                                                  main_unsigned_divide_64_0     
  %226 = udiv i64 %223, %193 (idx: 0)             12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_unsigned_divide_64_0     
  %226 = udiv i64 %223, %193 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %226 = udiv i64 %223, %193 (idx: 0) -> main_unsigned_divide_64_0 (mux inputs: 3)
State: LEGUP_F_main_BB_threadi12iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %294 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %294 = load i32* @float_exce... (idx: 0)        4                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %294 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %294 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB_threadi12iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %295, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %295, i32* @float_... (idx: 0)        14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %295, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %295, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_threadi3iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %339 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %339 = load i32* @float_exce... (idx: 0)        5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %339 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %339 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_threadi3iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %340, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %340, i32* @float_... (idx: 0)        15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %340, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %340, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_threadii6ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %385 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %385 = load i32* @float_exce... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %385 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %385 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_threadii6ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %386, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %386, i32* @float_... (idx: 0)        16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %386, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %386, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_threadi13iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %432 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %432 = load i32* @float_exce... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %432 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %432 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_threadi13iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %433, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %433, i32* @float_... (idx: 0)        17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %433, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %433, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_main_BB__434
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %435 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %435 = load i32* @float_exce... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %435 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %435 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_main_BB__434
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %436, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %436, i32* @float_... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %436, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %436, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_threadi6iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %462 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %462 = load i32* @float_exce... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %462 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %462 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_threadi6iii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %463, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %463, i32* @float_... (idx: 0)        19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %463, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %463, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_threadiiii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %516 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %516 = load i32* @float_exce... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %516 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %516 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_threadiiii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %517, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %517, i32* @float_... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %517, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %517, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_normalizeRoundAndPackFloat64exitiii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %556 = load i32* %555, align... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %556 = load i32* %555, align... (idx: 0)        21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %556 = load i32* %555, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %556 = load i32* %555, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB__568
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %569 = load i32* @float_exce... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  %569 = load i32* @float_exce... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %569 = load i32* @float_exce... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %569 = load i32* @float_exce... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB__568
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %570, i32* @float_... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          
  store i32 %570, i32* @float_... (idx: 0)        22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i32 %570, i32* @float_... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %570, i32* @float_... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_dfsinexit
Binding functional unit type: test_out_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_out_local_mem_dual_port_0
  %573 = load i64* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_out_local_mem_dual_port_0
  %573 = load i64* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %573 = load i64* %scevgep, a... (idx: 0) -> main_test_out_local_mem_dual_port_0 (mux inputs: 1)


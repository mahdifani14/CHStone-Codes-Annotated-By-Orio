//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Apr 14 18:02:51 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: encode
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
accumc_local_mem_dual_port    1                             
accumd_local_mem_dual_port    1                             
dec_del_bph_local_mem_dual_port1                             
dec_del_bpl_local_mem_dual_port1                             
dec_del_dhx_local_mem_dual_port2                             
dec_del_dltx_local_mem_dual_port2                             
mem_dual_port                 2                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    2                             
signed_divide_32              1                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             

Running Bipartite Weighted Matching on function: encode
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        0                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        1                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* getelementptr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* getelementptr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %5 = load i32* getelementptr... (idx: 0)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %5 = load i32* getelementptr... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load i32* getelementptr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_encode_BB__8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %13 = load i32* %scevgep28, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %13 = load i32* %scevgep28, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %14 = load i32* %scevgep27, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %14 = load i32* %scevgep27, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %13 = load i32* %scevgep28, ... (idx: 0)        5                             5                             
  %14 = load i32* %scevgep27, ... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %13 = load i32* %scevgep28, ... (idx: 0)        1                             0                             
  %14 = load i32* %scevgep27, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load i32* %scevgep28, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 1)
  %14 = load i32* %scevgep27, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_encode_BB__8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %18 = load i32* %scevgep29, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %18 = load i32* %scevgep29, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %19 = load i32* %scevgep30, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %19 = load i32* %scevgep30, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %18 = load i32* %scevgep29, ... (idx: 0)        6                             6                             
  %19 = load i32* %scevgep30, ... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %18 = load i32* %scevgep29, ... (idx: 0)        1                             0                             
  %19 = load i32* %scevgep30, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load i32* %scevgep29, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 2)
  %19 = load i32* %scevgep30, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_encode_BB__22
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %23 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %23 = load i32* getelementpt... (idx: 0)        -3                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %23 = load i32* getelementpt... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_encode_BB__24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load i32* %tqmf_ptr1.0... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %27 = load i32* %tqmf_ptr1.0... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %27 = load i32* %tqmf_ptr1.0... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %27 = load i32* %tqmf_ptr1.0... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* %tqmf_ptr1.0... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_encode_BB__24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %27, i32* %tqmf_pt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %27, i32* %tqmf_pt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %27, i32* %tqmf_pt... (idx: 0)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %27, i32* %tqmf_pt... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %27, i32* %tqmf_pt... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__29
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin1, i32* getele... (idx: 0)        -2                            -1                            
  store i32 %xin2, i32* getele... (idx: 1)        -2                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin1, i32* getele... (idx: 0)        1                             0                             
  store i32 %xin2, i32* getele... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %xin1, i32* getele... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
  store i32 %xin2, i32* getele... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__29
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %30 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %30 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %31 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %31 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %30 = load i32* getelementpt... (idx: 0)        -2                            -1                            
  %31 = load i32* getelementpt... (idx: 1)        -2                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %30 = load i32* getelementpt... (idx: 0)        1                             0                             
  %31 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %30 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
  %31 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* %.017.i, ali... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %35 = load i32* %.017.i, ali... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %36 = load i32* %.06.i, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %36 = load i32* %.06.i, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %35 = load i32* %.017.i, ali... (idx: 0)        8                             9                             
  %36 = load i32* %.06.i, alig... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %35 = load i32* %.017.i, ali... (idx: 0)        1                             0                             
  %36 = load i32* %.06.i, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* %.017.i, ali... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %36 = load i32* %.06.i, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %46 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %46 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %47 = load i32* @al1, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %47 = load i32* @al1, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %46 = load i32* @rlt1, align... (idx: 0)        -1                            0                             
  %47 = load i32* @al1, align ... (idx: 1)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %46 = load i32* @rlt1, align... (idx: 0)        1                             0                             
  %47 = load i32* @al1, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %46 = load i32* @rlt1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %47 = load i32* @al1, align ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %48 = load i32* @rlt2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %48 = load i32* @rlt2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %49 = load i32* @al2, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %49 = load i32* @al2, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %48 = load i32* @rlt2, align... (idx: 0)        -1                            0                             
  %49 = load i32* @al2, align ... (idx: 1)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %48 = load i32* @rlt2, align... (idx: 0)        1                             0                             
  %49 = load i32* @al2, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %48 = load i32* @rlt2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  %49 = load i32* @al2, align ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB_filtezexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %55 = load i32* @detl, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %55 = load i32* @detl, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %55 = load i32* @detl, align... (idx: 0)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %55 = load i32* @detl, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = load i32* @detl, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_encode_BB__61
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %64 = load i32* %scevgep18, ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %64 = load i32* %scevgep18, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = load i32* %scevgep18, ... (idx: 0) -> encode_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %73 = load i32* @nbl, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %73 = load i32* @nbl, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %73 = load i32* @nbl, align ... (idx: 0)        -1                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %73 = load i32* @nbl, align ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %73 = load i32* @nbl, align ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %ril.0.i = load i32* %ril.0.... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %ril.0.i = load i32* %ril.0.... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %ril.0.i = load i32* %ril.0.... (idx: 0)        9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %ril.0.i = load i32* %ril.0.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %ril.0.i = load i32* %ril.0.... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %77 = load i32* %76, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %77 = load i32* %76, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %70 = load i32* %69, align 4... (idx: 0)        10                            10                            
  %77 = load i32* %76, align 4... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %70 = load i32* %69, align 4... (idx: 0)        1                             0                             
  %77 = load i32* %76, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = load i32* %69, align 4... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 6)
  %77 = load i32* %76, align 4... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %ril.0.i, i32* @il... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %ril.0.i, i32* @il... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %ril.0.i, i32* @il... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %ril.0.i, i32* @il... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %ril.0.i, i32* @il... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %85 = load i32* %84, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %85 = load i32* %84, align 4... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %85 = load i32* %84, align 4... (idx: 0)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %85 = load i32* %84, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = load i32* %84, align 4... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i27, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i27, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i27, i32* @nbl... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i27, i32* @nbl... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i27, i32* @nbl... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %88, i32* @detl, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %88, i32* @detl, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %88, i32* @detl, a... (idx: 0)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %88, i32* @detl, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %88, i32* @detl, a... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_encode_BB_preheaderi21
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %93, i32* %scevgep... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %93, i32* %scevgep... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %93, i32* %scevgep... (idx: 0)        23                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %93, i32* %scevgep... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %93, i32* %scevgep... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_encode_BB_preheaderi21preheaderi21_crit_edge
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre = load i32* %.phi.tran... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre = load i32* %.phi.tran... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre = load i32* %.phi.tran... (idx: 0)        15                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre = load i32* %.phi.tran... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre = load i32* %.phi.tran... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_encode_BB_preheader1i24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %105, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %105, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %105, i32* %scevge... (idx: 0)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %105, i32* %scevge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %105, i32* %scevge... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_encode_BB_preheader1i24preheader1i24_crit_edge
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre59 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre59 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %.pre61 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre61 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre59 = load i32* %.phi.tr... (idx: 0)        15                            16                            
  %.pre61 = load i32* %.phi.tr... (idx: 1)        15                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre59 = load i32* %.phi.tr... (idx: 0)        1                             0                             
  %.pre61 = load i32* %.phi.tr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre59 = load i32* %.phi.tr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  %.pre61 = load i32* %.phi.tr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %107 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %107 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %108 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %108 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %107 = load i32* getelementp... (idx: 0)        6                             7                             
  %108 = load i32* getelementp... (idx: 1)        6                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %107 = load i32* getelementp... (idx: 0)        1                             0                             
  %108 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  %108 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %109 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %109 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %31, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %31, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %109 = load i32* getelementp... (idx: 0)        6                             7                             
  store i32 %31, i32* geteleme... (idx: 1)        16                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %109 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %31, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  store i32 %31, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %72, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %72, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %110 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %110 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %72, i32* geteleme... (idx: 0)        16                            18                            
  %110 = load i32* @plt1, alig... (idx: 1)        6                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %72, i32* geteleme... (idx: 0)        1                             0                             
  %110 = load i32* @plt1, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %72, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 12)
  %110 = load i32* @plt1, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %111 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %111 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %46, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %46, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %111 = load i32* @plt2, alig... (idx: 0)        7                             8                             
  store i32 %46, i32* @rlt2, a... (idx: 1)        17                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %111 = load i32* @plt2, alig... (idx: 0)        1                             0                             
  store i32 %46, i32* @rlt2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %111 = load i32* @plt2, alig... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 12)
  store i32 %46, i32* @rlt2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %136 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %136 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %137 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %137 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %136 = load i32* getelementp... (idx: 0)        7                             9                             
  %137 = load i32* getelementp... (idx: 1)        7                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %136 = load i32* getelementp... (idx: 0)        1                             0                             
  %137 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %136 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 12)
  %137 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %107, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %107, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %108, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %108, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %107, i32* getelem... (idx: 0)        17                            19                            
  store i32 %108, i32* getelem... (idx: 1)        17                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %107, i32* getelem... (idx: 0)        1                             0                             
  store i32 %108, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %107, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 13)
  store i32 %108, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %109, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %109, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %...i18, i32* @al2... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i18, i32* @al2... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %109, i32* getelem... (idx: 0)        18                            20                            
  store i32 %...i18, i32* @al2... (idx: 1)        18                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %109, i32* getelem... (idx: 0)        1                             0                             
  store i32 %...i18, i32* @al2... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %109, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 14)
  store i32 %...i18, i32* @al2... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i14, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i14, i32* ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %135, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %135, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i14, i32* ... (idx: 0)        19                            21                            
  store i32 %135, i32* @rlt1, ... (idx: 1)        19                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i14, i32* ... (idx: 0)        1                             0                             
  store i32 %135, i32* @rlt1, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i14, i32* ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  store i32 %135, i32* @rlt1, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_encode_BB_upzeroexit25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %110, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %110, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %89, i32* @plt1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %89, i32* @plt1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %110, i32* @plt2, ... (idx: 0)        20                            22                            
  store i32 %89, i32* @plt1, a... (idx: 1)        20                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %110, i32* @plt2, ... (idx: 0)        1                             0                             
  store i32 %89, i32* @plt1, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %110, i32* @plt2, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 16)
  store i32 %89, i32* @plt1, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_encode_BB__139
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %141 = load i32* %.017.i9, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %141 = load i32* %.017.i9, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %142 = load i32* %.06.i8, al... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %142 = load i32* %.06.i8, al... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %141 = load i32* %.017.i9, a... (idx: 0)        21                            23                            
  %142 = load i32* %.06.i8, al... (idx: 1)        21                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %141 = load i32* %.017.i9, a... (idx: 0)        1                             0                             
  %142 = load i32* %.06.i8, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = load i32* %.017.i9, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  %142 = load i32* %.06.i8, al... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %146 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %146 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %147 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %147 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %146 = load i32* @rh1, align... (idx: 0)        12                            14                            
  %147 = load i32* @ah1, align... (idx: 1)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %146 = load i32* @rh1, align... (idx: 0)        1                             0                             
  %147 = load i32* @ah1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %146 = load i32* @rh1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  %147 = load i32* @ah1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %148 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %148 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %149 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %149 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %148 = load i32* @rh2, align... (idx: 0)        12                            14                            
  %149 = load i32* @ah2, align... (idx: 1)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %148 = load i32* @rh2, align... (idx: 0)        1                             0                             
  %149 = load i32* @ah2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %148 = load i32* @rh2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  %149 = load i32* @ah2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %157 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %157 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %167 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %167 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %157 = load i32* @deth, alig... (idx: 0)        12                            14                            
  %167 = load i32* @nbh, align... (idx: 1)        12                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %157 = load i32* @deth, alig... (idx: 0)        1                             0                             
  %167 = load i32* @nbh, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %157 = load i32* @deth, alig... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  %167 = load i32* @nbh, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %164 = load i32* %163, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %164 = load i32* %163, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %171 = load i32* %170, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %171 = load i32* %170, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %164 = load i32* %163, align... (idx: 0)        22                            24                            
  %171 = load i32* %170, align... (idx: 1)        22                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %164 = load i32* %163, align... (idx: 0)        1                             0                             
  %171 = load i32* %170, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = load i32* %163, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 18)
  %171 = load i32* %170, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i3, i32* @nbh,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i3, i32* @nbh,... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i3, i32* @nbh,... (idx: 0)        23                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i3, i32* @nbh,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i3, i32* @nbh,... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %179 = load i32* %178, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %179 = load i32* %178, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %179 = load i32* %178, align... (idx: 0)        24                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %179 = load i32* %178, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = load i32* %178, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_encode_BB_filtezexit11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %182, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %182, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %182, i32* @deth, ... (idx: 0)        25                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %182, i32* @deth, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %182, i32* @deth, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_encode_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %187, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %187, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %187, i32* %scevge... (idx: 0)        36                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %187, i32* %scevge... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %187, i32* %scevge... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_encode_BB_preheaderipreheaderi_crit_edge
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre53 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre53 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre53 = load i32* %.phi.tr... (idx: 0)        26                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre53 = load i32* %.phi.tr... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre53 = load i32* %.phi.tr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_encode_BB_preheader1i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %199, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %199, i32* %scevge... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %199, i32* %scevge... (idx: 0)        37                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %199, i32* %scevge... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %199, i32* %scevge... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 24)
State: LEGUP_F_encode_BB_preheader1ipreheader1i_crit_edge
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre55 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre55 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %.pre57 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %.pre57 = load i32* %.phi.tr... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre55 = load i32* %.phi.tr... (idx: 0)        29                            27                            
  %.pre57 = load i32* %.phi.tr... (idx: 1)        29                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %.pre55 = load i32* %.phi.tr... (idx: 0)        1                             0                             
  %.pre57 = load i32* %.phi.tr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre55 = load i32* %.phi.tr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 25)
  %.pre57 = load i32* %.phi.tr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %201 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %201 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %202 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %202 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %201 = load i32* getelementp... (idx: 0)        20                            18                            
  %202 = load i32* getelementp... (idx: 1)        20                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %201 = load i32* getelementp... (idx: 0)        1                             0                             
  %202 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %201 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 25)
  %202 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %203 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %203 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %137, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %137, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %203 = load i32* getelementp... (idx: 0)        20                            18                            
  store i32 %137, i32* getelem... (idx: 1)        30                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %203 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %137, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %203 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 25)
  store i32 %137, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %166, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %166, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %204 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %204 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %166, i32* getelem... (idx: 0)        30                            29                            
  %204 = load i32* @ph1, align... (idx: 1)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %166, i32* getelem... (idx: 0)        1                             0                             
  %204 = load i32* @ph1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %166, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 26)
  %204 = load i32* @ph1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %205 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %205 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %146, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %146, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %205 = load i32* @ph2, align... (idx: 0)        21                            19                            
  store i32 %146, i32* @rh2, a... (idx: 1)        31                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %205 = load i32* @ph2, align... (idx: 0)        1                             0                             
  store i32 %146, i32* @rh2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %205 = load i32* @ph2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 26)
  store i32 %146, i32* @rh2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %201, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %201, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %202, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %202, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %201, i32* getelem... (idx: 0)        31                            30                            
  store i32 %202, i32* getelem... (idx: 1)        31                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %201, i32* getelem... (idx: 0)        1                             0                             
  store i32 %202, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %201, i32* getelem... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 27)
  store i32 %202, i32* getelem... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %203, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %203, i32* getelem... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %203, i32* getelem... (idx: 0)        32                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %203, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %203, i32* getelem... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i, i32* @ah2, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i, i32* @ah2, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i, i32* @ah2, ... (idx: 0)        32                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i, i32* @ah2, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i, i32* @ah2, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 28)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %229, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %229, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        33                            32                            
  store i32 %229, i32* @rh1, a... (idx: 1)        33                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        1                             0                             
  store i32 %229, i32* @rh1, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i, i32* @a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 29)
  store i32 %229, i32* @rh1, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_encode_BB_upzeroexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %204, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %204, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %183, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %183, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %204, i32* @ph2, a... (idx: 0)        34                            33                            
  store i32 %183, i32* @ph1, a... (idx: 1)        34                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %204, i32* @ph2, a... (idx: 0)        1                             0                             
  store i32 %183, i32* @ph1, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %204, i32* @ph2, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 30)
  store i32 %183, i32* @ph1, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 29)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        0                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        1                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 32, i32* @detl, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 8, i32* @deth, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rlt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @rlt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rlt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rlt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @plt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @plt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @plt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @plt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @al1, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @al1, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @al2, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @al1, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rh2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @rh2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @nbl, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rh2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ph2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ph2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rh1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ph2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ah2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ah2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ph1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ah2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @nbh, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @nbh, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ah1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @nbh, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 0, i32* %scevgep64... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 0, i32* %scevgep64... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep64... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 0, i32* %scevgep65... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 0, i32* %scevgep65... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep65... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep67... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep67... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* %scevgep66... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep66... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep67... (idx: 0)        5                             5                             
  store i32 0, i32* %scevgep66... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep67... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep66... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep67... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  store i32 0, i32* %scevgep66... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader2ii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 0, i32* %scevgep59... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 0, i32* %scevgep59... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep59... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader2ii
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 0, i32* %scevgep60... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 0, i32* %scevgep60... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep60... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader2ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep62... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep62... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* %scevgep61... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep61... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep62... (idx: 0)        6                             6                             
  store i32 0, i32* %scevgep61... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep62... (idx: 0)        1                             0                             
  store i32 0, i32* %scevgep61... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep62... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  store i32 0, i32* %scevgep61... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader1ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %scevgep57... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %scevgep57... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep57... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %scevgep57... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep57... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 0, i32* %scevgep55... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 0, i32* %scevgep55... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep55... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 0, i32* %scevgep54... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 0, i32* %scevgep54... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep54... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %11 = sdiv i32 %i1.05.i, 2 (idx: 0)             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %11 = sdiv i32 %i1.05.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = sdiv i32 %i1.05.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %12 = load i32* %scevgep52, ... (idx: 0)        10                            10                            
  %13 = load i32* %scevgep51, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %12 = load i32* %scevgep52, ... (idx: 0)        1                             0                             
  %13 = load i32* %scevgep51, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* %scevgep52, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %13 = load i32* %scevgep51, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
  %16 = sdiv i32 %9, 2 can share an output register with another operation already assigned to main_signed_divide_32_0
                                                  main_signed_divide_32_0       
  %16 = sdiv i32 %9, 2 (idx: 0)                   6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %16 = sdiv i32 %9, 2 (idx: 0)                   1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = sdiv i32 %9, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
  %21 = sdiv i32 %7, 2 can share an output register with another operation already assigned to main_signed_divide_32_0
                                                  main_signed_divide_32_0       
  %21 = sdiv i32 %7, 2 (idx: 0)                   7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %21 = sdiv i32 %7, 2 (idx: 0)                   1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = sdiv i32 %7, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %17 = load i32* %scevgep50, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %17 = load i32* %scevgep50, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %18 = load i32* %scevgep49, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %18 = load i32* %scevgep49, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %17 = load i32* %scevgep50, ... (idx: 0)        6                             6                             
  %18 = load i32* %scevgep49, ... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %17 = load i32* %scevgep50, ... (idx: 0)        1                             0                             
  %18 = load i32* %scevgep49, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load i32* %scevgep50, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 2)
  %18 = load i32* %scevgep49, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_resetexiti
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i32* %scevgep48, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %22 = load i32* %scevgep48, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %23 = load i32* %scevgep47, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %23 = load i32* %scevgep47, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %22 = load i32* %scevgep48, ... (idx: 0)        7                             7                             
  %23 = load i32* %scevgep47, ... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %22 = load i32* %scevgep48, ... (idx: 0)        1                             0                             
  %23 = load i32* %scevgep47, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i32* %scevgep48, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 3)
  %23 = load i32* %scevgep47, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %27 = load i32* @il, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %27 = load i32* @il, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load i32* @il, align 4... (idx: 0)        -2                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %27 = load i32* @il, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* @il, align 4... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %29 = load i32* %28, align 4... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %29 = load i32* %28, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load i32* %28, align 4... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__30
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %35 = load i32* getelementpt... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %35 = load i32* getelementpt... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* getelementpt... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__30
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %36 = load i32* getelementpt... (idx: 0)        -4                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %36 = load i32* getelementpt... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i32* getelementpt... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__30
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
  %32 = sdiv i32 %i.03.i, 2 can share an output register with another operation already assigned to main_signed_divide_32_0
                                                  main_signed_divide_32_0       
  %32 = sdiv i32 %i.03.i, 2 (idx: 0)              8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %32 = sdiv i32 %i.03.i, 2 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = sdiv i32 %i.03.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 4)
State: LEGUP_F_main_BB__38
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %40 = load i32* %.017.i.i.i,... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %40 = load i32* %.017.i.i.i,... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %40 = load i32* %.017.i.i.i,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %40 = load i32* %.017.i.i.i,... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__38
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %41 = load i32* %.06.i.i.i, ... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %41 = load i32* %.06.i.i.i, ... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %41 = load i32* %.06.i.i.i, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load i32* %.06.i.i.i, ... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_filtezexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %53 = load i32* %52, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %53 = load i32* %52, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %53 = load i32* %52, align 4... (idx: 0)        8                             7                             
  %62 = load i32* %61, align 4... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %53 = load i32* %52, align 4... (idx: 0)        1                             0                             
  %62 = load i32* %61, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load i32* %52, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %62 = load i32* %61, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_filtezexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %70 = load i32* %69, align 4... (idx: 0)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %70 = load i32* %69, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = load i32* %69, align 4... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi21ii
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %78, i32* %scevgep... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %78, i32* %scevgep... (idx: 0)        17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %78, i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %78, i32* %scevgep... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi21preheaderi21_crit_edgeii
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre.i.i = load i32* %.phi.... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %.pre.i.i = load i32* %.phi.... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %.pre.i.i = load i32* %.phi.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i.i = load i32* %.phi.... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_preheader1i24ii
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %90, i32* %scevgep... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %90, i32* %scevgep... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  store i32 %90, i32* %scevgep... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %90, i32* %scevgep... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_preheader1i24preheader1i24_crit_edgeii
Binding functional unit type: dec_del_bpl_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre65.i.i = load i32* %.ph... can share an output register with another operation already assigned to main_dec_del_bpl_local_mem_dual_port_0
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %.pre65.i.i = load i32* %.ph... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bpl_local_mem_dual_port_0
  %.pre65.i.i = load i32* %.ph... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre65.i.i = load i32* %.ph... (idx: 0) -> main_dec_del_bpl_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_preheader1i24preheader1i24_crit_edgeii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre63.i.i = load i32* %.ph... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %.pre63.i.i = load i32* %.ph... (idx: 0)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %.pre63.i.i = load i32* %.ph... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre63.i.i = load i32* %.ph... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %116 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %116 = load i32* getelementp... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %116 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = load i32* getelementp... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %117 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %117 = load i32* getelementp... (idx: 0)        -4                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %117 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  %93 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %92 = load i32* getelementpt... (idx: 0)        -2                            0                             
  %93 = load i32* getelementpt... (idx: 1)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %92 = load i32* getelementpt... (idx: 0)        1                             0                             
  %93 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* getelementpt... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
  %93 = load i32* getelementpt... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %36, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %94 = load i32* getelementpt... (idx: 0)        -2                            0                             
  store i32 %36, i32* geteleme... (idx: 1)        8                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  %94 = load i32* getelementpt... (idx: 0)        1                             0                             
  store i32 %36, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i32* getelementpt... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %36, i32* geteleme... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %92, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %92, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
  store i32 %55, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %55, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %92, i32* geteleme... (idx: 0)        8                             6                             
  store i32 %55, i32* geteleme... (idx: 1)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %92, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %55, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %92, i32* geteleme... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %55, i32* geteleme... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_upzeroexit25ii
Binding functional unit type: dec_del_dltx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %93, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %93, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
  store i32 %94, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_0
  store i32 %94, i32* geteleme... can share an output register with another operation already assigned to main_dec_del_dltx_local_mem_dual_port_1
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %93, i32* geteleme... (idx: 0)        9                             7                             
  store i32 %94, i32* geteleme... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dltx_local_mem_dual_port_0main_dec_del_dltx_local_mem_dual_port_1
  store i32 %93, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %94, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %93, i32* geteleme... (idx: 0) -> main_dec_del_dltx_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %94, i32* geteleme... (idx: 1) -> main_dec_del_dltx_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__119
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %121 = load i32* %.017.i9.i.... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %121 = load i32* %.017.i9.i.... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %121 = load i32* %.017.i9.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %121 = load i32* %.017.i9.i.... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__119
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %122 = load i32* %.06.i8.i.i... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %122 = load i32* %.06.i8.i.i... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %122 = load i32* %.06.i8.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %122 = load i32* %.06.i8.i.i... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_filtezexit11ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load i32* %133, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %134 = load i32* %133, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %140 = load i32* %139, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %140 = load i32* %139, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* %133, align... (idx: 0)        9                             9                             
  %140 = load i32* %139, align... (idx: 1)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* %133, align... (idx: 0)        1                             0                             
  %140 = load i32* %139, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = load i32* %133, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %140 = load i32* %139, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_filtezexit11ii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %148 = load i32* %147, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %148 = load i32* %147, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* %147, align... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* %147, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %148 = load i32* %147, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_preheaderiii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %156, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %156, i32* %scevge... (idx: 0)        17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %156, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %156, i32* %scevge... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderipreheaderi_crit_edgeii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre57.i.i = load i32* %.ph... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %.pre57.i.i = load i32* %.ph... (idx: 0)        9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %.pre57.i.i = load i32* %.ph... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre57.i.i = load i32* %.ph... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_preheader1iii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %168, i32* %scevge... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %168, i32* %scevge... (idx: 0)        20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  store i32 %168, i32* %scevge... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %168, i32* %scevge... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_preheader1ipreheader1i_crit_edgeii
Binding functional unit type: dec_del_bph_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre61.i.i = load i32* %.ph... can share an output register with another operation already assigned to main_dec_del_bph_local_mem_dual_port_0
                                                  main_dec_del_bph_local_mem_dual_port_0
  %.pre61.i.i = load i32* %.ph... (idx: 0)        12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_bph_local_mem_dual_port_0
  %.pre61.i.i = load i32* %.ph... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre61.i.i = load i32* %.ph... (idx: 0) -> main_dec_del_bph_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_preheader1ipreheader1i_crit_edgeii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre59.i.i = load i32* %.ph... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %.pre59.i.i = load i32* %.ph... (idx: 0)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %.pre59.i.i = load i32* %.ph... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre59.i.i = load i32* %.ph... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %170 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  %171 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %170 = load i32* getelementp... (idx: 0)        -2                            0                             
  %171 = load i32* getelementp... (idx: 1)        -2                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %170 = load i32* getelementp... (idx: 0)        1                             0                             
  %171 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %170 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
  %171 = load i32* getelementp... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %172 = load i32* getelementp... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %117, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %172 = load i32* getelementp... (idx: 0)        -2                            0                             
  store i32 %117, i32* getelem... (idx: 1)        8                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  %172 = load i32* getelementp... (idx: 0)        1                             0                             
  store i32 %117, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = load i32* getelementp... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %117, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %170, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %170, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
  store i32 %136, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %136, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %170, i32* getelem... (idx: 0)        8                             6                             
  store i32 %136, i32* getelem... (idx: 1)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %170, i32* getelem... (idx: 0)        1                             0                             
  store i32 %136, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %170, i32* getelem... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %136, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_upzeroexitii
Binding functional unit type: dec_del_dhx_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %171, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %171, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
  store i32 %172, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_0
  store i32 %172, i32* getelem... can share an output register with another operation already assigned to main_dec_del_dhx_local_mem_dual_port_1
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %171, i32* getelem... (idx: 0)        9                             7                             
  store i32 %172, i32* getelem... (idx: 1)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_dec_del_dhx_local_mem_dual_port_0main_dec_del_dhx_local_mem_dual_port_1
  store i32 %171, i32* getelem... (idx: 0)        1                             0                             
  store i32 %172, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %171, i32* getelem... (idx: 0) -> main_dec_del_dhx_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %172, i32* getelem... (idx: 1) -> main_dec_del_dhx_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__197
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %201 = load i32* %ac_ptr.044... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %201 = load i32* %ac_ptr.044... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %201 = load i32* %ac_ptr.044... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %201 = load i32* %ac_ptr.044... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__197
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %205 = load i32* %ad_ptr.045... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %205 = load i32* %ad_ptr.045... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %205 = load i32* %ad_ptr.045... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %205 = load i32* %ad_ptr.045... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__197
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %202 = load i32* %h_ptr.043.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %202 = load i32* %h_ptr.043.... can share an output register with another operation already assigned to main_mem_dual_port_1
  %206 = load i32* %scevgep33,... can share an output register with another operation already assigned to main_mem_dual_port_0
  %206 = load i32* %scevgep33,... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %202 = load i32* %h_ptr.043.... (idx: 0)        11                            10                            
  %206 = load i32* %scevgep33,... (idx: 1)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %202 = load i32* %h_ptr.043.... (idx: 0)        1                             0                             
  %206 = load i32* %scevgep33,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %202 = load i32* %h_ptr.043.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %206 = load i32* %scevgep33,... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__210
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %213 = load i32* getelementp... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %213 = load i32* getelementp... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %213 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %213 = load i32* getelementp... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__210
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %214 = load i32* getelementp... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %214 = load i32* getelementp... (idx: 0)        -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %214 = load i32* getelementp... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %214 = load i32* getelementp... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__215
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %218 = load i32* %ac_ptr1.03... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  %218 = load i32* %ac_ptr1.03... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  %218 = load i32* %ac_ptr1.03... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %218 = load i32* %ac_ptr1.03... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__215
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %219 = load i32* %ad_ptr1.03... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  %219 = load i32* %ad_ptr1.03... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  %219 = load i32* %ad_ptr1.03... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %219 = load i32* %ad_ptr1.03... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__215
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %218, i32* %ac_ptr... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  store i32 %218, i32* %ac_ptr... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 %218, i32* %ac_ptr... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %218, i32* %ac_ptr... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__215
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %219, i32* %ad_ptr... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  store i32 %219, i32* %ad_ptr... (idx: 0)        18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 %219, i32* %ad_ptr... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %219, i32* %ad_ptr... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: accumc_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %193, i32* getelem... can share an output register with another operation already assigned to main_accumc_local_mem_dual_port_0
                                                  main_accumc_local_mem_dual_port_0
  store i32 %193, i32* getelem... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumc_local_mem_dual_port_0
  store i32 %193, i32* getelem... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %193, i32* getelem... (idx: 0) -> main_accumc_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: accumd_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %194, i32* getelem... can share an output register with another operation already assigned to main_accumd_local_mem_dual_port_0
                                                  main_accumd_local_mem_dual_port_0
  store i32 %194, i32* getelem... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_accumd_local_mem_dual_port_0
  store i32 %194, i32* getelem... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %194, i32* getelem... (idx: 0) -> main_accumd_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_decodeexiti
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %226, i32* %scevge... (idx: 0)        20                            20                            
  store i32 %228, i32* %scevge... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %226, i32* %scevge... (idx: 0)        1                             0                             
  store i32 %228, i32* %scevge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %226, i32* %scevge... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %228, i32* %scevge... (idx: 1) -> main_result_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %234 = load i32* %scevgep4, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_0
  %234 = load i32* %scevgep4, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_1
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %234 = load i32* %scevgep4, ... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %234 = load i32* %scevgep4, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %234 = load i32* %scevgep4, ... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %235 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %235 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %235 = load i32* %scevgep, a... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)


//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Fri Apr 14 18:11:18 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: upzero
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
ilb_table_local_mem_dual_port 1                             
mem_dual_port                 2                             
qq2_code2_table_local_mem_dual_port1                             
qq4_code4_table_local_mem_dual_port1                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    2                             
signed_divide_32              1                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             
tqmf_local_mem_dual_port      2                             
wh_code_table_local_mem_dual_port1                             
wl_code_table_local_mem_dual_port1                             

Running Bipartite Weighted Matching on function: upzero
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %2 = load i32* %dlti, align ... (idx: 0)        0                             0                             
  %7 = load i32* %bli, align 4... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %2 = load i32* %dlti, align ... (idx: 0)        1                             0                             
  %7 = load i32* %bli, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* %dlti, align ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 0)
  %7 = load i32* %bli, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %10, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %10, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %10, i32* %bli, al... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %10, i32* %bli, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* %bli, al... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %12 = load i32* %11, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %12 = load i32* %11, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %18 = load i32* %17, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %18 = load i32* %17, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %12 = load i32* %11, align 4... (idx: 0)        6                             5                             
  %18 = load i32* %17, align 4... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %12 = load i32* %11, align 4... (idx: 0)        1                             0                             
  %18 = load i32* %17, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* %11, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 2)
  %18 = load i32* %17, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %21, i32* %17, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %21, i32* %17, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %21, i32* %17, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %21, i32* %17, ali... (idx: 0)        17                            6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %21, i32* %17, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %21, i32* %17, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load i32* %22, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %23 = load i32* %22, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %23 = load i32* %22, align 4... (idx: 0)        7                             7                             
  %29 = load i32* %28, align 4... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %23 = load i32* %22, align 4... (idx: 0)        1                             0                             
  %29 = load i32* %28, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* %22, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 3)
  %29 = load i32* %28, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %32, i32* %28, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %32, i32* %28, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %32, i32* %28, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %32, i32* %28, ali... (idx: 0)        18                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %32, i32* %28, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %32, i32* %28, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load i32* %33, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %34 = load i32* %33, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %34 = load i32* %33, align 4... (idx: 0)        8                             9                             
  %40 = load i32* %39, align 4... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %34 = load i32* %33, align 4... (idx: 0)        1                             0                             
  %40 = load i32* %39, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load i32* %33, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 4)
  %40 = load i32* %39, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %43, i32* %39, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %43, i32* %39, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %43, i32* %39, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %43, i32* %39, ali... (idx: 0)        19                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %43, i32* %39, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %43, i32* %39, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load i32* %44, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %45 = load i32* %44, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %51 = load i32* %50, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %51 = load i32* %50, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %45 = load i32* %44, align 4... (idx: 0)        9                             11                            
  %51 = load i32* %50, align 4... (idx: 1)        9                             11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %45 = load i32* %44, align 4... (idx: 0)        1                             0                             
  %51 = load i32* %50, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load i32* %44, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 5)
  %51 = load i32* %50, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %54, i32* %50, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %54, i32* %50, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %54, i32* %50, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %54, i32* %50, ali... (idx: 0)        20                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %54, i32* %50, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %54, i32* %50, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %56 = load i32* %55, align 4... (idx: 0)        10                            13                            
  %62 = load i32* %61, align 4... (idx: 1)        10                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %56 = load i32* %55, align 4... (idx: 0)        1                             0                             
  %62 = load i32* %61, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = load i32* %55, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 6)
  %62 = load i32* %61, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %65, i32* %61, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %65, i32* %61, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %65, i32* %61, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %65, i32* %61, ali... (idx: 0)        21                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %65, i32* %61, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %65, i32* %61, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load i32* %bli, align ... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %66 = load i32* %bli, align ... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %66 = load i32* %bli, align ... (idx: 0)        1                             5                             
  %70 = load i32* %69, align 4... (idx: 1)        11                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %66 = load i32* %bli, align ... (idx: 0)        1                             0                             
  %70 = load i32* %69, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load i32* %bli, align ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 6)
  %70 = load i32* %69, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %74 = load i32* %73, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %74 = load i32* %73, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %78 = load i32* %77, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %78 = load i32* %77, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %74 = load i32* %73, align 4... (idx: 0)        11                            16                            
  %78 = load i32* %77, align 4... (idx: 1)        11                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %74 = load i32* %73, align 4... (idx: 0)        1                             0                             
  %78 = load i32* %77, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load i32* %73, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 7)
  %78 = load i32* %77, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %82 = load i32* %81, align 4... (idx: 0)        12                            17                            
  %86 = load i32* %85, align 4... (idx: 1)        12                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %82 = load i32* %81, align 4... (idx: 0)        1                             0                             
  %86 = load i32* %85, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i32* %81, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 8)
  %86 = load i32* %85, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %68, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %68, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %72, i32* %69, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %72, i32* %69, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %72, i32* %69, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %68, i32* %bli, al... (idx: 0)        13                            18                            
  store i32 %72, i32* %69, ali... (idx: 1)        23                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %68, i32* %bli, al... (idx: 0)        1                             0                             
  store i32 %72, i32* %69, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %68, i32* %bli, al... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 9)
  store i32 %72, i32* %69, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %76, i32* %73, ali... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %76, i32* %73, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %76, i32* %73, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %80, i32* %77, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %80, i32* %77, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %80, i32* %77, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %76, i32* %73, ali... (idx: 0)        14                            29                            
  store i32 %80, i32* %77, ali... (idx: 1)        24                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %76, i32* %73, ali... (idx: 0)        1                             0                             
  store i32 %80, i32* %77, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %76, i32* %73, ali... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 10)
  store i32 %80, i32* %77, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %84, i32* %81, ali... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %84, i32* %81, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %84, i32* %81, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %88, i32* %85, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %88, i32* %85, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %88, i32* %85, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %84, i32* %81, ali... (idx: 0)        15                            30                            
  store i32 %88, i32* %85, ali... (idx: 1)        25                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %84, i32* %81, ali... (idx: 0)        1                             0                             
  store i32 %88, i32* %85, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %84, i32* %81, ali... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 11)
  store i32 %88, i32* %85, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* %.pre-phi, a... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %90 = load i32* %.pre-phi, a... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %91 = load i32* %.pre-phi10,... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %91 = load i32* %.pre-phi10,... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %90 = load i32* %.pre-phi, a... (idx: 0)        16                            21                            
  %91 = load i32* %.pre-phi10,... (idx: 1)        16                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %90 = load i32* %.pre-phi, a... (idx: 0)        1                             0                             
  %91 = load i32* %.pre-phi10,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* %.pre-phi, a... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 12)
  %91 = load i32* %.pre-phi10,... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* %.pre-phi12,... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %92 = load i32* %.pre-phi12,... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %93 = load i32* %dlti, align... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %93 = load i32* %dlti, align... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %92 = load i32* %.pre-phi12,... (idx: 0)        17                            22                            
  %93 = load i32* %dlti, align... (idx: 1)        7                             12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %92 = load i32* %.pre-phi12,... (idx: 0)        1                             0                             
  %93 = load i32* %dlti, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* %.pre-phi12,... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 13)
  %93 = load i32* %dlti, align... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %90, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %90, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %91, i32* %.pre-ph... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %91, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %91, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %90, i32* %.pre-ph... (idx: 0)        28                            32                            
  store i32 %91, i32* %.pre-ph... (idx: 1)        18                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %90, i32* %.pre-ph... (idx: 0)        0                             1                             
  store i32 %91, i32* %.pre-ph... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %91, i32* %.pre-ph... (idx: 1) -> upzero_mem_dual_port_0 (mux inputs: 14)
  store i32 %90, i32* %.pre-ph... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %92, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %92, i32* %.pre-ph... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %92, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %93, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %93, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %92, i32* %.pre-ph... (idx: 0)        29                            24                            
  store i32 %93, i32* %.pre-ph... (idx: 1)        29                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %92, i32* %.pre-ph... (idx: 0)        0                             1                             
  store i32 %93, i32* %.pre-ph... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %93, i32* %.pre-ph... (idx: 1) -> upzero_mem_dual_port_0 (mux inputs: 16)
  store i32 %92, i32* %.pre-ph... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %dlt, i32* %dlti, ... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %dlt, i32* %dlti, ... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %dlt, i32* %dlti, ... (idx: 0)        11                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %dlt, i32* %dlti, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %dlt, i32* %dlti, ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 16)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        0                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__2
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 0, i32* %s.i.0, al... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 0, i32* %s.i.0, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %s.i.0, al... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %84 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load i32* getelementpt... (idx: 0)        1                             0                             
  %84 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %84 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %32 = sdiv i32 %i.02.i, 2 (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %32 = sdiv i32 %i.02.i, 2 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = sdiv i32 %i.02.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %33 = load i32* %scevgep12, ... (idx: 0)        10                            10                            
  %34 = load i32* %scevgep11, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %33 = load i32* %scevgep12, ... (idx: 0)        1                             0                             
  %34 = load i32* %scevgep11, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %33 = load i32* %scevgep12, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %34 = load i32* %scevgep11, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %8, i32* getelemen... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %9, i32* getelemen... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        6                             10                            
  store i32 %9, i32* getelemen... (idx: 1)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %9, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %9, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %86 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %86 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %87 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load i32* getelementpt... (idx: 0)        1                             0                             
  %87 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %87 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %10, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %10, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %11, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %11, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        7                             6                             
  store i32 %11, i32* geteleme... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %11, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %11, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %90 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %91 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %91 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %91 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %90 = load i32* getelementpt... (idx: 0)        1                             0                             
  %91 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %91 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %12, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %12, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %13, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %13, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        8                             7                             
  store i32 %13, i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %13, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %12, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %13, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %95 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %95 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %94 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %95 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %94 = load i32* getelementpt... (idx: 0)        1                             0                             
  %95 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %95 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %14, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %14, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %15, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %15, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        9                             8                             
  store i32 %15, i32* geteleme... (idx: 1)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %15, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %15, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %98 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %98 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %99 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %99 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %99 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* getelementpt... (idx: 0)        1                             0                             
  %99 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %99 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %16, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %16, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %17, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %17, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        10                            9                             
  store i32 %17, i32* geteleme... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %17, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %16, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 6)
  store i32 %17, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %102 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %102 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %103 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %103 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* getelementp... (idx: 0)        -5                            -5                            
  %103 = load i32* getelementp... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* getelementp... (idx: 0)        1                             0                             
  %103 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %103 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %18, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %18, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %19, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %19, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        11                            10                            
  store i32 %19, i32* geteleme... (idx: 1)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %19, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %18, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 7)
  store i32 %19, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %20, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %20, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %21, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %21, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        12                            11                            
  store i32 %21, i32* geteleme... (idx: 1)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %21, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %20, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 8)
  store i32 %21, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %22, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %22, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %23, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %23, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        13                            12                            
  store i32 %23, i32* geteleme... (idx: 1)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %23, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %22, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 9)
  store i32 %23, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %24, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %24, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %25, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %25, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        14                            13                            
  store i32 %25, i32* geteleme... (idx: 1)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %25, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %24, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 10)
  store i32 %25, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %26, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %26, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %27, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %27, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %26, i32* geteleme... (idx: 0)        15                            14                            
  store i32 %27, i32* geteleme... (idx: 1)        15                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %26, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %27, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %26, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 11)
  store i32 %27, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %28, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %28, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %29, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %29, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %28, i32* geteleme... (idx: 0)        16                            15                            
  store i32 %29, i32* geteleme... (idx: 1)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %28, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %29, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %28, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  store i32 %29, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %33, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %33, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  store i32 %34, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  store i32 %34, i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %33, i32* geteleme... (idx: 0)        17                            16                            
  store i32 %34, i32* geteleme... (idx: 1)        17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %33, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %34, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %33, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  store i32 %34, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__117
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %120 = load i32* %scevgep8, ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %120 = load i32* %scevgep8, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = load i32* %scevgep8, ... (idx: 0) -> main_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %ril.0.i.i = load i32* %ril.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %ril.0.i.i = load i32* %ril.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %ril.0.i.i = load i32* %ril.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %126 = load i32* %125, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %126 = load i32* %125, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %126 = load i32* %125, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %130 = load i32* %129, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %130 = load i32* %129, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %130 = load i32* %129, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %137 = load i32* %136, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %137 = load i32* %136, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = load i32* %136, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %161 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %161 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %162 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %162 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %161 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %162 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %161 = load i32* getelementp... (idx: 0)        1                             0                             
  %162 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %161 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %162 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %165 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %165 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %165 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* getelementp... (idx: 0)        1                             0                             
  %165 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %165 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %168 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %168 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %169 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %169 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %169 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load i32* getelementp... (idx: 0)        1                             0                             
  %169 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %168 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %169 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %172 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %172 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %173 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %173 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %172 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %173 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %172 = load i32* getelementp... (idx: 0)        1                             0                             
  %173 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %173 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %176 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %176 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %177 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %177 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %176 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %177 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %176 = load i32* getelementp... (idx: 0)        1                             0                             
  %177 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %176 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %177 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %180 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %180 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %181 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %181 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %180 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %181 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %180 = load i32* getelementp... (idx: 0)        1                             0                             
  %181 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %180 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %181 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %198 = load i32* %197, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %198 = load i32* %197, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %198 = load i32* %197, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %202 = load i32* %201, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %202 = load i32* %201, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %202 = load i32* %201, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %209 = load i32* %208, align... (idx: 0)        11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %209 = load i32* %208, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %209 = load i32* %208, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre = load i32* getelement... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre = load i32* getelement... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre37 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre37 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        8                             7                             
  %.pre37 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        1                             0                             
  %.pre37 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre = load i32* getelement... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre37 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre38 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre38 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre39 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre39 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre38 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre39 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre38 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre39 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre38 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre39 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre40 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre40 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre41 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre41 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre40 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre41 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre40 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre41 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre40 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre41 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre42 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre42 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre43 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre43 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre42 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre43 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre42 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre43 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre42 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre43 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre44 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre44 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre45 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre45 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre44 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre45 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre44 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre45 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre44 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre45 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre46 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre46 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre47 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre47 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre46 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre47 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre46 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre47 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre46 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre47 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre48 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre48 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre49 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre49 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre48 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre49 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre48 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre49 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre48 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre49 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre50 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre50 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre51 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre51 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre50 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre51 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre50 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre51 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre50 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre51 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre52 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre52 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre53 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre53 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre52 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre53 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre52 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre53 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre52 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre53 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre54 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre54 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre55 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre55 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre54 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre55 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre54 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre55 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre54 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre55 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre56 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre56 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre57 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre57 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre56 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre57 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre56 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre57 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre56 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre57 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre58 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre58 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
  %.pre59 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_0
  %.pre59 = load i32* geteleme... can share an output register with another operation already assigned to main_tqmf_local_mem_dual_port_1
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre58 = load i32* geteleme... (idx: 0)        8                             7                             
  %.pre59 = load i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre58 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre59 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre58 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 13)
  %.pre59 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_preheaderipreheader
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %250 = load i32* %249, align... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %250 = load i32* %249, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %250 = load i32* %249, align... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %256 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %256 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %257 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %257 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %256 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %257 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %256 = load i32* getelementp... (idx: 0)        1                             0                             
  %257 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %256 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %257 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
  %252 = sdiv i32 %i.11.i, 2 can share an output register with another operation already assigned to main_signed_divide_32_0
                                                  main_signed_divide_32_0       
  %252 = sdiv i32 %i.11.i, 2 (idx: 0)             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %252 = sdiv i32 %i.11.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %252 = sdiv i32 %i.11.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %259 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %259 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %260 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %260 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %259 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %260 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %259 = load i32* getelementp... (idx: 0)        1                             0                             
  %260 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %259 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %260 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %263 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %263 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %264 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %264 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %263 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %264 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %263 = load i32* getelementp... (idx: 0)        1                             0                             
  %264 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %263 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %264 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %267 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %267 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %268 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %268 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %267 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %268 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %267 = load i32* getelementp... (idx: 0)        1                             0                             
  %268 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %267 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %268 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %271 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %271 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %272 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %272 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %271 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %272 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %271 = load i32* getelementp... (idx: 0)        1                             0                             
  %272 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %271 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %272 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %275 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %275 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %276 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %276 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %275 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %276 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %275 = load i32* getelementp... (idx: 0)        1                             0                             
  %276 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %275 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %276 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %287 = load i32* %286, align... can share an output register with another operation already assigned to main_qq4_code4_table_local_mem_dual_port_0
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %287 = load i32* %286, align... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %287 = load i32* %286, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %287 = load i32* %286, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %296 = load i32* %295, align... can share an output register with another operation already assigned to main_wl_code_table_local_mem_dual_port_0
                                                  main_wl_code_table_local_mem_dual_port_0
  %296 = load i32* %295, align... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %296 = load i32* %295, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %296 = load i32* %295, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %304 = load i32* %303, align... can share an output register with another operation already assigned to main_ilb_table_local_mem_dual_port_0
                                                  main_ilb_table_local_mem_dual_port_0
  %304 = load i32* %303, align... (idx: 0)        7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %304 = load i32* %303, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %304 = load i32* %303, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %333 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %333 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %334 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %334 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %333 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %334 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %333 = load i32* getelementp... (idx: 0)        1                             0                             
  %334 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %333 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %334 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %362 = load i32* %361, align... can share an output register with another operation already assigned to main_qq2_code2_table_local_mem_dual_port_0
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %362 = load i32* %361, align... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %362 = load i32* %361, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %362 = load i32* %361, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %368 = load i32* %367, align... can share an output register with another operation already assigned to main_wh_code_table_local_mem_dual_port_0
                                                  main_wh_code_table_local_mem_dual_port_0
  %368 = load i32* %367, align... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %368 = load i32* %367, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %368 = load i32* %367, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %336 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %336 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %337 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %337 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %336 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %337 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %336 = load i32* getelementp... (idx: 0)        1                             0                             
  %337 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %336 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %337 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %376 = load i32* %375, align... can share an output register with another operation already assigned to main_ilb_table_local_mem_dual_port_0
                                                  main_ilb_table_local_mem_dual_port_0
  %376 = load i32* %375, align... (idx: 0)        8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %376 = load i32* %375, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %376 = load i32* %375, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %340 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %340 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %341 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %341 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %340 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %341 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %340 = load i32* getelementp... (idx: 0)        1                             0                             
  %341 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %340 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %341 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %344 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %344 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %345 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %345 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %345 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        1                             0                             
  %345 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %344 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %345 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %348 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %348 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %349 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %349 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %348 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %349 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %348 = load i32* getelementp... (idx: 0)        1                             0                             
  %349 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %348 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %349 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %352 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %352 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %353 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %353 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %352 = load i32* getelementp... (idx: 0)        -4                            -5                            
  %353 = load i32* getelementp... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %352 = load i32* getelementp... (idx: 0)        1                             0                             
  %353 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %352 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %353 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %453, i32* %scevge... (idx: 0)        20                            20                            
  store i32 %454, i32* %scevge... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %453, i32* %scevge... (idx: 0)        1                             0                             
  store i32 %454, i32* %scevge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %453, i32* %scevge... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %454, i32* %scevge... (idx: 1) -> main_result_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %460 = load i32* %scevgep2, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_0
  %460 = load i32* %scevgep2, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_1
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %460 = load i32* %scevgep2, ... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %460 = load i32* %scevgep2, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %460 = load i32* %scevgep2, ... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %461 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %461 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %461 = load i32* %scevgep, a... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)


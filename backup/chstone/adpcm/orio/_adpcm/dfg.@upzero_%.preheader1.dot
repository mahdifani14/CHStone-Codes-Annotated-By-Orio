digraph {
Node0x3f0f8f0[label="  %2 = load i32* %dlti, align 4, !tbaa !..."];
Node0x3f0f8f0 -> Node0x3f0f8f0[label="D:0.00ns L:2",color=blue];
Node0x4036910[label="  store i32 %10, i32* %bli, align 4, !tb..."];
Node0x3f0f8f0 -> Node0x4036910[label="D:0.00ns L:2",color=red];
Node0x40374a0[label="  store i32 %21, i32* %17, align 4, !tba..."];
Node0x3f0f8f0 -> Node0x40374a0[label="D:0.00ns L:2",color=red];
Node0x4038000[label="  store i32 %32, i32* %28, align 4, !tba..."];
Node0x3f0f8f0 -> Node0x4038000[label="D:0.00ns L:2",color=red];
Node0x4038b60[label="  store i32 %43, i32* %39, align 4, !tba..."];
Node0x3f0f8f0 -> Node0x4038b60[label="D:0.00ns L:2",color=red];
Node0x4039aa0[label="  store i32 %54, i32* %50, align 4, !tba..."];
Node0x3f0f8f0 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x403a600[label="  store i32 %65, i32* %61, align 4, !tba..."];
Node0x3f0f8f0 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x40361a0[label="  %3 = mul nsw i32 %2, %dlt"];
Node0x40361a0 -> Node0x40361a0[label="D:2.59ns L:1",color=blue];
Node0x4036280[label="  %4 = ashr i32 %3, 31"];
Node0x4036280 -> Node0x4036280[label="D:0.00ns L:0",color=blue];
Node0x4036360[label="  %5 = and i32 %4, -256"];
Node0x4036360 -> Node0x4036360[label="D:0.00ns L:0",color=blue];
Node0x4036440[label="  %6 = or i32 %5, 128"];
Node0x4036440 -> Node0x4036440[label="D:0.00ns L:0",color=blue];
Node0x4036520[label="  %7 = load i32* %bli, align 4, !tbaa !1"];
Node0x4036520 -> Node0x4036520[label="D:0.00ns L:2",color=blue];
Node0x4036520 -> Node0x4036910[label="D:0.00ns L:2",color=red];
Node0x4036600[label="  %8 = mul nsw i32 %7, 255"];
Node0x4036600 -> Node0x4036600[label="D:2.59ns L:1",color=blue];
Node0x4036720[label="  %9 = ashr i32 %8, 8"];
Node0x4036720 -> Node0x4036720[label="D:0.00ns L:0",color=blue];
Node0x4036800[label="  %10 = add nsw i32 %6, %9"];
Node0x4036800 -> Node0x4036800[label="D:2.50ns L:0",color=blue];
Node0x4036ad0[label="  %12 = load i32* %11, align 4, !tbaa !1"];
Node0x4036910 -> Node0x4036ad0[label="D:20.00ns L:1",color=red];
Node0x4037660[label="  %23 = load i32* %22, align 4, !tbaa !1"];
Node0x4036910 -> Node0x4037660[label="D:20.00ns L:1",color=red];
Node0x40381c0[label="  %34 = load i32* %33, align 4, !tbaa !1"];
Node0x4036910 -> Node0x40381c0[label="D:20.00ns L:1",color=red];
Node0x3f0efd0[label="  %45 = load i32* %44, align 4, !tbaa !1"];
Node0x4036910 -> Node0x3f0efd0[label="D:20.00ns L:1",color=red];
Node0x4039c60[label="  %56 = load i32* %55, align 4, !tbaa !1"];
Node0x4036910 -> Node0x4039c60[label="D:20.00ns L:1",color=red];
Node0x40369f0[label="  %11 = getelementptr inbounds i32* %dlt..."];
Node0x40369f0 -> Node0x40369f0[label="D:0.00ns L:0",color=blue];
Node0x40369f0 -> Node0x40369f0[label="D:0.00ns L:0",color=blue];
Node0x4036ad0 -> Node0x4036ad0[label="D:0.00ns L:2",color=blue];
Node0x4036ad0 -> Node0x40374a0[label="D:0.00ns L:2",color=red];
Node0x4036ad0 -> Node0x4038000[label="D:0.00ns L:2",color=red];
Node0x4036ad0 -> Node0x4038b60[label="D:0.00ns L:2",color=red];
Node0x4036ad0 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x4036ad0 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x4036bb0[label="  %13 = mul nsw i32 %12, %dlt"];
Node0x4036bb0 -> Node0x4036bb0[label="D:2.59ns L:1",color=blue];
Node0x4036d20[label="  %14 = ashr i32 %13, 31"];
Node0x4036d20 -> Node0x4036d20[label="D:0.00ns L:0",color=blue];
Node0x4036e00[label="  %15 = and i32 %14, -256"];
Node0x4036e00 -> Node0x4036e00[label="D:0.00ns L:0",color=blue];
Node0x4036ee0[label="  %16 = or i32 %15, 128"];
Node0x4036ee0 -> Node0x4036ee0[label="D:0.00ns L:0",color=blue];
Node0x4036fc0[label="  %17 = getelementptr inbounds i32* %bli..."];
Node0x4036fc0 -> Node0x4036fc0[label="D:0.00ns L:0",color=blue];
Node0x4036fc0 -> Node0x4036fc0[label="D:0.00ns L:0",color=blue];
Node0x40370a0[label="  %18 = load i32* %17, align 4, !tbaa !1"];
Node0x40370a0 -> Node0x40370a0[label="D:0.00ns L:2",color=blue];
Node0x40370a0 -> Node0x40374a0[label="D:0.00ns L:2",color=red];
Node0x4037180[label="  %19 = mul nsw i32 %18, 255"];
Node0x4037180 -> Node0x4037180[label="D:2.59ns L:1",color=blue];
Node0x40372e0[label="  %20 = ashr i32 %19, 8"];
Node0x40372e0 -> Node0x40372e0[label="D:0.00ns L:0",color=blue];
Node0x40373c0[label="  %21 = add nsw i32 %16, %20"];
Node0x40373c0 -> Node0x40373c0[label="D:2.50ns L:0",color=blue];
Node0x40374a0 -> Node0x4037660[label="D:20.00ns L:1",color=red];
Node0x40374a0 -> Node0x40381c0[label="D:20.00ns L:1",color=red];
Node0x40374a0 -> Node0x3f0efd0[label="D:20.00ns L:1",color=red];
Node0x40374a0 -> Node0x4039c60[label="D:20.00ns L:1",color=red];
Node0x4037580[label="  %22 = getelementptr inbounds i32* %dlt..."];
Node0x4037580 -> Node0x4037580[label="D:0.00ns L:0",color=blue];
Node0x4037580 -> Node0x4037580[label="D:0.00ns L:0",color=blue];
Node0x4037660 -> Node0x4037660[label="D:0.00ns L:2",color=blue];
Node0x4037660 -> Node0x4038000[label="D:0.00ns L:2",color=red];
Node0x4037660 -> Node0x4038b60[label="D:0.00ns L:2",color=red];
Node0x4037660 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x4037660 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x4037740[label="  %24 = mul nsw i32 %23, %dlt"];
Node0x4037740 -> Node0x4037740[label="D:2.59ns L:1",color=blue];
Node0x40378a0[label="  %25 = ashr i32 %24, 31"];
Node0x40378a0 -> Node0x40378a0[label="D:0.00ns L:0",color=blue];
Node0x4037980[label="  %26 = and i32 %25, -256"];
Node0x4037980 -> Node0x4037980[label="D:0.00ns L:0",color=blue];
Node0x4037a60[label="  %27 = or i32 %26, 128"];
Node0x4037a60 -> Node0x4037a60[label="D:0.00ns L:0",color=blue];
Node0x4037b40[label="  %28 = getelementptr inbounds i32* %bli..."];
Node0x4037b40 -> Node0x4037b40[label="D:0.00ns L:0",color=blue];
Node0x4037b40 -> Node0x4037b40[label="D:0.00ns L:0",color=blue];
Node0x4037c20[label="  %29 = load i32* %28, align 4, !tbaa !1"];
Node0x4037c20 -> Node0x4037c20[label="D:0.00ns L:2",color=blue];
Node0x4037c20 -> Node0x4038000[label="D:0.00ns L:2",color=red];
Node0x4037d00[label="  %30 = mul nsw i32 %29, 255"];
Node0x4037d00 -> Node0x4037d00[label="D:2.59ns L:1",color=blue];
Node0x4037de0[label="  %31 = ashr i32 %30, 8"];
Node0x4037de0 -> Node0x4037de0[label="D:0.00ns L:0",color=blue];
Node0x4037ec0[label="  %32 = add nsw i32 %27, %31"];
Node0x4037ec0 -> Node0x4037ec0[label="D:2.50ns L:0",color=blue];
Node0x4038000 -> Node0x40381c0[label="D:20.00ns L:1",color=red];
Node0x4038000 -> Node0x3f0efd0[label="D:20.00ns L:1",color=red];
Node0x4038000 -> Node0x4039c60[label="D:20.00ns L:1",color=red];
Node0x40380e0[label="  %33 = getelementptr inbounds i32* %dlt..."];
Node0x40380e0 -> Node0x40380e0[label="D:0.00ns L:0",color=blue];
Node0x40380e0 -> Node0x40380e0[label="D:0.00ns L:0",color=blue];
Node0x40381c0 -> Node0x40381c0[label="D:0.00ns L:2",color=blue];
Node0x40381c0 -> Node0x4038b60[label="D:0.00ns L:2",color=red];
Node0x40381c0 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x40381c0 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x40382a0[label="  %35 = mul nsw i32 %34, %dlt"];
Node0x40382a0 -> Node0x40382a0[label="D:2.59ns L:1",color=blue];
Node0x4038400[label="  %36 = ashr i32 %35, 31"];
Node0x4038400 -> Node0x4038400[label="D:0.00ns L:0",color=blue];
Node0x40384e0[label="  %37 = and i32 %36, -256"];
Node0x40384e0 -> Node0x40384e0[label="D:0.00ns L:0",color=blue];
Node0x40385c0[label="  %38 = or i32 %37, 128"];
Node0x40385c0 -> Node0x40385c0[label="D:0.00ns L:0",color=blue];
Node0x40386a0[label="  %39 = getelementptr inbounds i32* %bli..."];
Node0x40386a0 -> Node0x40386a0[label="D:0.00ns L:0",color=blue];
Node0x40386a0 -> Node0x40386a0[label="D:0.00ns L:0",color=blue];
Node0x4038780[label="  %40 = load i32* %39, align 4, !tbaa !1"];
Node0x4038780 -> Node0x4038780[label="D:0.00ns L:2",color=blue];
Node0x4038780 -> Node0x4038b60[label="D:0.00ns L:2",color=red];
Node0x4038860[label="  %41 = mul nsw i32 %40, 255"];
Node0x4038860 -> Node0x4038860[label="D:2.59ns L:1",color=blue];
Node0x4038940[label="  %42 = ashr i32 %41, 8"];
Node0x4038940 -> Node0x4038940[label="D:0.00ns L:0",color=blue];
Node0x4038a20[label="  %43 = add nsw i32 %38, %42"];
Node0x4038a20 -> Node0x4038a20[label="D:2.50ns L:0",color=blue];
Node0x4038b60 -> Node0x3f0efd0[label="D:20.00ns L:1",color=red];
Node0x4038b60 -> Node0x4039c60[label="D:20.00ns L:1",color=red];
Node0x3f0eeb0[label="  %44 = getelementptr inbounds i32* %dlt..."];
Node0x3f0eeb0 -> Node0x3f0eeb0[label="D:0.00ns L:0",color=blue];
Node0x3f0eeb0 -> Node0x3f0eeb0[label="D:0.00ns L:0",color=blue];
Node0x3f0efd0 -> Node0x3f0efd0[label="D:0.00ns L:2",color=blue];
Node0x3f0efd0 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x3f0efd0 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x3f0f0b0[label="  %46 = mul nsw i32 %45, %dlt"];
Node0x3f0f0b0 -> Node0x3f0f0b0[label="D:2.59ns L:1",color=blue];
Node0x4039450[label="  %47 = ashr i32 %46, 31"];
Node0x4039450 -> Node0x4039450[label="D:0.00ns L:0",color=blue];
Node0x4039530[label="  %48 = and i32 %47, -256"];
Node0x4039530 -> Node0x4039530[label="D:0.00ns L:0",color=blue];
Node0x4039610[label="  %49 = or i32 %48, 128"];
Node0x4039610 -> Node0x4039610[label="D:0.00ns L:0",color=blue];
Node0x40396f0[label="  %50 = getelementptr inbounds i32* %bli..."];
Node0x40396f0 -> Node0x40396f0[label="D:0.00ns L:0",color=blue];
Node0x40396f0 -> Node0x40396f0[label="D:0.00ns L:0",color=blue];
Node0x40397d0[label="  %51 = load i32* %50, align 4, !tbaa !1"];
Node0x40397d0 -> Node0x40397d0[label="D:0.00ns L:2",color=blue];
Node0x40397d0 -> Node0x4039aa0[label="D:0.00ns L:2",color=red];
Node0x3f0f190[label="  %52 = mul nsw i32 %51, 255"];
Node0x3f0f190 -> Node0x3f0f190[label="D:2.59ns L:1",color=blue];
Node0x40398b0[label="  %53 = ashr i32 %52, 8"];
Node0x40398b0 -> Node0x40398b0[label="D:0.00ns L:0",color=blue];
Node0x4039990[label="  %54 = add nsw i32 %49, %53"];
Node0x4039990 -> Node0x4039990[label="D:2.50ns L:0",color=blue];
Node0x4039aa0 -> Node0x4039c60[label="D:20.00ns L:1",color=red];
Node0x4039b80[label="  %55 = getelementptr inbounds i32* %dlt..."];
Node0x4039b80 -> Node0x4039b80[label="D:0.00ns L:0",color=blue];
Node0x4039b80 -> Node0x4039b80[label="D:0.00ns L:0",color=blue];
Node0x4039c60 -> Node0x4039c60[label="D:0.00ns L:2",color=blue];
Node0x4039c60 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x4039d40[label="  %57 = mul nsw i32 %56, %dlt"];
Node0x4039d40 -> Node0x4039d40[label="D:2.59ns L:1",color=blue];
Node0x4039ea0[label="  %58 = ashr i32 %57, 31"];
Node0x4039ea0 -> Node0x4039ea0[label="D:0.00ns L:0",color=blue];
Node0x4039f80[label="  %59 = and i32 %58, -256"];
Node0x4039f80 -> Node0x4039f80[label="D:0.00ns L:0",color=blue];
Node0x403a060[label="  %60 = or i32 %59, 128"];
Node0x403a060 -> Node0x403a060[label="D:0.00ns L:0",color=blue];
Node0x403a140[label="  %61 = getelementptr inbounds i32* %bli..."];
Node0x403a140 -> Node0x403a140[label="D:0.00ns L:0",color=blue];
Node0x403a140 -> Node0x403a140[label="D:0.00ns L:0",color=blue];
Node0x403a220[label="  %62 = load i32* %61, align 4, !tbaa !1"];
Node0x403a220 -> Node0x403a220[label="D:0.00ns L:2",color=blue];
Node0x403a220 -> Node0x403a600[label="D:0.00ns L:2",color=red];
Node0x403a300[label="  %63 = mul nsw i32 %62, 255"];
Node0x403a300 -> Node0x403a300[label="D:2.59ns L:1",color=blue];
Node0x403a3e0[label="  %64 = ashr i32 %63, 8"];
Node0x403a3e0 -> Node0x403a3e0[label="D:0.00ns L:0",color=blue];
Node0x403a4c0[label="  %65 = add nsw i32 %60, %64"];
Node0x403a4c0 -> Node0x403a4c0[label="D:2.50ns L:0",color=blue];
}

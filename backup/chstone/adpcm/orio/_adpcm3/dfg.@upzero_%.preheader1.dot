digraph {
Node0x3ea7a10[label="  %2 = load i32* %dlti, align 4, !tbaa !..."];
Node0x3ea7a10 -> Node0x3ea7a10[label="D:0.00ns L:2",color=blue];
Node0x3eb58b0[label="  store i32 %10, i32* %bli, align 4, !tb..."];
Node0x3ea7a10 -> Node0x3eb58b0[label="D:0.00ns L:2",color=red];
Node0x3eb6370[label="  store i32 %21, i32* %17, align 4, !tba..."];
Node0x3ea7a10 -> Node0x3eb6370[label="D:0.00ns L:2",color=red];
Node0x3eb6ea0[label="  store i32 %32, i32* %28, align 4, !tba..."];
Node0x3ea7a10 -> Node0x3eb6ea0[label="D:0.00ns L:2",color=red];
Node0x3eb7a70[label="  store i32 %43, i32* %39, align 4, !tba..."];
Node0x3ea7a10 -> Node0x3eb7a70[label="D:0.00ns L:2",color=red];
Node0x3eb8a60[label="  store i32 %54, i32* %50, align 4, !tba..."];
Node0x3ea7a10 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb94e0[label="  store i32 %65, i32* %61, align 4, !tba..."];
Node0x3ea7a10 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3ea7410[label="  %3 = mul nsw i32 %2, %dlt"];
Node0x3ea7410 -> Node0x3ea7410[label="D:2.59ns L:1",color=blue];
Node0x3ea75b0[label="  %4 = ashr i32 %3, 31"];
Node0x3ea75b0 -> Node0x3ea75b0[label="D:0.00ns L:0",color=blue];
Node0x3ea7690[label="  %5 = and i32 %4, -256"];
Node0x3ea7690 -> Node0x3ea7690[label="D:0.00ns L:0",color=blue];
Node0x3eb5450[label="  %6 = or i32 %5, 128"];
Node0x3eb5450 -> Node0x3eb5450[label="D:0.00ns L:0",color=blue];
Node0x3eb5530[label="  %7 = load i32* %bli, align 4, !tbaa !1"];
Node0x3eb5530 -> Node0x3eb5530[label="D:0.00ns L:2",color=blue];
Node0x3eb5530 -> Node0x3eb58b0[label="D:0.00ns L:2",color=red];
Node0x3eb5610[label="  %8 = mul nsw i32 %7, 255"];
Node0x3eb5610 -> Node0x3eb5610[label="D:2.59ns L:1",color=blue];
Node0x3eb56f0[label="  %9 = ashr i32 %8, 8"];
Node0x3eb56f0 -> Node0x3eb56f0[label="D:0.00ns L:0",color=blue];
Node0x3eb57d0[label="  %10 = add nsw i32 %6, %9"];
Node0x3eb57d0 -> Node0x3eb57d0[label="D:2.50ns L:0",color=blue];
Node0x3eb5a70[label="  %12 = load i32* %11, align 4, !tbaa !1"];
Node0x3eb58b0 -> Node0x3eb5a70[label="D:20.00ns L:1",color=red];
Node0x3eb6530[label="  %23 = load i32* %22, align 4, !tbaa !1"];
Node0x3eb58b0 -> Node0x3eb6530[label="D:20.00ns L:1",color=red];
Node0x3eb7060[label="  %34 = load i32* %33, align 4, !tbaa !1"];
Node0x3eb58b0 -> Node0x3eb7060[label="D:20.00ns L:1",color=red];
Node0x3eb51e0[label="  %45 = load i32* %44, align 4, !tbaa !1"];
Node0x3eb58b0 -> Node0x3eb51e0[label="D:20.00ns L:1",color=red];
Node0x3eb8c20[label="  %56 = load i32* %55, align 4, !tbaa !1"];
Node0x3eb58b0 -> Node0x3eb8c20[label="D:20.00ns L:1",color=red];
Node0x3eb5990[label="  %11 = getelementptr inbounds i32* %dlt..."];
Node0x3eb5990 -> Node0x3eb5990[label="D:0.00ns L:0",color=blue];
Node0x3eb5990 -> Node0x3eb5990[label="D:0.00ns L:0",color=blue];
Node0x3eb5a70 -> Node0x3eb5a70[label="D:0.00ns L:2",color=blue];
Node0x3eb5a70 -> Node0x3eb6370[label="D:0.00ns L:2",color=red];
Node0x3eb5a70 -> Node0x3eb6ea0[label="D:0.00ns L:2",color=red];
Node0x3eb5a70 -> Node0x3eb7a70[label="D:0.00ns L:2",color=red];
Node0x3eb5a70 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb5a70 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb5b50[label="  %13 = mul nsw i32 %12, %dlt"];
Node0x3eb5b50 -> Node0x3eb5b50[label="D:2.59ns L:1",color=blue];
Node0x3eb5c30[label="  %14 = ashr i32 %13, 31"];
Node0x3eb5c30 -> Node0x3eb5c30[label="D:0.00ns L:0",color=blue];
Node0x3eb5d10[label="  %15 = and i32 %14, -256"];
Node0x3eb5d10 -> Node0x3eb5d10[label="D:0.00ns L:0",color=blue];
Node0x3eb5df0[label="  %16 = or i32 %15, 128"];
Node0x3eb5df0 -> Node0x3eb5df0[label="D:0.00ns L:0",color=blue];
Node0x3eb5ed0[label="  %17 = getelementptr inbounds i32* %bli..."];
Node0x3eb5ed0 -> Node0x3eb5ed0[label="D:0.00ns L:0",color=blue];
Node0x3eb5ed0 -> Node0x3eb5ed0[label="D:0.00ns L:0",color=blue];
Node0x3eb5fb0[label="  %18 = load i32* %17, align 4, !tbaa !1"];
Node0x3eb5fb0 -> Node0x3eb5fb0[label="D:0.00ns L:2",color=blue];
Node0x3eb5fb0 -> Node0x3eb6370[label="D:0.00ns L:2",color=red];
Node0x3eb6090[label="  %19 = mul nsw i32 %18, 255"];
Node0x3eb6090 -> Node0x3eb6090[label="D:2.59ns L:1",color=blue];
Node0x3eb61b0[label="  %20 = ashr i32 %19, 8"];
Node0x3eb61b0 -> Node0x3eb61b0[label="D:0.00ns L:0",color=blue];
Node0x3eb6290[label="  %21 = add nsw i32 %16, %20"];
Node0x3eb6290 -> Node0x3eb6290[label="D:2.50ns L:0",color=blue];
Node0x3eb6370 -> Node0x3eb6530[label="D:20.00ns L:1",color=red];
Node0x3eb6370 -> Node0x3eb7060[label="D:20.00ns L:1",color=red];
Node0x3eb6370 -> Node0x3eb51e0[label="D:20.00ns L:1",color=red];
Node0x3eb6370 -> Node0x3eb8c20[label="D:20.00ns L:1",color=red];
Node0x3eb6450[label="  %22 = getelementptr inbounds i32* %dlt..."];
Node0x3eb6450 -> Node0x3eb6450[label="D:0.00ns L:0",color=blue];
Node0x3eb6450 -> Node0x3eb6450[label="D:0.00ns L:0",color=blue];
Node0x3eb6530 -> Node0x3eb6530[label="D:0.00ns L:2",color=blue];
Node0x3eb6530 -> Node0x3eb6ea0[label="D:0.00ns L:2",color=red];
Node0x3eb6530 -> Node0x3eb7a70[label="D:0.00ns L:2",color=red];
Node0x3eb6530 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb6530 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb6610[label="  %24 = mul nsw i32 %23, %dlt"];
Node0x3eb6610 -> Node0x3eb6610[label="D:2.59ns L:1",color=blue];
Node0x3eb6730[label="  %25 = ashr i32 %24, 31"];
Node0x3eb6730 -> Node0x3eb6730[label="D:0.00ns L:0",color=blue];
Node0x3eb6810[label="  %26 = and i32 %25, -256"];
Node0x3eb6810 -> Node0x3eb6810[label="D:0.00ns L:0",color=blue];
Node0x3eb68f0[label="  %27 = or i32 %26, 128"];
Node0x3eb68f0 -> Node0x3eb68f0[label="D:0.00ns L:0",color=blue];
Node0x3eb69d0[label="  %28 = getelementptr inbounds i32* %bli..."];
Node0x3eb69d0 -> Node0x3eb69d0[label="D:0.00ns L:0",color=blue];
Node0x3eb69d0 -> Node0x3eb69d0[label="D:0.00ns L:0",color=blue];
Node0x3eb6ab0[label="  %29 = load i32* %28, align 4, !tbaa !1"];
Node0x3eb6ab0 -> Node0x3eb6ab0[label="D:0.00ns L:2",color=blue];
Node0x3eb6ab0 -> Node0x3eb6ea0[label="D:0.00ns L:2",color=red];
Node0x3eb6b90[label="  %30 = mul nsw i32 %29, 255"];
Node0x3eb6b90 -> Node0x3eb6b90[label="D:2.59ns L:1",color=blue];
Node0x3eb6cb0[label="  %31 = ashr i32 %30, 8"];
Node0x3eb6cb0 -> Node0x3eb6cb0[label="D:0.00ns L:0",color=blue];
Node0x3eb6d90[label="  %32 = add nsw i32 %27, %31"];
Node0x3eb6d90 -> Node0x3eb6d90[label="D:2.50ns L:0",color=blue];
Node0x3eb6ea0 -> Node0x3eb7060[label="D:20.00ns L:1",color=red];
Node0x3eb6ea0 -> Node0x3eb51e0[label="D:20.00ns L:1",color=red];
Node0x3eb6ea0 -> Node0x3eb8c20[label="D:20.00ns L:1",color=red];
Node0x3eb6f80[label="  %33 = getelementptr inbounds i32* %dlt..."];
Node0x3eb6f80 -> Node0x3eb6f80[label="D:0.00ns L:0",color=blue];
Node0x3eb6f80 -> Node0x3eb6f80[label="D:0.00ns L:0",color=blue];
Node0x3eb7060 -> Node0x3eb7060[label="D:0.00ns L:2",color=blue];
Node0x3eb7060 -> Node0x3eb7a70[label="D:0.00ns L:2",color=red];
Node0x3eb7060 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb7060 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb7140[label="  %35 = mul nsw i32 %34, %dlt"];
Node0x3eb7140 -> Node0x3eb7140[label="D:2.59ns L:1",color=blue];
Node0x3eb7270[label="  %36 = ashr i32 %35, 31"];
Node0x3eb7270 -> Node0x3eb7270[label="D:0.00ns L:0",color=blue];
Node0x3eb7350[label="  %37 = and i32 %36, -256"];
Node0x3eb7350 -> Node0x3eb7350[label="D:0.00ns L:0",color=blue];
Node0x3eb7430[label="  %38 = or i32 %37, 128"];
Node0x3eb7430 -> Node0x3eb7430[label="D:0.00ns L:0",color=blue];
Node0x3eb7510[label="  %39 = getelementptr inbounds i32* %bli..."];
Node0x3eb7510 -> Node0x3eb7510[label="D:0.00ns L:0",color=blue];
Node0x3eb7510 -> Node0x3eb7510[label="D:0.00ns L:0",color=blue];
Node0x3eb75f0[label="  %40 = load i32* %39, align 4, !tbaa !1"];
Node0x3eb75f0 -> Node0x3eb75f0[label="D:0.00ns L:2",color=blue];
Node0x3eb75f0 -> Node0x3eb7a70[label="D:0.00ns L:2",color=red];
Node0x3eb76d0[label="  %41 = mul nsw i32 %40, 255"];
Node0x3eb76d0 -> Node0x3eb76d0[label="D:2.59ns L:1",color=blue];
Node0x3eb7880[label="  %42 = ashr i32 %41, 8"];
Node0x3eb7880 -> Node0x3eb7880[label="D:0.00ns L:0",color=blue];
Node0x3eb7960[label="  %43 = add nsw i32 %38, %42"];
Node0x3eb7960 -> Node0x3eb7960[label="D:2.50ns L:0",color=blue];
Node0x3eb7a70 -> Node0x3eb51e0[label="D:20.00ns L:1",color=red];
Node0x3eb7a70 -> Node0x3eb8c20[label="D:20.00ns L:1",color=red];
Node0x3eb5040[label="  %44 = getelementptr inbounds i32* %dlt..."];
Node0x3eb5040 -> Node0x3eb5040[label="D:0.00ns L:0",color=blue];
Node0x3eb5040 -> Node0x3eb5040[label="D:0.00ns L:0",color=blue];
Node0x3eb51e0 -> Node0x3eb51e0[label="D:0.00ns L:2",color=blue];
Node0x3eb51e0 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb51e0 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb52c0[label="  %46 = mul nsw i32 %45, %dlt"];
Node0x3eb52c0 -> Node0x3eb52c0[label="D:2.59ns L:1",color=blue];
Node0x3eb8360[label="  %47 = ashr i32 %46, 31"];
Node0x3eb8360 -> Node0x3eb8360[label="D:0.00ns L:0",color=blue];
Node0x3eb8440[label="  %48 = and i32 %47, -256"];
Node0x3eb8440 -> Node0x3eb8440[label="D:0.00ns L:0",color=blue];
Node0x3eb8520[label="  %49 = or i32 %48, 128"];
Node0x3eb8520 -> Node0x3eb8520[label="D:0.00ns L:0",color=blue];
Node0x3eb8600[label="  %50 = getelementptr inbounds i32* %bli..."];
Node0x3eb8600 -> Node0x3eb8600[label="D:0.00ns L:0",color=blue];
Node0x3eb8600 -> Node0x3eb8600[label="D:0.00ns L:0",color=blue];
Node0x3eb86e0[label="  %51 = load i32* %50, align 4, !tbaa !1"];
Node0x3eb86e0 -> Node0x3eb86e0[label="D:0.00ns L:2",color=blue];
Node0x3eb86e0 -> Node0x3eb8a60[label="D:0.00ns L:2",color=red];
Node0x3eb87c0[label="  %52 = mul nsw i32 %51, 255"];
Node0x3eb87c0 -> Node0x3eb87c0[label="D:2.59ns L:1",color=blue];
Node0x3eb88a0[label="  %53 = ashr i32 %52, 8"];
Node0x3eb88a0 -> Node0x3eb88a0[label="D:0.00ns L:0",color=blue];
Node0x3eb8980[label="  %54 = add nsw i32 %49, %53"];
Node0x3eb8980 -> Node0x3eb8980[label="D:2.50ns L:0",color=blue];
Node0x3eb8a60 -> Node0x3eb8c20[label="D:20.00ns L:1",color=red];
Node0x3eb8b40[label="  %55 = getelementptr inbounds i32* %dlt..."];
Node0x3eb8b40 -> Node0x3eb8b40[label="D:0.00ns L:0",color=blue];
Node0x3eb8b40 -> Node0x3eb8b40[label="D:0.00ns L:0",color=blue];
Node0x3eb8c20 -> Node0x3eb8c20[label="D:0.00ns L:2",color=blue];
Node0x3eb8c20 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb8d00[label="  %57 = mul nsw i32 %56, %dlt"];
Node0x3eb8d00 -> Node0x3eb8d00[label="D:2.59ns L:1",color=blue];
Node0x3eb8de0[label="  %58 = ashr i32 %57, 31"];
Node0x3eb8de0 -> Node0x3eb8de0[label="D:0.00ns L:0",color=blue];
Node0x3eb8ec0[label="  %59 = and i32 %58, -256"];
Node0x3eb8ec0 -> Node0x3eb8ec0[label="D:0.00ns L:0",color=blue];
Node0x3eb8fa0[label="  %60 = or i32 %59, 128"];
Node0x3eb8fa0 -> Node0x3eb8fa0[label="D:0.00ns L:0",color=blue];
Node0x3eb9080[label="  %61 = getelementptr inbounds i32* %bli..."];
Node0x3eb9080 -> Node0x3eb9080[label="D:0.00ns L:0",color=blue];
Node0x3eb9080 -> Node0x3eb9080[label="D:0.00ns L:0",color=blue];
Node0x3eb9160[label="  %62 = load i32* %61, align 4, !tbaa !1"];
Node0x3eb9160 -> Node0x3eb9160[label="D:0.00ns L:2",color=blue];
Node0x3eb9160 -> Node0x3eb94e0[label="D:0.00ns L:2",color=red];
Node0x3eb9240[label="  %63 = mul nsw i32 %62, 255"];
Node0x3eb9240 -> Node0x3eb9240[label="D:2.59ns L:1",color=blue];
Node0x3eb9320[label="  %64 = ashr i32 %63, 8"];
Node0x3eb9320 -> Node0x3eb9320[label="D:0.00ns L:0",color=blue];
Node0x3eb9400[label="  %65 = add nsw i32 %60, %64"];
Node0x3eb9400 -> Node0x3eb9400[label="D:2.50ns L:0",color=blue];
}

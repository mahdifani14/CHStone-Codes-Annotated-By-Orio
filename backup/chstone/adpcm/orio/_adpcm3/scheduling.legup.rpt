//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Jan 28 18:16:28 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: upzero
state: LEGUP_0
   Transition: if (start): LEGUP_F_upzero_BB__0_1 default: LEGUP_0
state: LEGUP_F_upzero_BB__0_1
   %1 = icmp eq i32 %dlt, 0 (endState: LEGUP_F_upzero_BB__0_1)
   br i1 %1, label %.preheader, label %.preheader1
   Transition: if (%1): LEGUP_F_upzero_BB_preheader_27 default: LEGUP_F_upzero_BB_preheader1_2
state: LEGUP_F_upzero_BB_preheader1_2
   %2 = load i32* %dlti, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_4)
   %7 = load i32* %bli, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_4)
   %11 = getelementptr inbounds i32* %dlti, i32 1 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %17 = getelementptr inbounds i32* %bli, i32 1 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %22 = getelementptr inbounds i32* %dlti, i32 2 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %28 = getelementptr inbounds i32* %bli, i32 2 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %33 = getelementptr inbounds i32* %dlti, i32 3 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %39 = getelementptr inbounds i32* %bli, i32 3 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %44 = getelementptr inbounds i32* %dlti, i32 4 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %50 = getelementptr inbounds i32* %bli, i32 4 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %55 = getelementptr inbounds i32* %dlti, i32 5 (endState: LEGUP_F_upzero_BB_preheader1_2)
   %61 = getelementptr inbounds i32* %bli, i32 5 (endState: LEGUP_F_upzero_BB_preheader1_2)
   Transition: default: LEGUP_F_upzero_BB_preheader1_3
state: LEGUP_F_upzero_BB_preheader1_3
   Transition: default: LEGUP_F_upzero_BB_preheader1_4
state: LEGUP_F_upzero_BB_preheader1_4
   %3 = mul nsw i32 %2, %dlt (endState: LEGUP_F_upzero_BB_preheader1_5)
   %8 = mul nsw i32 %7, 255 (endState: LEGUP_F_upzero_BB_preheader1_5)
   Transition: default: LEGUP_F_upzero_BB_preheader1_5
state: LEGUP_F_upzero_BB_preheader1_5
   %4 = ashr i32 %3, 31 (endState: LEGUP_F_upzero_BB_preheader1_5)
   %5 = and i32 %4, -256 (endState: LEGUP_F_upzero_BB_preheader1_5)
   %6 = or i32 %5, 128 (endState: LEGUP_F_upzero_BB_preheader1_5)
   %9 = ashr i32 %8, 8 (endState: LEGUP_F_upzero_BB_preheader1_5)
   %10 = add nsw i32 %6, %9 (endState: LEGUP_F_upzero_BB_preheader1_5)
   store i32 %10, i32* %bli, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_6)
   Transition: default: LEGUP_F_upzero_BB_preheader1_6
state: LEGUP_F_upzero_BB_preheader1_6
   %12 = load i32* %11, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_8)
   %18 = load i32* %17, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_8)
   Transition: default: LEGUP_F_upzero_BB_preheader1_7
state: LEGUP_F_upzero_BB_preheader1_7
   Transition: default: LEGUP_F_upzero_BB_preheader1_8
state: LEGUP_F_upzero_BB_preheader1_8
   %13 = mul nsw i32 %12, %dlt (endState: LEGUP_F_upzero_BB_preheader1_9)
   %19 = mul nsw i32 %18, 255 (endState: LEGUP_F_upzero_BB_preheader1_9)
   Transition: default: LEGUP_F_upzero_BB_preheader1_9
state: LEGUP_F_upzero_BB_preheader1_9
   %14 = ashr i32 %13, 31 (endState: LEGUP_F_upzero_BB_preheader1_9)
   %15 = and i32 %14, -256 (endState: LEGUP_F_upzero_BB_preheader1_9)
   %16 = or i32 %15, 128 (endState: LEGUP_F_upzero_BB_preheader1_9)
   %20 = ashr i32 %19, 8 (endState: LEGUP_F_upzero_BB_preheader1_9)
   %21 = add nsw i32 %16, %20 (endState: LEGUP_F_upzero_BB_preheader1_9)
   store i32 %21, i32* %17, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_10)
   Transition: default: LEGUP_F_upzero_BB_preheader1_10
state: LEGUP_F_upzero_BB_preheader1_10
   %23 = load i32* %22, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_12)
   %29 = load i32* %28, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_12)
   Transition: default: LEGUP_F_upzero_BB_preheader1_11
state: LEGUP_F_upzero_BB_preheader1_11
   Transition: default: LEGUP_F_upzero_BB_preheader1_12
state: LEGUP_F_upzero_BB_preheader1_12
   %24 = mul nsw i32 %23, %dlt (endState: LEGUP_F_upzero_BB_preheader1_13)
   %30 = mul nsw i32 %29, 255 (endState: LEGUP_F_upzero_BB_preheader1_13)
   Transition: default: LEGUP_F_upzero_BB_preheader1_13
state: LEGUP_F_upzero_BB_preheader1_13
   %25 = ashr i32 %24, 31 (endState: LEGUP_F_upzero_BB_preheader1_13)
   %26 = and i32 %25, -256 (endState: LEGUP_F_upzero_BB_preheader1_13)
   %27 = or i32 %26, 128 (endState: LEGUP_F_upzero_BB_preheader1_13)
   %31 = ashr i32 %30, 8 (endState: LEGUP_F_upzero_BB_preheader1_13)
   %32 = add nsw i32 %27, %31 (endState: LEGUP_F_upzero_BB_preheader1_13)
   store i32 %32, i32* %28, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_14)
   Transition: default: LEGUP_F_upzero_BB_preheader1_14
state: LEGUP_F_upzero_BB_preheader1_14
   %34 = load i32* %33, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_16)
   %40 = load i32* %39, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_16)
   Transition: default: LEGUP_F_upzero_BB_preheader1_15
state: LEGUP_F_upzero_BB_preheader1_15
   Transition: default: LEGUP_F_upzero_BB_preheader1_16
state: LEGUP_F_upzero_BB_preheader1_16
   %35 = mul nsw i32 %34, %dlt (endState: LEGUP_F_upzero_BB_preheader1_17)
   %41 = mul nsw i32 %40, 255 (endState: LEGUP_F_upzero_BB_preheader1_17)
   Transition: default: LEGUP_F_upzero_BB_preheader1_17
state: LEGUP_F_upzero_BB_preheader1_17
   %36 = ashr i32 %35, 31 (endState: LEGUP_F_upzero_BB_preheader1_17)
   %37 = and i32 %36, -256 (endState: LEGUP_F_upzero_BB_preheader1_17)
   %38 = or i32 %37, 128 (endState: LEGUP_F_upzero_BB_preheader1_17)
   %42 = ashr i32 %41, 8 (endState: LEGUP_F_upzero_BB_preheader1_17)
   %43 = add nsw i32 %38, %42 (endState: LEGUP_F_upzero_BB_preheader1_17)
   store i32 %43, i32* %39, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_18)
   Transition: default: LEGUP_F_upzero_BB_preheader1_18
state: LEGUP_F_upzero_BB_preheader1_18
   %45 = load i32* %44, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_20)
   %51 = load i32* %50, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_20)
   Transition: default: LEGUP_F_upzero_BB_preheader1_19
state: LEGUP_F_upzero_BB_preheader1_19
   Transition: default: LEGUP_F_upzero_BB_preheader1_20
state: LEGUP_F_upzero_BB_preheader1_20
   %46 = mul nsw i32 %45, %dlt (endState: LEGUP_F_upzero_BB_preheader1_21)
   %52 = mul nsw i32 %51, 255 (endState: LEGUP_F_upzero_BB_preheader1_21)
   Transition: default: LEGUP_F_upzero_BB_preheader1_21
state: LEGUP_F_upzero_BB_preheader1_21
   %47 = ashr i32 %46, 31 (endState: LEGUP_F_upzero_BB_preheader1_21)
   %48 = and i32 %47, -256 (endState: LEGUP_F_upzero_BB_preheader1_21)
   %49 = or i32 %48, 128 (endState: LEGUP_F_upzero_BB_preheader1_21)
   %53 = ashr i32 %52, 8 (endState: LEGUP_F_upzero_BB_preheader1_21)
   %54 = add nsw i32 %49, %53 (endState: LEGUP_F_upzero_BB_preheader1_21)
   store i32 %54, i32* %50, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_22)
   Transition: default: LEGUP_F_upzero_BB_preheader1_22
state: LEGUP_F_upzero_BB_preheader1_22
   %56 = load i32* %55, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_24)
   %62 = load i32* %61, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_24)
   Transition: default: LEGUP_F_upzero_BB_preheader1_23
state: LEGUP_F_upzero_BB_preheader1_23
   Transition: default: LEGUP_F_upzero_BB_preheader1_24
state: LEGUP_F_upzero_BB_preheader1_24
   %57 = mul nsw i32 %56, %dlt (endState: LEGUP_F_upzero_BB_preheader1_25)
   %63 = mul nsw i32 %62, 255 (endState: LEGUP_F_upzero_BB_preheader1_25)
   Transition: default: LEGUP_F_upzero_BB_preheader1_25
state: LEGUP_F_upzero_BB_preheader1_25
   %58 = ashr i32 %57, 31 (endState: LEGUP_F_upzero_BB_preheader1_25)
   %59 = and i32 %58, -256 (endState: LEGUP_F_upzero_BB_preheader1_25)
   %60 = or i32 %59, 128 (endState: LEGUP_F_upzero_BB_preheader1_25)
   %64 = ashr i32 %63, 8 (endState: LEGUP_F_upzero_BB_preheader1_25)
   %65 = add nsw i32 %60, %64 (endState: LEGUP_F_upzero_BB_preheader1_25)
   store i32 %65, i32* %61, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader1_26)
   Transition: default: LEGUP_F_upzero_BB_preheader1_26
state: LEGUP_F_upzero_BB_preheader1_26
   br label %89
   Transition: default: LEGUP_F_upzero_BB__89_34
state: LEGUP_F_upzero_BB_preheader_27
   %66 = load i32* %bli, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_29)
   %69 = getelementptr inbounds i32* %bli, i32 1 (endState: LEGUP_F_upzero_BB_preheader_27)
   %70 = load i32* %69, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_29)
   %73 = getelementptr inbounds i32* %bli, i32 2 (endState: LEGUP_F_upzero_BB_preheader_27)
   %77 = getelementptr inbounds i32* %bli, i32 3 (endState: LEGUP_F_upzero_BB_preheader_27)
   %81 = getelementptr inbounds i32* %bli, i32 4 (endState: LEGUP_F_upzero_BB_preheader_27)
   %85 = getelementptr inbounds i32* %bli, i32 5 (endState: LEGUP_F_upzero_BB_preheader_27)
   %.pre = getelementptr inbounds i32* %dlti, i32 4 (endState: LEGUP_F_upzero_BB_preheader_27)
   %.pre7 = getelementptr inbounds i32* %dlti, i32 5 (endState: LEGUP_F_upzero_BB_preheader_27)
   %.pre9 = getelementptr inbounds i32* %dlti, i32 3 (endState: LEGUP_F_upzero_BB_preheader_27)
   %.pre11 = getelementptr inbounds i32* %dlti, i32 2 (endState: LEGUP_F_upzero_BB_preheader_27)
   %.pre13 = getelementptr inbounds i32* %dlti, i32 1 (endState: LEGUP_F_upzero_BB_preheader_27)
   Transition: default: LEGUP_F_upzero_BB_preheader_28
state: LEGUP_F_upzero_BB_preheader_28
   %74 = load i32* %73, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_30)
   %78 = load i32* %77, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_30)
   Transition: default: LEGUP_F_upzero_BB_preheader_29
state: LEGUP_F_upzero_BB_preheader_29
   %67 = mul nsw i32 %66, 255 (endState: LEGUP_F_upzero_BB_preheader_30)
   %71 = mul nsw i32 %70, 255 (endState: LEGUP_F_upzero_BB_preheader_30)
   %82 = load i32* %81, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_31)
   %86 = load i32* %85, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_31)
   Transition: default: LEGUP_F_upzero_BB_preheader_30
state: LEGUP_F_upzero_BB_preheader_30
   %68 = ashr i32 %67, 8 (endState: LEGUP_F_upzero_BB_preheader_30)
   store i32 %68, i32* %bli, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_31)
   %72 = ashr i32 %71, 8 (endState: LEGUP_F_upzero_BB_preheader_30)
   store i32 %72, i32* %69, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_31)
   %75 = mul nsw i32 %74, 255 (endState: LEGUP_F_upzero_BB_preheader_31)
   %79 = mul nsw i32 %78, 255 (endState: LEGUP_F_upzero_BB_preheader_31)
   Transition: default: LEGUP_F_upzero_BB_preheader_31
state: LEGUP_F_upzero_BB_preheader_31
   %76 = ashr i32 %75, 8 (endState: LEGUP_F_upzero_BB_preheader_31)
   store i32 %76, i32* %73, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_32)
   %80 = ashr i32 %79, 8 (endState: LEGUP_F_upzero_BB_preheader_31)
   store i32 %80, i32* %77, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_32)
   %83 = mul nsw i32 %82, 255 (endState: LEGUP_F_upzero_BB_preheader_32)
   %87 = mul nsw i32 %86, 255 (endState: LEGUP_F_upzero_BB_preheader_32)
   Transition: default: LEGUP_F_upzero_BB_preheader_32
state: LEGUP_F_upzero_BB_preheader_32
   %84 = ashr i32 %83, 8 (endState: LEGUP_F_upzero_BB_preheader_32)
   store i32 %84, i32* %81, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_33)
   %88 = ashr i32 %87, 8 (endState: LEGUP_F_upzero_BB_preheader_32)
   store i32 %88, i32* %85, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB_preheader_33)
   Transition: default: LEGUP_F_upzero_BB_preheader_33
state: LEGUP_F_upzero_BB_preheader_33
   br label %89
   Transition: default: LEGUP_F_upzero_BB__89_34
state: LEGUP_F_upzero_BB__89_34
   %.pre-phi14 = phi i32* [ %11, %.preheader1 ], [ %.pre13, %.preheader ] (endState: LEGUP_F_upzero_BB__89_34)
   %.pre-phi12 = phi i32* [ %22, %.preheader1 ], [ %.pre11, %.preheader ] (endState: LEGUP_F_upzero_BB__89_34)
   %.pre-phi10 = phi i32* [ %33, %.preheader1 ], [ %.pre9, %.preheader ] (endState: LEGUP_F_upzero_BB__89_34)
   %.pre-phi8 = phi i32* [ %55, %.preheader1 ], [ %.pre7, %.preheader ] (endState: LEGUP_F_upzero_BB__89_34)
   %.pre-phi = phi i32* [ %44, %.preheader1 ], [ %.pre, %.preheader ] (endState: LEGUP_F_upzero_BB__89_34)
   %90 = load i32* %.pre-phi, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_36)
   %91 = load i32* %.pre-phi10, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_36)
   Transition: default: LEGUP_F_upzero_BB__89_35
state: LEGUP_F_upzero_BB__89_35
   %92 = load i32* %.pre-phi12, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_37)
   %93 = load i32* %dlti, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_37)
   Transition: default: LEGUP_F_upzero_BB__89_36
state: LEGUP_F_upzero_BB__89_36
   store i32 %90, i32* %.pre-phi8, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_37)
   store i32 %91, i32* %.pre-phi, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_37)
   Transition: default: LEGUP_F_upzero_BB__89_37
state: LEGUP_F_upzero_BB__89_37
   store i32 %92, i32* %.pre-phi10, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_38)
   store i32 %93, i32* %.pre-phi14, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_38)
   Transition: default: LEGUP_F_upzero_BB__89_38
state: LEGUP_F_upzero_BB__89_38
   store i32 %dlt, i32* %dlti, align 4, !tbaa !1 (endState: LEGUP_F_upzero_BB__89_39)
   Transition: default: LEGUP_F_upzero_BB__89_39
state: LEGUP_F_upzero_BB__89_39
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %.preheader1 Num States: 25
Basic Block: %.preheader Num States: 7
Basic Block: %89 Num States: 6
End Function: upzero
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: encode
state: LEGUP_0
   Transition: if (start): LEGUP_F_encode_BB__0_1 default: LEGUP_0
state: LEGUP_F_encode_BB__0_1
   %1 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_3)
   %3 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_3)
   Transition: default: LEGUP_F_encode_BB__0_2
state: LEGUP_F_encode_BB__0_2
   %5 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_4)
   %8 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_4)
   Transition: default: LEGUP_F_encode_BB__0_3
state: LEGUP_F_encode_BB__0_3
   %2 = mul nsw i32 %1, 12 (endState: LEGUP_F_encode_BB__0_4)
   %4 = mul nsw i32 %3, -44 (endState: LEGUP_F_encode_BB__0_4)
   %11 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_5)
   %14 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_5)
   Transition: default: LEGUP_F_encode_BB__0_4
state: LEGUP_F_encode_BB__0_4
   %6 = mul nsw i32 %5, -44 (endState: LEGUP_F_encode_BB__0_5)
   %9 = mul nsw i32 %8, 212 (endState: LEGUP_F_encode_BB__0_5)
   %17 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 6), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_6)
   %20 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 7), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_6)
   Transition: default: LEGUP_F_encode_BB__0_5
state: LEGUP_F_encode_BB__0_5
   %7 = add nsw i32 %6, %2 (endState: LEGUP_F_encode_BB__0_5)
   %10 = add nsw i32 %9, %4 (endState: LEGUP_F_encode_BB__0_5)
   %12 = mul nsw i32 %11, 48 (endState: LEGUP_F_encode_BB__0_6)
   %15 = mul nsw i32 %14, -624 (endState: LEGUP_F_encode_BB__0_6)
   %23 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 8), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_7)
   %26 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 9), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_7)
   Transition: default: LEGUP_F_encode_BB__0_6
state: LEGUP_F_encode_BB__0_6
   %13 = add nsw i32 %12, %7 (endState: LEGUP_F_encode_BB__0_6)
   %16 = add nsw i32 %15, %10 (endState: LEGUP_F_encode_BB__0_6)
   %18 = shl nsw i32 %17, 7 (endState: LEGUP_F_encode_BB__0_6)
   %19 = add nsw i32 %18, %13 (endState: LEGUP_F_encode_BB__0_6)
   %21 = mul nsw i32 %20, 1448 (endState: LEGUP_F_encode_BB__0_7)
   %29 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 10), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_8)
   %32 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 11), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_8)
   Transition: default: LEGUP_F_encode_BB__0_7
state: LEGUP_F_encode_BB__0_7
   %22 = add nsw i32 %21, %16 (endState: LEGUP_F_encode_BB__0_7)
   %24 = mul nsw i32 %23, -840 (endState: LEGUP_F_encode_BB__0_8)
   %27 = mul nsw i32 %26, -3220 (endState: LEGUP_F_encode_BB__0_8)
   %35 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 12), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_9)
   %38 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 13), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_9)
   Transition: default: LEGUP_F_encode_BB__0_8
state: LEGUP_F_encode_BB__0_8
   %25 = add nsw i32 %24, %19 (endState: LEGUP_F_encode_BB__0_8)
   %28 = add nsw i32 %27, %22 (endState: LEGUP_F_encode_BB__0_8)
   %30 = mul nsw i32 %29, 3804 (endState: LEGUP_F_encode_BB__0_9)
   %33 = mul nsw i32 %32, 15504 (endState: LEGUP_F_encode_BB__0_9)
   %41 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 14), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_10)
   %44 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 15), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_10)
   Transition: default: LEGUP_F_encode_BB__0_9
state: LEGUP_F_encode_BB__0_9
   %31 = add nsw i32 %30, %25 (endState: LEGUP_F_encode_BB__0_9)
   %34 = add nsw i32 %33, %28 (endState: LEGUP_F_encode_BB__0_9)
   %36 = mul nsw i32 %35, 15504 (endState: LEGUP_F_encode_BB__0_10)
   %39 = mul nsw i32 %38, 3804 (endState: LEGUP_F_encode_BB__0_10)
   %47 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 16), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_11)
   %50 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 17), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_11)
   Transition: default: LEGUP_F_encode_BB__0_10
state: LEGUP_F_encode_BB__0_10
   %37 = add nsw i32 %36, %31 (endState: LEGUP_F_encode_BB__0_10)
   %40 = add nsw i32 %39, %34 (endState: LEGUP_F_encode_BB__0_10)
   %42 = mul nsw i32 %41, -3220 (endState: LEGUP_F_encode_BB__0_11)
   %45 = mul nsw i32 %44, -840 (endState: LEGUP_F_encode_BB__0_11)
   %53 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 18), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_12)
   %56 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 19), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_12)
   Transition: default: LEGUP_F_encode_BB__0_11
state: LEGUP_F_encode_BB__0_11
   %43 = add nsw i32 %42, %37 (endState: LEGUP_F_encode_BB__0_11)
   %46 = add nsw i32 %45, %40 (endState: LEGUP_F_encode_BB__0_11)
   %48 = mul nsw i32 %47, 1448 (endState: LEGUP_F_encode_BB__0_12)
   %51 = shl nsw i32 %50, 7 (endState: LEGUP_F_encode_BB__0_11)
   %52 = add nsw i32 %51, %46 (endState: LEGUP_F_encode_BB__0_11)
   %59 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 20), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_13)
   %62 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 21), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_13)
   Transition: default: LEGUP_F_encode_BB__0_12
state: LEGUP_F_encode_BB__0_12
   %49 = add nsw i32 %48, %43 (endState: LEGUP_F_encode_BB__0_12)
   %54 = mul nsw i32 %53, -624 (endState: LEGUP_F_encode_BB__0_13)
   %57 = mul nsw i32 %56, 48 (endState: LEGUP_F_encode_BB__0_13)
   %65 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 22), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_14)
   %68 = load i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 23), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_14)
   Transition: default: LEGUP_F_encode_BB__0_13
state: LEGUP_F_encode_BB__0_13
   %55 = add nsw i32 %54, %49 (endState: LEGUP_F_encode_BB__0_13)
   %58 = add nsw i32 %57, %52 (endState: LEGUP_F_encode_BB__0_13)
   %60 = mul nsw i32 %59, 212 (endState: LEGUP_F_encode_BB__0_14)
   %63 = mul nsw i32 %62, -44 (endState: LEGUP_F_encode_BB__0_14)
   %75 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_15)
   %76 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_15)
   Transition: default: LEGUP_F_encode_BB__0_14
state: LEGUP_F_encode_BB__0_14
   %61 = add nsw i32 %60, %55 (endState: LEGUP_F_encode_BB__0_14)
   %64 = add nsw i32 %63, %58 (endState: LEGUP_F_encode_BB__0_14)
   %66 = mul nsw i32 %65, -44 (endState: LEGUP_F_encode_BB__0_15)
   %69 = mul nsw i32 %68, 12 (endState: LEGUP_F_encode_BB__0_15)
   %78 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_16)
   %79 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_16)
   Transition: default: LEGUP_F_encode_BB__0_15
state: LEGUP_F_encode_BB__0_15
   %67 = add nsw i32 %66, %61 (endState: LEGUP_F_encode_BB__0_15)
   %70 = add nsw i32 %69, %64 (endState: LEGUP_F_encode_BB__0_15)
   %71 = add nsw i32 %70, %67 (endState: LEGUP_F_encode_BB__0_15)
   %72 = ashr i32 %71, 15 (endState: LEGUP_F_encode_BB__0_15)
   %73 = sub nsw i32 %67, %70 (endState: LEGUP_F_encode_BB__0_15)
   %74 = ashr i32 %73, 15 (endState: LEGUP_F_encode_BB__0_15)
   store i32 %74, i32* @xh, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_16)
   %77 = mul nsw i32 %76, %75 (endState: LEGUP_F_encode_BB__0_16)
   %82 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_17)
   %83 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_17)
   Transition: default: LEGUP_F_encode_BB__0_16
state: LEGUP_F_encode_BB__0_16
   %80 = mul nsw i32 %79, %78 (endState: LEGUP_F_encode_BB__0_17)
   %86 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_18)
   %87 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_18)
   Transition: default: LEGUP_F_encode_BB__0_17
state: LEGUP_F_encode_BB__0_17
   %81 = add nsw i32 %80, %77 (endState: LEGUP_F_encode_BB__0_17)
   %84 = mul nsw i32 %83, %82 (endState: LEGUP_F_encode_BB__0_18)
   %90 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_19)
   %91 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_19)
   Transition: default: LEGUP_F_encode_BB__0_18
state: LEGUP_F_encode_BB__0_18
   %85 = add nsw i32 %81, %84 (endState: LEGUP_F_encode_BB__0_18)
   %88 = mul nsw i32 %87, %86 (endState: LEGUP_F_encode_BB__0_19)
   %94 = load i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_20)
   %95 = load i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_20)
   Transition: default: LEGUP_F_encode_BB__0_19
state: LEGUP_F_encode_BB__0_19
   %89 = add nsw i32 %85, %88 (endState: LEGUP_F_encode_BB__0_19)
   %92 = mul nsw i32 %91, %90 (endState: LEGUP_F_encode_BB__0_20)
   %99 = load i32* @rlt1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_21)
   %100 = load i32* @al1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_21)
   Transition: default: LEGUP_F_encode_BB__0_20
state: LEGUP_F_encode_BB__0_20
   %93 = add nsw i32 %89, %92 (endState: LEGUP_F_encode_BB__0_20)
   %96 = mul nsw i32 %95, %94 (endState: LEGUP_F_encode_BB__0_21)
   %101 = load i32* @rlt2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_22)
   %102 = load i32* @al2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_22)
   Transition: default: LEGUP_F_encode_BB__0_21
state: LEGUP_F_encode_BB__0_21
   store i32 %62, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 23), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_22)
   %97 = add nsw i32 %93, %96 (endState: LEGUP_F_encode_BB__0_21)
   %98 = ashr i32 %97, 14 (endState: LEGUP_F_encode_BB__0_21)
   %103 = mul i32 %100, %99 (endState: LEGUP_F_encode_BB__0_22)
   %108 = load i32* @detl, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_23)
   Transition: default: LEGUP_F_encode_BB__0_22
state: LEGUP_F_encode_BB__0_22
   store i32 %59, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 22), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_23)
   store i32 %56, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 21), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_23)
   %104 = mul i32 %102, %101 (endState: LEGUP_F_encode_BB__0_23)
   Transition: default: LEGUP_F_encode_BB__0_23
state: LEGUP_F_encode_BB__0_23
   store i32 %53, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 20), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_24)
   store i32 %50, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 19), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_24)
   %tmp.i = add i32 %104, %103 (endState: LEGUP_F_encode_BB__0_23)
   %tmp1.i = shl i32 %tmp.i, 1 (endState: LEGUP_F_encode_BB__0_23)
   %105 = ashr i32 %tmp1.i, 15 (endState: LEGUP_F_encode_BB__0_23)
   %106 = add nsw i32 %105, %98 (endState: LEGUP_F_encode_BB__0_23)
   %107 = sub nsw i32 %72, %106 (endState: LEGUP_F_encode_BB__0_23)
   %109 = icmp sgt i32 %107, -1 (endState: LEGUP_F_encode_BB__0_23)
   %110 = sub nsw i32 0, %107 (endState: LEGUP_F_encode_BB__0_23)
   %m.0.i.i = select i1 %109, i32 %107, i32 %110 (endState: LEGUP_F_encode_BB__0_23)
   Transition: default: LEGUP_F_encode_BB__0_24
state: LEGUP_F_encode_BB__0_24
   store i32 %47, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 18), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_25)
   store i32 %44, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 17), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_25)
   Transition: default: LEGUP_F_encode_BB__0_25
state: LEGUP_F_encode_BB__0_25
   store i32 %41, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 16), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_26)
   store i32 %38, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 15), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_26)
   Transition: default: LEGUP_F_encode_BB__0_26
state: LEGUP_F_encode_BB__0_26
   store i32 %35, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 14), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_27)
   store i32 %32, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 13), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_27)
   Transition: default: LEGUP_F_encode_BB__0_27
state: LEGUP_F_encode_BB__0_27
   store i32 %29, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 12), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_28)
   store i32 %26, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 11), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_28)
   Transition: default: LEGUP_F_encode_BB__0_28
state: LEGUP_F_encode_BB__0_28
   store i32 %23, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 10), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_29)
   store i32 %20, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 9), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_29)
   Transition: default: LEGUP_F_encode_BB__0_29
state: LEGUP_F_encode_BB__0_29
   store i32 %17, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 8), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_30)
   store i32 %14, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 7), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_30)
   Transition: default: LEGUP_F_encode_BB__0_30
state: LEGUP_F_encode_BB__0_30
   store i32 %11, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 6), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_31)
   store i32 %8, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_31)
   Transition: default: LEGUP_F_encode_BB__0_31
state: LEGUP_F_encode_BB__0_31
   store i32 %5, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_32)
   store i32 %3, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_32)
   Transition: default: LEGUP_F_encode_BB__0_32
state: LEGUP_F_encode_BB__0_32
   store i32 %1, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_33)
   store i32 %xin1, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_33)
   Transition: default: LEGUP_F_encode_BB__0_33
state: LEGUP_F_encode_BB__0_33
   store i32 %xin2, i32* getelementptr inbounds ([24 x i32]* @tqmf, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__0_34)
   Transition: default: LEGUP_F_encode_BB__0_34
state: LEGUP_F_encode_BB__0_34
   br label %114
   Transition: default: LEGUP_F_encode_BB__114_36
state: LEGUP_F_encode_BB__111_35
   %112 = add nsw i32 %115, 1 (endState: LEGUP_F_encode_BB__111_35)
   %113 = icmp slt i32 %116, 30 (endState: LEGUP_F_encode_BB__111_35)
   br i1 %113, label %114, label %quantl.exit
   Transition: if (%113): LEGUP_F_encode_BB__114_36 default: LEGUP_F_encode_BB_quantlexit_39
state: LEGUP_F_encode_BB__114_36
   %115 = phi i32 [ 0, %0 ], [ %112, %111 ] (endState: LEGUP_F_encode_BB__114_36)
   %116 = add i32 %115, 1 (endState: LEGUP_F_encode_BB__114_36)
   %scevgep = getelementptr [30 x i32]* @decis_levl, i32 0, i32 %115 (endState: LEGUP_F_encode_BB__114_36)
   %117 = load i32* %scevgep, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__114_37)
   Transition: default: LEGUP_F_encode_BB__114_37
state: LEGUP_F_encode_BB__114_37
   %118 = mul nsw i32 %117, %108 (endState: LEGUP_F_encode_BB__114_38)
   Transition: default: LEGUP_F_encode_BB__114_38
state: LEGUP_F_encode_BB__114_38
   %119 = ashr i32 %118, 15 (endState: LEGUP_F_encode_BB__114_38)
   %120 = icmp sgt i32 %m.0.i.i, %119 (endState: LEGUP_F_encode_BB__114_38)
   br i1 %120, label %111, label %quantl.exit
   Transition: if (%120): LEGUP_F_encode_BB__111_35 default: LEGUP_F_encode_BB_quantlexit_39
state: LEGUP_F_encode_BB_quantlexit_39
   %mil.0.lcssa.i = phi i32 [ %115, %114 ], [ %116, %111 ] (endState: LEGUP_F_encode_BB_quantlexit_39)
   %quant26bt_pos.quant26bt_neg.i = select i1 %109, [31 x i32]* @quant26bt_pos, [31 x i32]* @quant26bt_neg (endState: LEGUP_F_encode_BB_quantlexit_39)
   %126 = load i32* @nbl, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_41)
   %145 = shl nsw i32 %100, 2 (endState: LEGUP_F_encode_BB_quantlexit_39)
   %148 = sub nsw i32 0, %145 (endState: LEGUP_F_encode_BB_quantlexit_39)
   %154 = mul nsw i32 %102, 127 (endState: LEGUP_F_encode_BB_quantlexit_40)
   %159 = mul nsw i32 %100, 255 (endState: LEGUP_F_encode_BB_quantlexit_40)
   Transition: default: LEGUP_F_encode_BB_quantlexit_40
state: LEGUP_F_encode_BB_quantlexit_40
   %ril.0.in.i = getelementptr inbounds [31 x i32]* %quant26bt_pos.quant26bt_neg.i, i32 0, i32 %mil.0.lcssa.i (endState: LEGUP_F_encode_BB_quantlexit_40)
   %ril.0.i = load i32* %ril.0.in.i, align 4 (endState: LEGUP_F_encode_BB_quantlexit_42)
   %155 = ashr i32 %154, 7 (endState: LEGUP_F_encode_BB_quantlexit_40)
   %160 = ashr i32 %159, 8 (endState: LEGUP_F_encode_BB_quantlexit_40)
   %163 = add nsw i32 %160, 192 (endState: LEGUP_F_encode_BB_quantlexit_40)
   Transition: default: LEGUP_F_encode_BB_quantlexit_41
state: LEGUP_F_encode_BB_quantlexit_41
   %127 = mul nsw i32 %126, 127 (endState: LEGUP_F_encode_BB_quantlexit_42)
   Transition: default: LEGUP_F_encode_BB_quantlexit_42
state: LEGUP_F_encode_BB_quantlexit_42
   %121 = ashr i32 %ril.0.i, 2 (endState: LEGUP_F_encode_BB_quantlexit_42)
   %122 = getelementptr inbounds [16 x i32]* @qq4_code4_table, i32 0, i32 %121 (endState: LEGUP_F_encode_BB_quantlexit_42)
   %123 = load i32* %122, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %128 = ashr i32 %127, 7 (endState: LEGUP_F_encode_BB_quantlexit_42)
   %129 = getelementptr inbounds [16 x i32]* @wl_code_table, i32 0, i32 %121 (endState: LEGUP_F_encode_BB_quantlexit_42)
   %130 = load i32* %129, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_44)
   Transition: default: LEGUP_F_encode_BB_quantlexit_43
state: LEGUP_F_encode_BB_quantlexit_43
   store i32 %ril.0.i, i32* @il, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_44)
   Transition: default: LEGUP_F_encode_BB_quantlexit_44
state: LEGUP_F_encode_BB_quantlexit_44
   %124 = mul nsw i32 %123, %108 (endState: LEGUP_F_encode_BB_quantlexit_45)
   %131 = add nsw i32 %128, %130 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %132 = icmp slt i32 %131, 0 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %..i12 = select i1 %132, i32 0, i32 %131 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %133 = icmp sgt i32 %..i12, 18432 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %...i13 = select i1 %133, i32 18432, i32 %..i12 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %134 = lshr i32 %...i13, 6 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %135 = and i32 %134, 31 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %136 = ashr i32 %...i13, 11 (endState: LEGUP_F_encode_BB_quantlexit_44)
   %139 = sub i32 9, %136 (endState: LEGUP_F_encode_BB_quantlexit_44)
   Transition: default: LEGUP_F_encode_BB_quantlexit_45
state: LEGUP_F_encode_BB_quantlexit_45
   %125 = ashr i32 %124, 15 (endState: LEGUP_F_encode_BB_quantlexit_45)
   %137 = getelementptr inbounds [32 x i32]* @ilb_table, i32 0, i32 %135 (endState: LEGUP_F_encode_BB_quantlexit_45)
   %138 = load i32* %137, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_47)
   %142 = add nsw i32 %98, %125 (endState: LEGUP_F_encode_BB_quantlexit_45)
   %168 = add nsw i32 %125, %106 (endState: LEGUP_F_encode_BB_quantlexit_45)
   Transition: default: LEGUP_F_encode_BB_quantlexit_46
state: LEGUP_F_encode_BB_quantlexit_46
   store i32 %...i13, i32* @nbl, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_47)
   Transition: default: LEGUP_F_encode_BB_quantlexit_47
state: LEGUP_F_encode_BB_quantlexit_47
   %140 = ashr i32 %138, %139 (endState: LEGUP_F_encode_BB_quantlexit_47)
   %141 = shl i32 %140, 3 (endState: LEGUP_F_encode_BB_quantlexit_47)
   store i32 %141, i32* @detl, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_48)
   Transition: default: LEGUP_F_encode_BB_quantlexit_48
state: LEGUP_F_encode_BB_quantlexit_48
   Transition: default: LEGUP_function_call_49
state: LEGUP_function_call_49
   tail call fastcc void @upzero(i32 %125, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 0)) #1 (endState: LEGUP_function_call_49)
   Transition: if (upzero_finish_final): LEGUP_F_encode_BB_quantlexit_50 default: LEGUP_function_call_49
state: LEGUP_F_encode_BB_quantlexit_50
   %143 = load i32* @plt1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_52)
   %144 = load i32* @plt2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_52)
   %201 = load i32* @xh, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_51)
   Transition: default: LEGUP_F_encode_BB_quantlexit_51
state: LEGUP_F_encode_BB_quantlexit_51
   %169 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %170 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_53)
   Transition: default: LEGUP_F_encode_BB_quantlexit_52
state: LEGUP_F_encode_BB_quantlexit_52
   %146 = mul nsw i32 %143, %142 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %150 = mul nsw i32 %144, %142 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %172 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %173 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_54)
   Transition: default: LEGUP_F_encode_BB_quantlexit_53
state: LEGUP_F_encode_BB_quantlexit_53
   %147 = icmp sgt i32 %146, -1 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %.1.i8 = select i1 %147, i32 %148, i32 %145 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %149 = ashr i32 %.1.i8, 7 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %151 = ashr i32 %150, 31 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %152 = and i32 %151, -256 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %153 = or i32 %152, 128 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %wd4.0.i9 = add nsw i32 %149, %155 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %156 = add nsw i32 %wd4.0.i9, %153 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %157 = icmp sgt i32 %156, 12288 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %..i10 = select i1 %157, i32 12288, i32 %156 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %161 = ashr i32 %146, 31 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %162 = and i32 %161, -384 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %apl1.0.i5 = add nsw i32 %163, %162 (endState: LEGUP_F_encode_BB_quantlexit_53)
   %171 = mul nsw i32 %170, %169 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %176 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_55)
   %177 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_55)
   Transition: default: LEGUP_F_encode_BB_quantlexit_54
state: LEGUP_F_encode_BB_quantlexit_54
   %158 = icmp slt i32 %..i10, -12288 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %...i11 = select i1 %158, i32 -12288, i32 %..i10 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %164 = sub nsw i32 15360, %...i11 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %165 = icmp sgt i32 %apl1.0.i5, %164 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %.apl1.0.i6 = select i1 %165, i32 %164, i32 %apl1.0.i5 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %166 = sub nsw i32 0, %164 (endState: LEGUP_F_encode_BB_quantlexit_54)
   %174 = mul nsw i32 %173, %172 (endState: LEGUP_F_encode_BB_quantlexit_55)
   %180 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_56)
   %181 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_56)
   Transition: default: LEGUP_F_encode_BB_quantlexit_55
state: LEGUP_F_encode_BB_quantlexit_55
   %167 = icmp slt i32 %.apl1.0.i6, %166 (endState: LEGUP_F_encode_BB_quantlexit_55)
   %apl1.2.i7 = select i1 %167, i32 %166, i32 %.apl1.0.i6 (endState: LEGUP_F_encode_BB_quantlexit_55)
   %175 = add nsw i32 %174, %171 (endState: LEGUP_F_encode_BB_quantlexit_55)
   %178 = mul nsw i32 %177, %176 (endState: LEGUP_F_encode_BB_quantlexit_56)
   %184 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_57)
   %185 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_57)
   Transition: default: LEGUP_F_encode_BB_quantlexit_56
state: LEGUP_F_encode_BB_quantlexit_56
   %179 = add nsw i32 %175, %178 (endState: LEGUP_F_encode_BB_quantlexit_56)
   %182 = mul nsw i32 %181, %180 (endState: LEGUP_F_encode_BB_quantlexit_57)
   %188 = load i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_58)
   %189 = load i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_58)
   Transition: default: LEGUP_F_encode_BB_quantlexit_57
state: LEGUP_F_encode_BB_quantlexit_57
   %183 = add nsw i32 %179, %182 (endState: LEGUP_F_encode_BB_quantlexit_57)
   %186 = mul nsw i32 %185, %184 (endState: LEGUP_F_encode_BB_quantlexit_58)
   %193 = load i32* @rh1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_59)
   %194 = load i32* @ah1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_59)
   Transition: default: LEGUP_F_encode_BB_quantlexit_58
state: LEGUP_F_encode_BB_quantlexit_58
   %187 = add nsw i32 %183, %186 (endState: LEGUP_F_encode_BB_quantlexit_58)
   %190 = mul nsw i32 %189, %188 (endState: LEGUP_F_encode_BB_quantlexit_59)
   %195 = load i32* @rh2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_60)
   %196 = load i32* @ah2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_60)
   Transition: default: LEGUP_F_encode_BB_quantlexit_59
state: LEGUP_F_encode_BB_quantlexit_59
   store i32 %...i11, i32* @al2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_60)
   %191 = add nsw i32 %187, %190 (endState: LEGUP_F_encode_BB_quantlexit_59)
   %192 = ashr i32 %191, 14 (endState: LEGUP_F_encode_BB_quantlexit_59)
   %197 = mul i32 %194, %193 (endState: LEGUP_F_encode_BB_quantlexit_60)
   %206 = load i32* @deth, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_61)
   Transition: default: LEGUP_F_encode_BB_quantlexit_60
state: LEGUP_F_encode_BB_quantlexit_60
   store i32 %apl1.2.i7, i32* @al1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_61)
   store i32 %99, i32* @rlt2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %198 = mul i32 %196, %195 (endState: LEGUP_F_encode_BB_quantlexit_61)
   Transition: default: LEGUP_F_encode_BB_quantlexit_61
state: LEGUP_F_encode_BB_quantlexit_61
   store i32 %168, i32* @rlt1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_62)
   store i32 %143, i32* @plt2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_62)
   %tmp.i3 = add i32 %198, %197 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %tmp1.i4 = shl i32 %tmp.i3, 1 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %199 = ashr i32 %tmp1.i4, 15 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %200 = add nsw i32 %199, %192 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %202 = sub nsw i32 %201, %200 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %203 = ashr i32 %202, 31 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %204 = and i32 %203, -2 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %205 = add nsw i32 %204, 3 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %207 = mul nsw i32 %206, 564 (endState: LEGUP_F_encode_BB_quantlexit_62)
   %209 = icmp sgt i32 %202, -1 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %210 = sub nsw i32 0, %202 (endState: LEGUP_F_encode_BB_quantlexit_61)
   %m.0.i = select i1 %209, i32 %202, i32 %210 (endState: LEGUP_F_encode_BB_quantlexit_61)
   Transition: default: LEGUP_F_encode_BB_quantlexit_62
state: LEGUP_F_encode_BB_quantlexit_62
   store i32 %142, i32* @plt1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_63)
   store i32 %205, i32* @ih, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB_quantlexit_63)
   %208 = ashr i32 %207, 12 (endState: LEGUP_F_encode_BB_quantlexit_62)
   %211 = icmp sgt i32 %m.0.i, %208 (endState: LEGUP_F_encode_BB_quantlexit_62)
   Transition: default: LEGUP_F_encode_BB_quantlexit_63
state: LEGUP_F_encode_BB_quantlexit_63
   br i1 %211, label %212, label %214
   Transition: if (%211): LEGUP_F_encode_BB__212_64 default: LEGUP_F_encode_BB__214_66
state: LEGUP_F_encode_BB__212_64
   %213 = add nsw i32 %204, 2 (endState: LEGUP_F_encode_BB__212_64)
   store i32 %213, i32* @ih, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__212_65)
   Transition: default: LEGUP_F_encode_BB__212_65
state: LEGUP_F_encode_BB__212_65
   br label %214
   Transition: default: LEGUP_F_encode_BB__214_66
state: LEGUP_F_encode_BB__214_66
   %215 = phi i32 [ %213, %212 ], [ %205, %quantl.exit ] (endState: LEGUP_F_encode_BB__214_66)
   %216 = getelementptr inbounds [4 x i32]* @qq2_code2_table, i32 0, i32 %215 (endState: LEGUP_F_encode_BB__214_66)
   %220 = load i32* @nbh, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_68)
   %223 = getelementptr inbounds [4 x i32]* @wh_code_table, i32 0, i32 %215 (endState: LEGUP_F_encode_BB__214_66)
   %224 = load i32* %223, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_68)
   %239 = shl nsw i32 %194, 2 (endState: LEGUP_F_encode_BB__214_66)
   %242 = sub nsw i32 0, %239 (endState: LEGUP_F_encode_BB__214_66)
   %248 = mul nsw i32 %196, 127 (endState: LEGUP_F_encode_BB__214_67)
   %253 = mul nsw i32 %194, 255 (endState: LEGUP_F_encode_BB__214_67)
   %264 = shl nsw i32 %215, 6 (endState: LEGUP_F_encode_BB__214_66)
   Transition: default: LEGUP_F_encode_BB__214_67
state: LEGUP_F_encode_BB__214_67
   %217 = load i32* %216, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_69)
   %249 = ashr i32 %248, 7 (endState: LEGUP_F_encode_BB__214_67)
   %254 = ashr i32 %253, 8 (endState: LEGUP_F_encode_BB__214_67)
   %257 = add nsw i32 %254, 192 (endState: LEGUP_F_encode_BB__214_67)
   Transition: default: LEGUP_F_encode_BB__214_68
state: LEGUP_F_encode_BB__214_68
   %221 = mul nsw i32 %220, 127 (endState: LEGUP_F_encode_BB__214_69)
   Transition: default: LEGUP_F_encode_BB__214_69
state: LEGUP_F_encode_BB__214_69
   %218 = mul nsw i32 %217, %206 (endState: LEGUP_F_encode_BB__214_70)
   %222 = ashr i32 %221, 7 (endState: LEGUP_F_encode_BB__214_69)
   %225 = add nsw i32 %222, %224 (endState: LEGUP_F_encode_BB__214_69)
   %226 = icmp slt i32 %225, 0 (endState: LEGUP_F_encode_BB__214_69)
   %..i1 = select i1 %226, i32 0, i32 %225 (endState: LEGUP_F_encode_BB__214_69)
   %227 = icmp sgt i32 %..i1, 22528 (endState: LEGUP_F_encode_BB__214_69)
   %...i2 = select i1 %227, i32 22528, i32 %..i1 (endState: LEGUP_F_encode_BB__214_69)
   store i32 %...i2, i32* @nbh, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_70)
   %228 = lshr i32 %...i2, 6 (endState: LEGUP_F_encode_BB__214_69)
   %229 = and i32 %228, 31 (endState: LEGUP_F_encode_BB__214_69)
   %230 = ashr i32 %...i2, 11 (endState: LEGUP_F_encode_BB__214_69)
   %233 = sub i32 11, %230 (endState: LEGUP_F_encode_BB__214_69)
   Transition: default: LEGUP_F_encode_BB__214_70
state: LEGUP_F_encode_BB__214_70
   %219 = ashr i32 %218, 15 (endState: LEGUP_F_encode_BB__214_70)
   %231 = getelementptr inbounds [32 x i32]* @ilb_table, i32 0, i32 %229 (endState: LEGUP_F_encode_BB__214_70)
   %232 = load i32* %231, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_72)
   %236 = add nsw i32 %192, %219 (endState: LEGUP_F_encode_BB__214_70)
   %262 = add nsw i32 %219, %200 (endState: LEGUP_F_encode_BB__214_70)
   Transition: default: LEGUP_F_encode_BB__214_71
state: LEGUP_F_encode_BB__214_71
   Transition: default: LEGUP_F_encode_BB__214_72
state: LEGUP_F_encode_BB__214_72
   %234 = ashr i32 %232, %233 (endState: LEGUP_F_encode_BB__214_72)
   %235 = shl i32 %234, 3 (endState: LEGUP_F_encode_BB__214_72)
   store i32 %235, i32* @deth, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_73)
   Transition: default: LEGUP_F_encode_BB__214_73
state: LEGUP_F_encode_BB__214_73
   Transition: default: LEGUP_function_call_74
state: LEGUP_function_call_74
   tail call fastcc void @upzero(i32 %219, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 0)) #1 (endState: LEGUP_function_call_74)
   Transition: if (upzero_finish_final): LEGUP_F_encode_BB__214_75 default: LEGUP_function_call_74
state: LEGUP_F_encode_BB__214_75
   %237 = load i32* @ph1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_77)
   %238 = load i32* @ph2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_77)
   Transition: default: LEGUP_F_encode_BB__214_76
state: LEGUP_F_encode_BB__214_76
   %263 = load i32* @il, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_78)
   Transition: default: LEGUP_F_encode_BB__214_77
state: LEGUP_F_encode_BB__214_77
   %240 = mul nsw i32 %237, %236 (endState: LEGUP_F_encode_BB__214_78)
   %244 = mul nsw i32 %238, %236 (endState: LEGUP_F_encode_BB__214_78)
   Transition: default: LEGUP_F_encode_BB__214_78
state: LEGUP_F_encode_BB__214_78
   %241 = icmp sgt i32 %240, -1 (endState: LEGUP_F_encode_BB__214_78)
   %.1.i = select i1 %241, i32 %242, i32 %239 (endState: LEGUP_F_encode_BB__214_78)
   %243 = ashr i32 %.1.i, 7 (endState: LEGUP_F_encode_BB__214_78)
   %245 = ashr i32 %244, 31 (endState: LEGUP_F_encode_BB__214_78)
   %246 = and i32 %245, -256 (endState: LEGUP_F_encode_BB__214_78)
   %247 = or i32 %246, 128 (endState: LEGUP_F_encode_BB__214_78)
   %wd4.0.i = add nsw i32 %243, %249 (endState: LEGUP_F_encode_BB__214_78)
   %250 = add nsw i32 %wd4.0.i, %247 (endState: LEGUP_F_encode_BB__214_78)
   %251 = icmp sgt i32 %250, 12288 (endState: LEGUP_F_encode_BB__214_78)
   %..i = select i1 %251, i32 12288, i32 %250 (endState: LEGUP_F_encode_BB__214_78)
   %255 = ashr i32 %240, 31 (endState: LEGUP_F_encode_BB__214_78)
   %256 = and i32 %255, -384 (endState: LEGUP_F_encode_BB__214_78)
   %apl1.0.i = add nsw i32 %257, %256 (endState: LEGUP_F_encode_BB__214_78)
   %265 = or i32 %264, %263 (endState: LEGUP_F_encode_BB__214_78)
   Transition: default: LEGUP_F_encode_BB__214_79
state: LEGUP_F_encode_BB__214_79
   %252 = icmp slt i32 %..i, -12288 (endState: LEGUP_F_encode_BB__214_79)
   %...i = select i1 %252, i32 -12288, i32 %..i (endState: LEGUP_F_encode_BB__214_79)
   store i32 %...i, i32* @ah2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_80)
   %258 = sub nsw i32 15360, %...i (endState: LEGUP_F_encode_BB__214_79)
   %259 = icmp sgt i32 %apl1.0.i, %258 (endState: LEGUP_F_encode_BB__214_79)
   %.apl1.0.i = select i1 %259, i32 %258, i32 %apl1.0.i (endState: LEGUP_F_encode_BB__214_79)
   %260 = sub nsw i32 0, %258 (endState: LEGUP_F_encode_BB__214_79)
   Transition: default: LEGUP_F_encode_BB__214_80
state: LEGUP_F_encode_BB__214_80
   %261 = icmp slt i32 %.apl1.0.i, %260 (endState: LEGUP_F_encode_BB__214_80)
   %apl1.2.i = select i1 %261, i32 %260, i32 %.apl1.0.i (endState: LEGUP_F_encode_BB__214_80)
   store i32 %apl1.2.i, i32* @ah1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_81)
   store i32 %193, i32* @rh2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_81)
   Transition: default: LEGUP_F_encode_BB__214_81
state: LEGUP_F_encode_BB__214_81
   store i32 %262, i32* @rh1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_82)
   store i32 %237, i32* @ph2, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_82)
   Transition: default: LEGUP_F_encode_BB__214_82
state: LEGUP_F_encode_BB__214_82
   store i32 %236, i32* @ph1, align 4, !tbaa !1 (endState: LEGUP_F_encode_BB__214_83)
   Transition: default: LEGUP_F_encode_BB__214_83
state: LEGUP_F_encode_BB__214_83
   ret i32 %265
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 34
Basic Block: %111 Num States: 1
Basic Block: %114 Num States: 3
Basic Block: %quantl.exit Num States: 25
Basic Block: %212 Num States: 2
Basic Block: %214 Num States: 18
End Function: encode
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   store i32 32, i32* @detl, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_2)
   store i32 8, i32* @deth, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_2)
   Transition: default: LEGUP_F_main_BB__0_2
state: LEGUP_F_main_BB__0_2
   store i32 0, i32* @rlt2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_3)
   store i32 0, i32* @rlt1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_3)
   Transition: default: LEGUP_F_main_BB__0_3
state: LEGUP_F_main_BB__0_3
   store i32 0, i32* @plt2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_4)
   store i32 0, i32* @plt1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_4)
   Transition: default: LEGUP_F_main_BB__0_4
state: LEGUP_F_main_BB__0_4
   store i32 0, i32* @al2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_5)
   store i32 0, i32* @al1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_5)
   Transition: default: LEGUP_F_main_BB__0_5
state: LEGUP_F_main_BB__0_5
   store i32 0, i32* @nbl, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_6)
   store i32 0, i32* @rh2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_6)
   Transition: default: LEGUP_F_main_BB__0_6
state: LEGUP_F_main_BB__0_6
   store i32 0, i32* @rh1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_7)
   store i32 0, i32* @ph2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_7)
   Transition: default: LEGUP_F_main_BB__0_7
state: LEGUP_F_main_BB__0_7
   store i32 0, i32* @ph1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_8)
   store i32 0, i32* @ah2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_8)
   Transition: default: LEGUP_F_main_BB__0_8
state: LEGUP_F_main_BB__0_8
   store i32 0, i32* @ah1, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_9)
   store i32 0, i32* @nbh, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_9)
   Transition: default: LEGUP_F_main_BB__0_9
state: LEGUP_F_main_BB__0_9
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_10)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_10)
   Transition: default: LEGUP_F_main_BB__0_10
state: LEGUP_F_main_BB__0_10
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_11)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_11)
   Transition: default: LEGUP_F_main_BB__0_11
state: LEGUP_F_main_BB__0_11
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_12)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_12)
   Transition: default: LEGUP_F_main_BB__0_12
state: LEGUP_F_main_BB__0_12
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_13)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_13)
   Transition: default: LEGUP_F_main_BB__0_13
state: LEGUP_F_main_BB__0_13
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_14)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_14)
   Transition: default: LEGUP_F_main_BB__0_14
state: LEGUP_F_main_BB__0_14
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_15)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_15)
   Transition: default: LEGUP_F_main_BB__0_15
state: LEGUP_F_main_BB__0_15
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_16)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_16)
   Transition: default: LEGUP_F_main_BB__0_16
state: LEGUP_F_main_BB__0_16
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_17)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_17)
   Transition: default: LEGUP_F_main_BB__0_17
state: LEGUP_F_main_BB__0_17
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_18)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_18)
   Transition: default: LEGUP_F_main_BB__0_18
state: LEGUP_F_main_BB__0_18
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_19)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_19)
   Transition: default: LEGUP_F_main_BB__0_19
state: LEGUP_F_main_BB__0_19
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dltx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_20)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_dhx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_20)
   Transition: default: LEGUP_F_main_BB__0_20
state: LEGUP_F_main_BB__0_20
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_21)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_21)
   Transition: default: LEGUP_F_main_BB__0_21
state: LEGUP_F_main_BB__0_21
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_22)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_22)
   Transition: default: LEGUP_F_main_BB__0_22
state: LEGUP_F_main_BB__0_22
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_23)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_23)
   Transition: default: LEGUP_F_main_BB__0_23
state: LEGUP_F_main_BB__0_23
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_24)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_24)
   Transition: default: LEGUP_F_main_BB__0_24
state: LEGUP_F_main_BB__0_24
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_25)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_25)
   Transition: default: LEGUP_F_main_BB__0_25
state: LEGUP_F_main_BB__0_25
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_26)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_26)
   Transition: default: LEGUP_F_main_BB__0_26
state: LEGUP_F_main_BB__0_26
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_27)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_27)
   Transition: default: LEGUP_F_main_BB__0_27
state: LEGUP_F_main_BB__0_27
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_28)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_28)
   Transition: default: LEGUP_F_main_BB__0_28
state: LEGUP_F_main_BB__0_28
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_29)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_29)
   Transition: default: LEGUP_F_main_BB__0_29
state: LEGUP_F_main_BB__0_29
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_30)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_30)
   Transition: default: LEGUP_F_main_BB__0_30
state: LEGUP_F_main_BB__0_30
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_31)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_31)
   Transition: default: LEGUP_F_main_BB__0_31
state: LEGUP_F_main_BB__0_31
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bpl, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_32)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @delay_bph, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_32)
   Transition: default: LEGUP_F_main_BB__0_32
state: LEGUP_F_main_BB__0_32
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_33)
   store i32 0, i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__0_33)
   Transition: default: LEGUP_F_main_BB__0_33
state: LEGUP_F_main_BB__0_33
   br label %1
   Transition: default: LEGUP_F_main_BB__1_34
state: LEGUP_F_main_BB__1_34
   %indvar35 = phi i64 [ %indvar.next36, %2 ], [ 0, %0 ] (endState: LEGUP_F_main_BB__1_34)
   %exitcond37 = icmp eq i64 %indvar35, 24 (endState: LEGUP_F_main_BB__1_34)
   br i1 %exitcond37, label %legup_memset_4_i64.exit.preheader, label %2
   Transition: if (%exitcond37): LEGUP_F_main_BB_legup_memset_4_i64exitpreheader_35 default: LEGUP_F_main_BB__2_36
state: LEGUP_F_main_BB_legup_memset_4_i64exitpreheader_35
   br label %legup_memset_4_i64.exit
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_51
state: LEGUP_F_main_BB__2_36
   %3 = shl i64 %indvar35, 2 (endState: LEGUP_F_main_BB__2_36)
   %4 = add i64 %3, zext (i32 ptrtoint ([24 x i32]* @tqmf to i32) to i64) (endState: LEGUP_F_main_BB__2_36)
   %5 = trunc i64 %4 to i32 (endState: LEGUP_F_main_BB__2_36)
   %s.i.0 = inttoptr i32 %5 to i32* (endState: LEGUP_F_main_BB__2_36)
   store i32 0, i32* %s.i.0, align 4 (endState: LEGUP_F_main_BB__2_37)
   %indvar.next36 = add i64 %indvar35, 1 (endState: LEGUP_F_main_BB__2_36)
   Transition: default: LEGUP_F_main_BB__2_37
state: LEGUP_F_main_BB__2_37
   br label %1
   Transition: default: LEGUP_F_main_BB__1_34
state: LEGUP_F_main_BB_preheader2i_38
   Transition: default: LEGUP_function_call_39
state: LEGUP_function_call_39
   %6 = tail call fastcc i32 @encode(i32 undef, i32 undef) #1 (endState: LEGUP_function_call_39)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_preheader2i_40 default: LEGUP_function_call_39
state: LEGUP_F_main_BB_preheader2i_40
   store i32 %6, i32* getelementptr inbounds ([100 x i32]* @compressed, i32 0, i32 96), align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader2i_41)
   Transition: default: LEGUP_F_main_BB_preheader2i_41
state: LEGUP_F_main_BB_preheader2i_41
   Transition: default: LEGUP_function_call_42
state: LEGUP_function_call_42
   %7 = tail call fastcc i32 @encode(i32 undef, i32 undef) #1 (endState: LEGUP_function_call_42)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_preheader2i_43 default: LEGUP_function_call_42
state: LEGUP_F_main_BB_preheader2i_43
   store i32 %7, i32* getelementptr inbounds ([100 x i32]* @compressed, i32 0, i32 97), align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader2i_44)
   Transition: default: LEGUP_F_main_BB_preheader2i_44
state: LEGUP_F_main_BB_preheader2i_44
   Transition: default: LEGUP_function_call_45
state: LEGUP_function_call_45
   %8 = tail call fastcc i32 @encode(i32 undef, i32 undef) #1 (endState: LEGUP_function_call_45)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_preheader2i_46 default: LEGUP_function_call_45
state: LEGUP_F_main_BB_preheader2i_46
   store i32 %8, i32* getelementptr inbounds ([100 x i32]* @compressed, i32 0, i32 98), align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader2i_47)
   Transition: default: LEGUP_F_main_BB_preheader2i_47
state: LEGUP_F_main_BB_preheader2i_47
   Transition: default: LEGUP_function_call_48
state: LEGUP_function_call_48
   %9 = tail call fastcc i32 @encode(i32 undef, i32 undef) #1 (endState: LEGUP_function_call_48)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_preheader2i_49 default: LEGUP_function_call_48
state: LEGUP_F_main_BB_preheader2i_49
   store i32 %9, i32* getelementptr inbounds ([100 x i32]* @compressed, i32 0, i32 99), align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader2i_50)
   Transition: default: LEGUP_F_main_BB_preheader2i_50
state: LEGUP_F_main_BB_preheader2i_50
   br label %58
   Transition: default: LEGUP_F_main_BB__58_77
state: LEGUP_F_main_BB_legup_memset_4_i64exit_51
   %indvar8 = phi i32 [ 0, %legup_memset_4_i64.exit.preheader ], [ %indvar.next9, %legup_memset_4_i64.exit ] (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %10 = shl i32 %indvar8, 3 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %11 = or i32 %10, 7 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep11 = getelementptr [100 x i32]* @compressed, i32 0, i32 %11 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %12 = shl i32 %indvar8, 4 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %13 = or i32 %12, 15 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep12 = getelementptr [100 x i32]* @test_data, i32 0, i32 %13 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %14 = or i32 %12, 14 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep13 = getelementptr [100 x i32]* @test_data, i32 0, i32 %14 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %15 = or i32 %10, 6 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep14 = getelementptr [100 x i32]* @compressed, i32 0, i32 %15 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %16 = or i32 %12, 13 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep15 = getelementptr [100 x i32]* @test_data, i32 0, i32 %16 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %17 = or i32 %12, 12 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep16 = getelementptr [100 x i32]* @test_data, i32 0, i32 %17 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %18 = or i32 %10, 5 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep17 = getelementptr [100 x i32]* @compressed, i32 0, i32 %18 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %19 = or i32 %12, 11 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep18 = getelementptr [100 x i32]* @test_data, i32 0, i32 %19 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %20 = or i32 %12, 10 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep19 = getelementptr [100 x i32]* @test_data, i32 0, i32 %20 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %21 = or i32 %10, 4 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep20 = getelementptr [100 x i32]* @compressed, i32 0, i32 %21 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %22 = or i32 %12, 9 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep21 = getelementptr [100 x i32]* @test_data, i32 0, i32 %22 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %23 = or i32 %12, 8 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep22 = getelementptr [100 x i32]* @test_data, i32 0, i32 %23 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %24 = or i32 %10, 3 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep23 = getelementptr [100 x i32]* @compressed, i32 0, i32 %24 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %25 = or i32 %12, 7 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep24 = getelementptr [100 x i32]* @test_data, i32 0, i32 %25 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %26 = or i32 %12, 6 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep25 = getelementptr [100 x i32]* @test_data, i32 0, i32 %26 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %27 = or i32 %10, 2 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep26 = getelementptr [100 x i32]* @compressed, i32 0, i32 %27 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %28 = or i32 %12, 5 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep27 = getelementptr [100 x i32]* @test_data, i32 0, i32 %28 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %29 = or i32 %12, 4 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep28 = getelementptr [100 x i32]* @test_data, i32 0, i32 %29 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %30 = or i32 %10, 1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep29 = getelementptr [100 x i32]* @compressed, i32 0, i32 %30 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %31 = or i32 %12, 3 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep30 = getelementptr [100 x i32]* @test_data, i32 0, i32 %31 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %32 = or i32 %12, 2 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep31 = getelementptr [100 x i32]* @test_data, i32 0, i32 %32 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep32 = getelementptr [100 x i32]* @compressed, i32 0, i32 %10 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %33 = or i32 %12, 1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep33 = getelementptr [100 x i32]* @test_data, i32 0, i32 %33 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %scevgep34 = getelementptr [100 x i32]* @test_data, i32 0, i32 %12 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %34 = load i32* %scevgep34, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_52)
   %35 = load i32* %scevgep33, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_52)
   %indvar.next9 = add i32 %indvar8, 1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   %exitcond10 = icmp eq i32 %indvar.next9, 12 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_51)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_52
state: LEGUP_F_main_BB_legup_memset_4_i64exit_52
   Transition: default: LEGUP_function_call_53
state: LEGUP_function_call_53
   %36 = tail call fastcc i32 @encode(i32 %34, i32 %35) #1 (endState: LEGUP_function_call_53)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_54 default: LEGUP_function_call_53
state: LEGUP_F_main_BB_legup_memset_4_i64exit_54
   store i32 %36, i32* %scevgep32, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_55)
   %37 = load i32* %scevgep31, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_55)
   %38 = load i32* %scevgep30, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_55)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_55
state: LEGUP_F_main_BB_legup_memset_4_i64exit_55
   Transition: default: LEGUP_function_call_56
state: LEGUP_function_call_56
   %39 = tail call fastcc i32 @encode(i32 %37, i32 %38) #1 (endState: LEGUP_function_call_56)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_57 default: LEGUP_function_call_56
state: LEGUP_F_main_BB_legup_memset_4_i64exit_57
   store i32 %39, i32* %scevgep29, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_58)
   %40 = load i32* %scevgep28, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_58)
   %41 = load i32* %scevgep27, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_58)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_58
state: LEGUP_F_main_BB_legup_memset_4_i64exit_58
   Transition: default: LEGUP_function_call_59
state: LEGUP_function_call_59
   %42 = tail call fastcc i32 @encode(i32 %40, i32 %41) #1 (endState: LEGUP_function_call_59)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_60 default: LEGUP_function_call_59
state: LEGUP_F_main_BB_legup_memset_4_i64exit_60
   store i32 %42, i32* %scevgep26, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_61)
   %43 = load i32* %scevgep25, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_61)
   %44 = load i32* %scevgep24, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_61)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_61
state: LEGUP_F_main_BB_legup_memset_4_i64exit_61
   Transition: default: LEGUP_function_call_62
state: LEGUP_function_call_62
   %45 = tail call fastcc i32 @encode(i32 %43, i32 %44) #1 (endState: LEGUP_function_call_62)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_63 default: LEGUP_function_call_62
state: LEGUP_F_main_BB_legup_memset_4_i64exit_63
   store i32 %45, i32* %scevgep23, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_64)
   %46 = load i32* %scevgep22, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_64)
   %47 = load i32* %scevgep21, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_64)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_64
state: LEGUP_F_main_BB_legup_memset_4_i64exit_64
   Transition: default: LEGUP_function_call_65
state: LEGUP_function_call_65
   %48 = tail call fastcc i32 @encode(i32 %46, i32 %47) #1 (endState: LEGUP_function_call_65)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_66 default: LEGUP_function_call_65
state: LEGUP_F_main_BB_legup_memset_4_i64exit_66
   store i32 %48, i32* %scevgep20, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_67)
   %49 = load i32* %scevgep19, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_67)
   %50 = load i32* %scevgep18, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_67)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_67
state: LEGUP_F_main_BB_legup_memset_4_i64exit_67
   Transition: default: LEGUP_function_call_68
state: LEGUP_function_call_68
   %51 = tail call fastcc i32 @encode(i32 %49, i32 %50) #1 (endState: LEGUP_function_call_68)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_69 default: LEGUP_function_call_68
state: LEGUP_F_main_BB_legup_memset_4_i64exit_69
   store i32 %51, i32* %scevgep17, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_70)
   %52 = load i32* %scevgep16, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_70)
   %53 = load i32* %scevgep15, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_70)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_70
state: LEGUP_F_main_BB_legup_memset_4_i64exit_70
   Transition: default: LEGUP_function_call_71
state: LEGUP_function_call_71
   %54 = tail call fastcc i32 @encode(i32 %52, i32 %53) #1 (endState: LEGUP_function_call_71)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_72 default: LEGUP_function_call_71
state: LEGUP_F_main_BB_legup_memset_4_i64exit_72
   store i32 %54, i32* %scevgep14, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_73)
   %55 = load i32* %scevgep13, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_73)
   %56 = load i32* %scevgep12, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_73)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_73
state: LEGUP_F_main_BB_legup_memset_4_i64exit_73
   Transition: default: LEGUP_function_call_74
state: LEGUP_function_call_74
   %57 = tail call fastcc i32 @encode(i32 %55, i32 %56) #1 (endState: LEGUP_function_call_74)
   Transition: if (encode_finish_final): LEGUP_F_main_BB_legup_memset_4_i64exit_75 default: LEGUP_function_call_74
state: LEGUP_F_main_BB_legup_memset_4_i64exit_75
   store i32 %57, i32* %scevgep11, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_legup_memset_4_i64exit_76)
   Transition: default: LEGUP_F_main_BB_legup_memset_4_i64exit_76
state: LEGUP_F_main_BB_legup_memset_4_i64exit_76
   br i1 %exitcond10, label %.preheader2.i, label %legup_memset_4_i64.exit
   Transition: if (%exitcond10): LEGUP_F_main_BB_preheader2i_38 default: LEGUP_F_main_BB_legup_memset_4_i64exit_51
state: LEGUP_F_main_BB__58_77
   %indvar = phi i32 [ %indvar.next, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.10.0 = phi i32 [ %accumd.9.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.9.0 = phi i32 [ %accumd.8.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.8.0 = phi i32 [ %accumd.7.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.7.0 = phi i32 [ %accumd.6.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.6.0 = phi i32 [ %accumd.5.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.5.0 = phi i32 [ %accumd.4.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.4.0 = phi i32 [ %accumd.3.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.3.0 = phi i32 [ %accumd.2.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.2.0 = phi i32 [ %accumd.1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.1.0 = phi i32 [ %accumd.0.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumd.0.0 = phi i32 [ %218, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.10.0 = phi i32 [ %accumc.9.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.9.0 = phi i32 [ %accumc.8.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.8.0 = phi i32 [ %accumc.7.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.7.0 = phi i32 [ %accumc.6.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.6.0 = phi i32 [ %accumc.5.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.5.0 = phi i32 [ %accumc.4.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.4.0 = phi i32 [ %accumc.3.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.3.0 = phi i32 [ %accumc.2.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.2.0 = phi i32 [ %accumc.1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.1.0 = phi i32 [ %accumc.0.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %accumc.0.0 = phi i32 [ %217, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_ph2.0 = phi i32 [ %dec_ph1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_ph1.0 = phi i32 [ %192, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_nbh.0 = phi i32 [ %...i2.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_deth.0 = phi i32 [ %191, %58 ], [ 8, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_ah2.0 = phi i32 [ %...i.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_rh2.0 = phi i32 [ %dec_rh1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_ah1.0 = phi i32 [ %apl1.2.i.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_rh1.0 = phi i32 [ %216, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_plt2.0 = phi i32 [ %dec_plt1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_plt1.0 = phi i32 [ %119, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_nbl.0 = phi i32 [ %...i13.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_detl.0 = phi i32 [ %118, %58 ], [ 32, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_al2.0 = phi i32 [ %...i11.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_rlt2.0 = phi i32 [ %dec_rlt1.0, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_al1.0 = phi i32 [ %apl1.2.i7.i.i, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %dec_rlt1.0 = phi i32 [ %143, %58 ], [ 0, %.preheader2.i ] (endState: LEGUP_F_main_BB__58_77)
   %i.03.i = shl i32 %indvar, 1 (endState: LEGUP_F_main_BB__58_77)
   %59 = or i32 %i.03.i, 1 (endState: LEGUP_F_main_BB__58_77)
   %scevgep6 = getelementptr [100 x i32]* @result, i32 0, i32 %59 (endState: LEGUP_F_main_BB__58_77)
   %scevgep7 = getelementptr [100 x i32]* @result, i32 0, i32 %i.03.i (endState: LEGUP_F_main_BB__58_77)
   %60 = sdiv i32 %i.03.i, 2 (endState: LEGUP_F_main_BB__58_109)
   %64 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_79)
   %65 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_79)
   %88 = mul i32 %dec_al1.0, %dec_rlt1.0 (endState: LEGUP_F_main_BB__58_78)
   %89 = mul i32 %dec_al2.0, %dec_rlt2.0 (endState: LEGUP_F_main_BB__58_78)
   %104 = mul nsw i32 %dec_nbl.0, 127 (endState: LEGUP_F_main_BB__58_78)
   %120 = shl nsw i32 %dec_al1.0, 2 (endState: LEGUP_F_main_BB__58_77)
   %123 = sub nsw i32 0, %120 (endState: LEGUP_F_main_BB__58_77)
   %129 = mul nsw i32 %dec_al2.0, 127 (endState: LEGUP_F_main_BB__58_78)
   %134 = mul nsw i32 %dec_al1.0, 255 (endState: LEGUP_F_main_BB__58_78)
   %168 = mul i32 %dec_ah1.0, %dec_rh1.0 (endState: LEGUP_F_main_BB__58_78)
   %169 = mul i32 %dec_ah2.0, %dec_rh2.0 (endState: LEGUP_F_main_BB__58_78)
   %177 = mul nsw i32 %dec_nbh.0, 127 (endState: LEGUP_F_main_BB__58_78)
   %193 = shl nsw i32 %dec_ah1.0, 2 (endState: LEGUP_F_main_BB__58_77)
   %196 = sub nsw i32 0, %193 (endState: LEGUP_F_main_BB__58_77)
   %202 = mul nsw i32 %dec_ah2.0, 127 (endState: LEGUP_F_main_BB__58_78)
   %207 = mul nsw i32 %dec_ah1.0, 255 (endState: LEGUP_F_main_BB__58_78)
   %221 = mul nsw i32 %accumc.0.0, -44 (endState: LEGUP_F_main_BB__58_78)
   %223 = mul nsw i32 %accumd.0.0, 212 (endState: LEGUP_F_main_BB__58_78)
   %225 = mul nsw i32 %accumc.1.0, 48 (endState: LEGUP_F_main_BB__58_78)
   %227 = mul nsw i32 %accumd.1.0, -624 (endState: LEGUP_F_main_BB__58_78)
   %229 = shl nsw i32 %accumc.2.0, 7 (endState: LEGUP_F_main_BB__58_77)
   %231 = mul nsw i32 %accumd.2.0, 1448 (endState: LEGUP_F_main_BB__58_78)
   %233 = mul nsw i32 %accumc.3.0, -840 (endState: LEGUP_F_main_BB__58_78)
   %235 = mul nsw i32 %accumd.3.0, -3220 (endState: LEGUP_F_main_BB__58_78)
   %237 = mul nsw i32 %accumc.4.0, 3804 (endState: LEGUP_F_main_BB__58_78)
   %239 = mul nsw i32 %accumd.4.0, 15504 (endState: LEGUP_F_main_BB__58_78)
   %241 = mul nsw i32 %accumc.5.0, 15504 (endState: LEGUP_F_main_BB__58_78)
   %243 = mul nsw i32 %accumd.5.0, 3804 (endState: LEGUP_F_main_BB__58_78)
   %245 = mul nsw i32 %accumc.6.0, -3220 (endState: LEGUP_F_main_BB__58_78)
   %247 = mul nsw i32 %accumd.6.0, -840 (endState: LEGUP_F_main_BB__58_78)
   %249 = mul nsw i32 %accumc.7.0, 1448 (endState: LEGUP_F_main_BB__58_78)
   %251 = shl nsw i32 %accumd.7.0, 7 (endState: LEGUP_F_main_BB__58_77)
   %253 = mul nsw i32 %accumc.8.0, -624 (endState: LEGUP_F_main_BB__58_78)
   %255 = mul nsw i32 %accumd.8.0, 48 (endState: LEGUP_F_main_BB__58_78)
   %257 = mul nsw i32 %accumc.9.0, 212 (endState: LEGUP_F_main_BB__58_78)
   %259 = mul nsw i32 %accumd.9.0, -44 (endState: LEGUP_F_main_BB__58_78)
   %261 = mul nsw i32 %accumc.10.0, -44 (endState: LEGUP_F_main_BB__58_78)
   %263 = mul nsw i32 %accumd.10.0, 12 (endState: LEGUP_F_main_BB__58_78)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_main_BB__58_77)
   %exitcond5 = icmp eq i32 %indvar.next, 50 (endState: LEGUP_F_main_BB__58_77)
   Transition: default: LEGUP_F_main_BB__58_78
state: LEGUP_F_main_BB__58_78
   %67 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_80)
   %68 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_80)
   %tmp.i.i.i = add i32 %89, %88 (endState: LEGUP_F_main_BB__58_78)
   %tmp1.i.i.i = shl i32 %tmp.i.i.i, 1 (endState: LEGUP_F_main_BB__58_78)
   %90 = ashr i32 %tmp1.i.i.i, 15 (endState: LEGUP_F_main_BB__58_78)
   %105 = ashr i32 %104, 7 (endState: LEGUP_F_main_BB__58_78)
   %130 = ashr i32 %129, 7 (endState: LEGUP_F_main_BB__58_78)
   %135 = ashr i32 %134, 8 (endState: LEGUP_F_main_BB__58_78)
   %138 = add nsw i32 %135, 192 (endState: LEGUP_F_main_BB__58_78)
   %tmp.i3.i.i = add i32 %169, %168 (endState: LEGUP_F_main_BB__58_78)
   %tmp1.i4.i.i = shl i32 %tmp.i3.i.i, 1 (endState: LEGUP_F_main_BB__58_78)
   %170 = ashr i32 %tmp1.i4.i.i, 15 (endState: LEGUP_F_main_BB__58_78)
   %178 = ashr i32 %177, 7 (endState: LEGUP_F_main_BB__58_78)
   %203 = ashr i32 %202, 7 (endState: LEGUP_F_main_BB__58_78)
   %208 = ashr i32 %207, 8 (endState: LEGUP_F_main_BB__58_78)
   %211 = add nsw i32 %208, 192 (endState: LEGUP_F_main_BB__58_78)
   Transition: default: LEGUP_F_main_BB__58_79
state: LEGUP_F_main_BB__58_79
   %66 = mul nsw i32 %65, %64 (endState: LEGUP_F_main_BB__58_80)
   %71 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_81)
   %72 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_81)
   Transition: default: LEGUP_F_main_BB__58_80
state: LEGUP_F_main_BB__58_80
   %69 = mul nsw i32 %68, %67 (endState: LEGUP_F_main_BB__58_81)
   %75 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_82)
   %76 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_82)
   Transition: default: LEGUP_F_main_BB__58_81
state: LEGUP_F_main_BB__58_81
   %70 = add nsw i32 %69, %66 (endState: LEGUP_F_main_BB__58_81)
   %73 = mul nsw i32 %72, %71 (endState: LEGUP_F_main_BB__58_82)
   %79 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_83)
   %80 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_83)
   Transition: default: LEGUP_F_main_BB__58_82
state: LEGUP_F_main_BB__58_82
   %74 = add nsw i32 %70, %73 (endState: LEGUP_F_main_BB__58_82)
   %77 = mul nsw i32 %76, %75 (endState: LEGUP_F_main_BB__58_83)
   %83 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_84)
   %84 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_84)
   Transition: default: LEGUP_F_main_BB__58_83
state: LEGUP_F_main_BB__58_83
   %78 = add nsw i32 %74, %77 (endState: LEGUP_F_main_BB__58_83)
   %81 = mul nsw i32 %80, %79 (endState: LEGUP_F_main_BB__58_84)
   %98 = load i32* @il, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_85)
   Transition: default: LEGUP_F_main_BB__58_84
state: LEGUP_F_main_BB__58_84
   %82 = add nsw i32 %78, %81 (endState: LEGUP_F_main_BB__58_84)
   %85 = mul nsw i32 %84, %83 (endState: LEGUP_F_main_BB__58_85)
   Transition: default: LEGUP_F_main_BB__58_85
state: LEGUP_F_main_BB__58_85
   %86 = add nsw i32 %82, %85 (endState: LEGUP_F_main_BB__58_85)
   %87 = ashr i32 %86, 14 (endState: LEGUP_F_main_BB__58_85)
   %91 = add nsw i32 %90, %87 (endState: LEGUP_F_main_BB__58_85)
   %99 = getelementptr inbounds [64 x i32]* @qq6_code6_table, i32 0, i32 %98 (endState: LEGUP_F_main_BB__58_85)
   %100 = load i32* %99, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_86)
   Transition: default: LEGUP_F_main_BB__58_86
state: LEGUP_F_main_BB__58_86
   %101 = mul nsw i32 %100, %dec_detl.0 (endState: LEGUP_F_main_BB__58_87)
   Transition: default: LEGUP_F_main_BB__58_87
state: LEGUP_F_main_BB__58_87
   %102 = ashr i32 %101, 15 (endState: LEGUP_F_main_BB__58_87)
   %103 = add nsw i32 %102, %91 (endState: LEGUP_F_main_BB__58_87)
   Transition: default: LEGUP_F_main_BB__58_88
state: LEGUP_F_main_BB__58_88
   Transition: default: LEGUP_F_main_BB__58_89
state: LEGUP_F_main_BB__58_89
   Transition: default: LEGUP_F_main_BB__58_90
state: LEGUP_F_main_BB__58_90
   Transition: default: LEGUP_F_main_BB__58_91
state: LEGUP_F_main_BB__58_91
   Transition: default: LEGUP_F_main_BB__58_92
state: LEGUP_F_main_BB__58_92
   Transition: default: LEGUP_F_main_BB__58_93
state: LEGUP_F_main_BB__58_93
   Transition: default: LEGUP_F_main_BB__58_94
state: LEGUP_F_main_BB__58_94
   Transition: default: LEGUP_F_main_BB__58_95
state: LEGUP_F_main_BB__58_95
   Transition: default: LEGUP_F_main_BB__58_96
state: LEGUP_F_main_BB__58_96
   Transition: default: LEGUP_F_main_BB__58_97
state: LEGUP_F_main_BB__58_97
   Transition: default: LEGUP_F_main_BB__58_98
state: LEGUP_F_main_BB__58_98
   Transition: default: LEGUP_F_main_BB__58_99
state: LEGUP_F_main_BB__58_99
   Transition: default: LEGUP_F_main_BB__58_100
state: LEGUP_F_main_BB__58_100
   Transition: default: LEGUP_F_main_BB__58_101
state: LEGUP_F_main_BB__58_101
   Transition: default: LEGUP_F_main_BB__58_102
state: LEGUP_F_main_BB__58_102
   Transition: default: LEGUP_F_main_BB__58_103
state: LEGUP_F_main_BB__58_103
   Transition: default: LEGUP_F_main_BB__58_104
state: LEGUP_F_main_BB__58_104
   Transition: default: LEGUP_F_main_BB__58_105
state: LEGUP_F_main_BB__58_105
   Transition: default: LEGUP_F_main_BB__58_106
state: LEGUP_F_main_BB__58_106
   Transition: default: LEGUP_F_main_BB__58_107
state: LEGUP_F_main_BB__58_107
   Transition: default: LEGUP_F_main_BB__58_108
state: LEGUP_F_main_BB__58_108
   Transition: default: LEGUP_F_main_BB__58_109
state: LEGUP_F_main_BB__58_109
   %61 = getelementptr inbounds [100 x i32]* @compressed, i32 0, i32 %60 (endState: LEGUP_F_main_BB__58_109)
   %62 = load i32* %61, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_110)
   Transition: default: LEGUP_F_main_BB__58_110
state: LEGUP_F_main_BB__58_110
   %63 = ashr i32 %62, 6 (endState: LEGUP_F_main_BB__58_110)
   %92 = lshr i32 %62, 2 (endState: LEGUP_F_main_BB__58_110)
   %93 = and i32 %92, 15 (endState: LEGUP_F_main_BB__58_110)
   %94 = getelementptr inbounds [16 x i32]* @qq4_code4_table, i32 0, i32 %93 (endState: LEGUP_F_main_BB__58_110)
   %95 = load i32* %94, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_112)
   %106 = getelementptr inbounds [16 x i32]* @wl_code_table, i32 0, i32 %93 (endState: LEGUP_F_main_BB__58_110)
   %107 = load i32* %106, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_112)
   Transition: default: LEGUP_F_main_BB__58_111
state: LEGUP_F_main_BB__58_111
   store i32 %63, i32* @ih, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_112)
   Transition: default: LEGUP_F_main_BB__58_112
state: LEGUP_F_main_BB__58_112
   %96 = mul nsw i32 %95, %dec_detl.0 (endState: LEGUP_F_main_BB__58_113)
   %108 = add nsw i32 %105, %107 (endState: LEGUP_F_main_BB__58_112)
   %109 = icmp slt i32 %108, 0 (endState: LEGUP_F_main_BB__58_112)
   %..i12.i.i = select i1 %109, i32 0, i32 %108 (endState: LEGUP_F_main_BB__58_112)
   %110 = icmp sgt i32 %..i12.i.i, 18432 (endState: LEGUP_F_main_BB__58_112)
   %...i13.i.i = select i1 %110, i32 18432, i32 %..i12.i.i (endState: LEGUP_F_main_BB__58_112)
   %111 = lshr i32 %...i13.i.i, 6 (endState: LEGUP_F_main_BB__58_112)
   %112 = and i32 %111, 31 (endState: LEGUP_F_main_BB__58_112)
   %113 = ashr i32 %...i13.i.i, 11 (endState: LEGUP_F_main_BB__58_112)
   %116 = sub i32 9, %113 (endState: LEGUP_F_main_BB__58_112)
   Transition: default: LEGUP_F_main_BB__58_113
state: LEGUP_F_main_BB__58_113
   %97 = ashr i32 %96, 15 (endState: LEGUP_F_main_BB__58_113)
   %114 = getelementptr inbounds [32 x i32]* @ilb_table, i32 0, i32 %112 (endState: LEGUP_F_main_BB__58_113)
   %115 = load i32* %114, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_115)
   %119 = add nsw i32 %87, %97 (endState: LEGUP_F_main_BB__58_113)
   %121 = mul nsw i32 %dec_plt1.0, %119 (endState: LEGUP_F_main_BB__58_114)
   %125 = mul nsw i32 %dec_plt2.0, %119 (endState: LEGUP_F_main_BB__58_114)
   %143 = add nsw i32 %97, %91 (endState: LEGUP_F_main_BB__58_113)
   Transition: default: LEGUP_F_main_BB__58_114
state: LEGUP_F_main_BB__58_114
   %122 = icmp sgt i32 %121, -1 (endState: LEGUP_F_main_BB__58_114)
   %.1.i8.i.i = select i1 %122, i32 %123, i32 %120 (endState: LEGUP_F_main_BB__58_114)
   %124 = ashr i32 %.1.i8.i.i, 7 (endState: LEGUP_F_main_BB__58_114)
   %126 = ashr i32 %125, 31 (endState: LEGUP_F_main_BB__58_114)
   %127 = and i32 %126, -256 (endState: LEGUP_F_main_BB__58_114)
   %128 = or i32 %127, 128 (endState: LEGUP_F_main_BB__58_114)
   %wd4.0.i9.i.i = add nsw i32 %124, %130 (endState: LEGUP_F_main_BB__58_114)
   %131 = add nsw i32 %wd4.0.i9.i.i, %128 (endState: LEGUP_F_main_BB__58_114)
   %132 = icmp sgt i32 %131, 12288 (endState: LEGUP_F_main_BB__58_114)
   %..i10.i.i = select i1 %132, i32 12288, i32 %131 (endState: LEGUP_F_main_BB__58_114)
   %136 = ashr i32 %121, 31 (endState: LEGUP_F_main_BB__58_114)
   %137 = and i32 %136, -384 (endState: LEGUP_F_main_BB__58_114)
   %apl1.0.i5.i.i = add nsw i32 %138, %137 (endState: LEGUP_F_main_BB__58_114)
   Transition: default: LEGUP_F_main_BB__58_115
state: LEGUP_F_main_BB__58_115
   %117 = ashr i32 %115, %116 (endState: LEGUP_F_main_BB__58_115)
   %118 = shl i32 %117, 3 (endState: LEGUP_F_main_BB__58_115)
   %133 = icmp slt i32 %..i10.i.i, -12288 (endState: LEGUP_F_main_BB__58_115)
   %...i11.i.i = select i1 %133, i32 -12288, i32 %..i10.i.i (endState: LEGUP_F_main_BB__58_115)
   %139 = sub nsw i32 15360, %...i11.i.i (endState: LEGUP_F_main_BB__58_115)
   %140 = icmp sgt i32 %apl1.0.i5.i.i, %139 (endState: LEGUP_F_main_BB__58_115)
   %.apl1.0.i6.i.i = select i1 %140, i32 %139, i32 %apl1.0.i5.i.i (endState: LEGUP_F_main_BB__58_115)
   %141 = sub nsw i32 0, %139 (endState: LEGUP_F_main_BB__58_115)
   Transition: default: LEGUP_function_call_116
state: LEGUP_function_call_116
   tail call fastcc void @upzero(i32 %97, i32* getelementptr inbounds ([6 x i32]* @dec_del_dltx, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32]* @dec_del_bpl, i32 0, i32 0)) #1 (endState: LEGUP_function_call_116)
   Transition: if (upzero_finish_final): LEGUP_F_main_BB__58_117 default: LEGUP_function_call_116
state: LEGUP_F_main_BB__58_117
   %142 = icmp slt i32 %.apl1.0.i6.i.i, %141 (endState: LEGUP_F_main_BB__58_117)
   %apl1.2.i7.i.i = select i1 %142, i32 %141, i32 %.apl1.0.i6.i.i (endState: LEGUP_F_main_BB__58_117)
   %172 = load i32* @ih, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_119)
   Transition: default: LEGUP_F_main_BB__58_118
state: LEGUP_F_main_BB__58_118
   %144 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_120)
   Transition: default: LEGUP_F_main_BB__58_119
state: LEGUP_F_main_BB__58_119
   %147 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_121)
   %173 = getelementptr inbounds [4 x i32]* @qq2_code2_table, i32 0, i32 %172 (endState: LEGUP_F_main_BB__58_119)
   %179 = getelementptr inbounds [4 x i32]* @wh_code_table, i32 0, i32 %172 (endState: LEGUP_F_main_BB__58_119)
   %180 = load i32* %179, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_121)
   Transition: default: LEGUP_F_main_BB__58_120
state: LEGUP_F_main_BB__58_120
   %145 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_122)
   %151 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_122)
   Transition: default: LEGUP_F_main_BB__58_121
state: LEGUP_F_main_BB__58_121
   %148 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_123)
   %155 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_123)
   %181 = add nsw i32 %178, %180 (endState: LEGUP_F_main_BB__58_121)
   %182 = icmp slt i32 %181, 0 (endState: LEGUP_F_main_BB__58_121)
   %..i1.i.i = select i1 %182, i32 0, i32 %181 (endState: LEGUP_F_main_BB__58_121)
   %183 = icmp sgt i32 %..i1.i.i, 22528 (endState: LEGUP_F_main_BB__58_121)
   %...i2.i.i = select i1 %183, i32 22528, i32 %..i1.i.i (endState: LEGUP_F_main_BB__58_121)
   %184 = lshr i32 %...i2.i.i, 6 (endState: LEGUP_F_main_BB__58_121)
   %185 = and i32 %184, 31 (endState: LEGUP_F_main_BB__58_121)
   %186 = ashr i32 %...i2.i.i, 11 (endState: LEGUP_F_main_BB__58_121)
   %189 = sub i32 11, %186 (endState: LEGUP_F_main_BB__58_121)
   Transition: default: LEGUP_F_main_BB__58_122
state: LEGUP_F_main_BB__58_122
   %146 = mul nsw i32 %145, %144 (endState: LEGUP_F_main_BB__58_123)
   %152 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_124)
   %159 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_124)
   %187 = getelementptr inbounds [32 x i32]* @ilb_table, i32 0, i32 %185 (endState: LEGUP_F_main_BB__58_122)
   Transition: default: LEGUP_F_main_BB__58_123
state: LEGUP_F_main_BB__58_123
   %149 = mul nsw i32 %148, %147 (endState: LEGUP_F_main_BB__58_124)
   %156 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_125)
   %163 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_125)
   Transition: default: LEGUP_F_main_BB__58_124
state: LEGUP_F_main_BB__58_124
   %150 = add nsw i32 %149, %146 (endState: LEGUP_F_main_BB__58_124)
   %153 = mul nsw i32 %152, %151 (endState: LEGUP_F_main_BB__58_125)
   %160 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_126)
   %174 = load i32* %173, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_126)
   Transition: default: LEGUP_F_main_BB__58_125
state: LEGUP_F_main_BB__58_125
   %154 = add nsw i32 %150, %153 (endState: LEGUP_F_main_BB__58_125)
   %157 = mul nsw i32 %156, %155 (endState: LEGUP_F_main_BB__58_126)
   %164 = load i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_127)
   Transition: default: LEGUP_F_main_BB__58_126
state: LEGUP_F_main_BB__58_126
   %158 = add nsw i32 %154, %157 (endState: LEGUP_F_main_BB__58_126)
   %161 = mul nsw i32 %160, %159 (endState: LEGUP_F_main_BB__58_127)
   %175 = mul nsw i32 %174, %dec_deth.0 (endState: LEGUP_F_main_BB__58_127)
   %188 = load i32* %187, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_128)
   Transition: default: LEGUP_F_main_BB__58_127
state: LEGUP_F_main_BB__58_127
   %162 = add nsw i32 %158, %161 (endState: LEGUP_F_main_BB__58_127)
   %165 = mul nsw i32 %164, %163 (endState: LEGUP_F_main_BB__58_128)
   %176 = ashr i32 %175, 15 (endState: LEGUP_F_main_BB__58_127)
   Transition: default: LEGUP_F_main_BB__58_128
state: LEGUP_F_main_BB__58_128
   %166 = add nsw i32 %162, %165 (endState: LEGUP_F_main_BB__58_128)
   %167 = ashr i32 %166, 14 (endState: LEGUP_F_main_BB__58_128)
   %171 = add nsw i32 %170, %167 (endState: LEGUP_F_main_BB__58_128)
   %190 = ashr i32 %188, %189 (endState: LEGUP_F_main_BB__58_128)
   %191 = shl i32 %190, 3 (endState: LEGUP_F_main_BB__58_128)
   %192 = add nsw i32 %167, %176 (endState: LEGUP_F_main_BB__58_128)
   %194 = mul nsw i32 %dec_ph1.0, %192 (endState: LEGUP_F_main_BB__58_130)
   %198 = mul nsw i32 %dec_ph2.0, %192 (endState: LEGUP_F_main_BB__58_130)
   %216 = add nsw i32 %176, %171 (endState: LEGUP_F_main_BB__58_128)
   %217 = sub nsw i32 %103, %216 (endState: LEGUP_F_main_BB__58_128)
   %218 = add nsw i32 %216, %103 (endState: LEGUP_F_main_BB__58_128)
   %219 = mul nsw i32 %217, 12 (endState: LEGUP_F_main_BB__58_130)
   %220 = mul nsw i32 %218, -44 (endState: LEGUP_F_main_BB__58_130)
   Transition: default: LEGUP_function_call_129
state: LEGUP_function_call_129
   tail call fastcc void @upzero(i32 %176, i32* getelementptr inbounds ([6 x i32]* @dec_del_dhx, i32 0, i32 0), i32* getelementptr inbounds ([6 x i32]* @dec_del_bph, i32 0, i32 0)) #1 (endState: LEGUP_function_call_129)
   Transition: if (upzero_finish_final): LEGUP_F_main_BB__58_130 default: LEGUP_function_call_129
state: LEGUP_F_main_BB__58_130
   %195 = icmp sgt i32 %194, -1 (endState: LEGUP_F_main_BB__58_130)
   %.1.i.i.i = select i1 %195, i32 %196, i32 %193 (endState: LEGUP_F_main_BB__58_130)
   %197 = ashr i32 %.1.i.i.i, 7 (endState: LEGUP_F_main_BB__58_130)
   %199 = ashr i32 %198, 31 (endState: LEGUP_F_main_BB__58_130)
   %200 = and i32 %199, -256 (endState: LEGUP_F_main_BB__58_130)
   %201 = or i32 %200, 128 (endState: LEGUP_F_main_BB__58_130)
   %wd4.0.i.i.i = add nsw i32 %197, %203 (endState: LEGUP_F_main_BB__58_130)
   %204 = add nsw i32 %wd4.0.i.i.i, %201 (endState: LEGUP_F_main_BB__58_130)
   %205 = icmp sgt i32 %204, 12288 (endState: LEGUP_F_main_BB__58_130)
   %..i.i.i = select i1 %205, i32 12288, i32 %204 (endState: LEGUP_F_main_BB__58_130)
   %209 = ashr i32 %194, 31 (endState: LEGUP_F_main_BB__58_130)
   %210 = and i32 %209, -384 (endState: LEGUP_F_main_BB__58_130)
   %apl1.0.i.i.i = add nsw i32 %211, %210 (endState: LEGUP_F_main_BB__58_130)
   %222 = add nsw i32 %221, %219 (endState: LEGUP_F_main_BB__58_130)
   %224 = add nsw i32 %223, %220 (endState: LEGUP_F_main_BB__58_130)
   %226 = add nsw i32 %225, %222 (endState: LEGUP_F_main_BB__58_130)
   %228 = add nsw i32 %227, %224 (endState: LEGUP_F_main_BB__58_130)
   %230 = add nsw i32 %229, %226 (endState: LEGUP_F_main_BB__58_130)
   %232 = add nsw i32 %231, %228 (endState: LEGUP_F_main_BB__58_130)
   %234 = add nsw i32 %233, %230 (endState: LEGUP_F_main_BB__58_130)
   %236 = add nsw i32 %235, %232 (endState: LEGUP_F_main_BB__58_130)
   %238 = add nsw i32 %237, %234 (endState: LEGUP_F_main_BB__58_130)
   %240 = add nsw i32 %239, %236 (endState: LEGUP_F_main_BB__58_130)
   %242 = add nsw i32 %241, %238 (endState: LEGUP_F_main_BB__58_130)
   %244 = add nsw i32 %243, %240 (endState: LEGUP_F_main_BB__58_130)
   %246 = add nsw i32 %245, %242 (endState: LEGUP_F_main_BB__58_130)
   %248 = add nsw i32 %247, %244 (endState: LEGUP_F_main_BB__58_130)
   %250 = add nsw i32 %249, %246 (endState: LEGUP_F_main_BB__58_130)
   %252 = add nsw i32 %251, %248 (endState: LEGUP_F_main_BB__58_130)
   Transition: default: LEGUP_F_main_BB__58_131
state: LEGUP_F_main_BB__58_131
   %206 = icmp slt i32 %..i.i.i, -12288 (endState: LEGUP_F_main_BB__58_131)
   %...i.i.i = select i1 %206, i32 -12288, i32 %..i.i.i (endState: LEGUP_F_main_BB__58_131)
   %212 = sub nsw i32 15360, %...i.i.i (endState: LEGUP_F_main_BB__58_131)
   %213 = icmp sgt i32 %apl1.0.i.i.i, %212 (endState: LEGUP_F_main_BB__58_131)
   %.apl1.0.i.i.i = select i1 %213, i32 %212, i32 %apl1.0.i.i.i (endState: LEGUP_F_main_BB__58_131)
   %214 = sub nsw i32 0, %212 (endState: LEGUP_F_main_BB__58_131)
   %254 = add nsw i32 %253, %250 (endState: LEGUP_F_main_BB__58_131)
   %256 = add nsw i32 %255, %252 (endState: LEGUP_F_main_BB__58_131)
   %258 = add nsw i32 %257, %254 (endState: LEGUP_F_main_BB__58_131)
   %260 = add nsw i32 %259, %256 (endState: LEGUP_F_main_BB__58_131)
   %262 = add nsw i32 %261, %258 (endState: LEGUP_F_main_BB__58_131)
   %264 = add nsw i32 %263, %260 (endState: LEGUP_F_main_BB__58_131)
   %265 = ashr i32 %262, 14 (endState: LEGUP_F_main_BB__58_131)
   %266 = ashr i32 %264, 14 (endState: LEGUP_F_main_BB__58_131)
   store i32 %265, i32* %scevgep7, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_132)
   store i32 %266, i32* %scevgep6, align 4, !tbaa !1 (endState: LEGUP_F_main_BB__58_132)
   Transition: default: LEGUP_F_main_BB__58_132
state: LEGUP_F_main_BB__58_132
   %215 = icmp slt i32 %.apl1.0.i.i.i, %214 (endState: LEGUP_F_main_BB__58_132)
   %apl1.2.i.i.i = select i1 %215, i32 %214, i32 %.apl1.0.i.i.i (endState: LEGUP_F_main_BB__58_132)
   br i1 %exitcond5, label %adpcm_main.exit.preheader, label %58
   Transition: if (%exitcond5): LEGUP_F_main_BB_adpcm_mainexitpreheader_133 default: LEGUP_F_main_BB__58_77
state: LEGUP_F_main_BB_adpcm_mainexitpreheader_133
   br label %adpcm_main.exit
   Transition: default: LEGUP_F_main_BB_adpcm_mainexit_134
state: LEGUP_F_main_BB_adpcm_mainexit_134
   %main_result.04 = phi i32 [ %.main_result.0, %adpcm_main.exit ], [ 0, %adpcm_main.exit.preheader ] (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   %i.03 = phi i32 [ %271, %adpcm_main.exit ], [ 0, %adpcm_main.exit.preheader ] (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   %scevgep3 = getelementptr [100 x i32]* @test_compressed, i32 0, i32 %i.03 (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   %scevgep4 = getelementptr [100 x i32]* @compressed, i32 0, i32 %i.03 (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   %267 = load i32* %scevgep4, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_adpcm_mainexit_135)
   %268 = load i32* %scevgep3, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_adpcm_mainexit_135)
   %271 = add nsw i32 %i.03, 1 (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   %exitcond = icmp eq i32 %271, 50 (endState: LEGUP_F_main_BB_adpcm_mainexit_134)
   Transition: default: LEGUP_F_main_BB_adpcm_mainexit_135
state: LEGUP_F_main_BB_adpcm_mainexit_135
   %269 = icmp eq i32 %267, %268 (endState: LEGUP_F_main_BB_adpcm_mainexit_135)
   %270 = zext i1 %269 to i32 (endState: LEGUP_F_main_BB_adpcm_mainexit_135)
   %.main_result.0 = add nsw i32 %270, %main_result.04 (endState: LEGUP_F_main_BB_adpcm_mainexit_135)
   br i1 %exitcond, label %.preheader.preheader, label %adpcm_main.exit
   Transition: if (%exitcond): LEGUP_F_main_BB_preheaderpreheader_136 default: LEGUP_F_main_BB_adpcm_mainexit_134
state: LEGUP_F_main_BB_preheaderpreheader_136
   br label %.preheader
   Transition: default: LEGUP_F_main_BB_preheader_137
state: LEGUP_F_main_BB_preheader_137
   %main_result.22 = phi i32 [ %.main_result.2, %.preheader ], [ %.main_result.0, %.preheader.preheader ] (endState: LEGUP_F_main_BB_preheader_137)
   %i.11 = phi i32 [ %276, %.preheader ], [ 0, %.preheader.preheader ] (endState: LEGUP_F_main_BB_preheader_137)
   %scevgep = getelementptr [100 x i32]* @test_result, i32 0, i32 %i.11 (endState: LEGUP_F_main_BB_preheader_137)
   %scevgep2 = getelementptr [100 x i32]* @result, i32 0, i32 %i.11 (endState: LEGUP_F_main_BB_preheader_137)
   %272 = load i32* %scevgep2, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader_138)
   %273 = load i32* %scevgep, align 4, !tbaa !1 (endState: LEGUP_F_main_BB_preheader_138)
   %276 = add nsw i32 %i.11, 1 (endState: LEGUP_F_main_BB_preheader_137)
   %exitcond1 = icmp eq i32 %276, 100 (endState: LEGUP_F_main_BB_preheader_137)
   Transition: default: LEGUP_F_main_BB_preheader_138
state: LEGUP_F_main_BB_preheader_138
   %274 = icmp eq i32 %272, %273 (endState: LEGUP_F_main_BB_preheader_138)
   %275 = zext i1 %274 to i32 (endState: LEGUP_F_main_BB_preheader_138)
   %.main_result.2 = add nsw i32 %275, %main_result.22 (endState: LEGUP_F_main_BB_preheader_138)
   br i1 %exitcond1, label %277, label %.preheader
   Transition: if (%exitcond1): LEGUP_F_main_BB__277_139 default: LEGUP_F_main_BB_preheader_137
state: LEGUP_F_main_BB__277_139
   %278 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32 %.main_result.2) #1 (endState: LEGUP_F_main_BB__277_139)
   %279 = icmp eq i32 %.main_result.2, 150 (endState: LEGUP_F_main_BB__277_139)
   br i1 %279, label %280, label %282
   Transition: if (%279): LEGUP_F_main_BB__280_140 default: LEGUP_F_main_BB__282_141
state: LEGUP_F_main_BB__280_140
   %281 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__280_140)
   br label %284
   Transition: default: LEGUP_F_main_BB__284_142
state: LEGUP_F_main_BB__282_141
   %283 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__282_141)
   br label %284
   Transition: default: LEGUP_F_main_BB__284_142
state: LEGUP_F_main_BB__284_142
   ret i32 %.main_result.2
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 33
Basic Block: %1 Num States: 1
Basic Block: %legup_memset_4_i64.exit.preheader Num States: 1
Basic Block: %2 Num States: 2
Basic Block: %.preheader2.i Num States: 13
Basic Block: %legup_memset_4_i64.exit Num States: 26
Basic Block: %58 Num States: 56
Basic Block: %adpcm_main.exit.preheader Num States: 1
Basic Block: %adpcm_main.exit Num States: 2
Basic Block: %.preheader.preheader Num States: 1
Basic Block: %.preheader Num States: 2
Basic Block: %277 Num States: 1
Basic Block: %280 Num States: 1
Basic Block: %282 Num States: 1
Basic Block: %284 Num States: 1
End Function: main
--------------------------------------------------------------------------------


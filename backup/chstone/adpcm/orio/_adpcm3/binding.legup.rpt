//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Jan 28 18:16:28 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: upzero
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: encode
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
mem_dual_port                 2                             
xh_local_mem_dual_port        1                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    2                             
signed_divide_32              1                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             

Running Bipartite Weighted Matching on function: upzero
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %2 = load i32* %dlti, align ... (idx: 0)        0                             0                             
  %7 = load i32* %bli, align 4... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %2 = load i32* %dlti, align ... (idx: 0)        1                             0                             
  %7 = load i32* %bli, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %2 = load i32* %dlti, align ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 0)
  %7 = load i32* %bli, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %10, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %10, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %10, i32* %bli, al... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %10, i32* %bli, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* %bli, al... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %12 = load i32* %11, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %12 = load i32* %11, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %18 = load i32* %17, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %18 = load i32* %17, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %12 = load i32* %11, align 4... (idx: 0)        6                             5                             
  %18 = load i32* %17, align 4... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %12 = load i32* %11, align 4... (idx: 0)        1                             0                             
  %18 = load i32* %17, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = load i32* %11, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 2)
  %18 = load i32* %17, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %21, i32* %17, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %21, i32* %17, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %21, i32* %17, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %21, i32* %17, ali... (idx: 0)        17                            6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %21, i32* %17, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %21, i32* %17, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load i32* %22, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %23 = load i32* %22, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %23 = load i32* %22, align 4... (idx: 0)        7                             7                             
  %29 = load i32* %28, align 4... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %23 = load i32* %22, align 4... (idx: 0)        1                             0                             
  %29 = load i32* %28, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* %22, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 3)
  %29 = load i32* %28, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %32, i32* %28, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %32, i32* %28, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %32, i32* %28, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %32, i32* %28, ali... (idx: 0)        18                            8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %32, i32* %28, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %32, i32* %28, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load i32* %33, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %34 = load i32* %33, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %34 = load i32* %33, align 4... (idx: 0)        8                             9                             
  %40 = load i32* %39, align 4... (idx: 1)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %34 = load i32* %33, align 4... (idx: 0)        1                             0                             
  %40 = load i32* %39, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load i32* %33, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 4)
  %40 = load i32* %39, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %43, i32* %39, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %43, i32* %39, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %43, i32* %39, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %43, i32* %39, ali... (idx: 0)        19                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %43, i32* %39, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %43, i32* %39, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %45 = load i32* %44, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %45 = load i32* %44, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %51 = load i32* %50, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %51 = load i32* %50, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %45 = load i32* %44, align 4... (idx: 0)        9                             11                            
  %51 = load i32* %50, align 4... (idx: 1)        9                             11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %45 = load i32* %44, align 4... (idx: 0)        1                             0                             
  %51 = load i32* %50, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = load i32* %44, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 5)
  %51 = load i32* %50, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %54, i32* %50, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %54, i32* %50, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %54, i32* %50, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %54, i32* %50, ali... (idx: 0)        20                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %54, i32* %50, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %54, i32* %50, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %56 = load i32* %55, align 4... (idx: 0)        10                            13                            
  %62 = load i32* %61, align 4... (idx: 1)        10                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %56 = load i32* %55, align 4... (idx: 0)        1                             0                             
  %62 = load i32* %61, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = load i32* %55, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 6)
  %62 = load i32* %61, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_upzero_BB_preheader1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %65, i32* %61, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %65, i32* %61, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %65, i32* %61, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %65, i32* %61, ali... (idx: 0)        21                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %65, i32* %61, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %65, i32* %61, ali... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load i32* %bli, align ... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %66 = load i32* %bli, align ... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %70 = load i32* %69, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %66 = load i32* %bli, align ... (idx: 0)        1                             5                             
  %70 = load i32* %69, align 4... (idx: 1)        11                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %66 = load i32* %bli, align ... (idx: 0)        1                             0                             
  %70 = load i32* %69, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load i32* %bli, align ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 6)
  %70 = load i32* %69, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %74 = load i32* %73, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %74 = load i32* %73, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %78 = load i32* %77, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %78 = load i32* %77, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %74 = load i32* %73, align 4... (idx: 0)        11                            16                            
  %78 = load i32* %77, align 4... (idx: 1)        11                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %74 = load i32* %73, align 4... (idx: 0)        1                             0                             
  %78 = load i32* %77, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %74 = load i32* %73, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 7)
  %78 = load i32* %77, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %82 = load i32* %81, align 4... (idx: 0)        12                            17                            
  %86 = load i32* %85, align 4... (idx: 1)        12                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %82 = load i32* %81, align 4... (idx: 0)        1                             0                             
  %86 = load i32* %85, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i32* %81, align 4... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 8)
  %86 = load i32* %85, align 4... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %68, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %68, i32* %bli, al... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %72, i32* %69, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %72, i32* %69, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %72, i32* %69, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %68, i32* %bli, al... (idx: 0)        13                            18                            
  store i32 %72, i32* %69, ali... (idx: 1)        23                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %68, i32* %bli, al... (idx: 0)        1                             0                             
  store i32 %72, i32* %69, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %68, i32* %bli, al... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 9)
  store i32 %72, i32* %69, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %76, i32* %73, ali... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %76, i32* %73, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %76, i32* %73, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %80, i32* %77, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %80, i32* %77, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %80, i32* %77, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %76, i32* %73, ali... (idx: 0)        14                            29                            
  store i32 %80, i32* %77, ali... (idx: 1)        24                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %76, i32* %73, ali... (idx: 0)        1                             0                             
  store i32 %80, i32* %77, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %76, i32* %73, ali... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 10)
  store i32 %80, i32* %77, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_upzero_BB_preheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %84, i32* %81, ali... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %84, i32* %81, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %84, i32* %81, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %88, i32* %85, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %88, i32* %85, ali... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %88, i32* %85, ali... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %84, i32* %81, ali... (idx: 0)        15                            30                            
  store i32 %88, i32* %85, ali... (idx: 1)        25                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %84, i32* %81, ali... (idx: 0)        1                             0                             
  store i32 %88, i32* %85, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %84, i32* %81, ali... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 11)
  store i32 %88, i32* %85, ali... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* %.pre-phi, a... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %90 = load i32* %.pre-phi, a... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %91 = load i32* %.pre-phi10,... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %91 = load i32* %.pre-phi10,... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %90 = load i32* %.pre-phi, a... (idx: 0)        16                            21                            
  %91 = load i32* %.pre-phi10,... (idx: 1)        16                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %90 = load i32* %.pre-phi, a... (idx: 0)        1                             0                             
  %91 = load i32* %.pre-phi10,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* %.pre-phi, a... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 12)
  %91 = load i32* %.pre-phi10,... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* %.pre-phi12,... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %92 = load i32* %.pre-phi12,... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  %93 = load i32* %dlti, align... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  %93 = load i32* %dlti, align... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %92 = load i32* %.pre-phi12,... (idx: 0)        17                            22                            
  %93 = load i32* %dlti, align... (idx: 1)        7                             12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  %92 = load i32* %.pre-phi12,... (idx: 0)        1                             0                             
  %93 = load i32* %dlti, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* %.pre-phi12,... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 13)
  %93 = load i32* %dlti, align... (idx: 1) -> upzero_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %90, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %90, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %91, i32* %.pre-ph... can share an input with another operation already assigned to upzero_mem_dual_port_0
  store i32 %91, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %91, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %90, i32* %.pre-ph... (idx: 0)        28                            32                            
  store i32 %91, i32* %.pre-ph... (idx: 1)        18                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %90, i32* %.pre-ph... (idx: 0)        0                             1                             
  store i32 %91, i32* %.pre-ph... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %91, i32* %.pre-ph... (idx: 1) -> upzero_mem_dual_port_0 (mux inputs: 14)
  store i32 %90, i32* %.pre-ph... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %92, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %92, i32* %.pre-ph... can share an input with another operation already assigned to upzero_mem_dual_port_1
  store i32 %92, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
  store i32 %93, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %93, i32* %.pre-ph... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %92, i32* %.pre-ph... (idx: 0)        29                            24                            
  store i32 %93, i32* %.pre-ph... (idx: 1)        29                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %92, i32* %.pre-ph... (idx: 0)        0                             1                             
  store i32 %93, i32* %.pre-ph... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %93, i32* %.pre-ph... (idx: 1) -> upzero_mem_dual_port_0 (mux inputs: 16)
  store i32 %92, i32* %.pre-ph... (idx: 0) -> upzero_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_upzero_BB__89
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %dlt, i32* %dlti, ... can share an output register with another operation already assigned to upzero_mem_dual_port_0
  store i32 %dlt, i32* %dlti, ... can share an output register with another operation already assigned to upzero_mem_dual_port_1
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %dlt, i32* %dlti, ... (idx: 0)        11                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  upzero_mem_dual_port_0        upzero_mem_dual_port_1        
  store i32 %dlt, i32* %dlti, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %dlt, i32* %dlti, ... (idx: 0) -> upzero_mem_dual_port_0 (mux inputs: 16)

Running Bipartite Weighted Matching on function: encode
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        0                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %1 = load i32* getelementptr... (idx: 0)        1                             0                             
  %3 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* getelementptr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* getelementptr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %5 = load i32* getelementptr... (idx: 0)        0                             0                             
  %8 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %5 = load i32* getelementptr... (idx: 0)        1                             0                             
  %8 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load i32* getelementptr... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %8 = load i32* getelementptr... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %11 = load i32* getelementpt... (idx: 0)        0                             0                             
  %14 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %11 = load i32* getelementpt... (idx: 0)        1                             0                             
  %14 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %14 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %17 = load i32* getelementpt... (idx: 0)        0                             0                             
  %20 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %17 = load i32* getelementpt... (idx: 0)        1                             0                             
  %20 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %20 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %23 = load i32* getelementpt... (idx: 0)        0                             0                             
  %26 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %23 = load i32* getelementpt... (idx: 0)        1                             0                             
  %26 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %26 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %29 = load i32* getelementpt... (idx: 0)        0                             0                             
  %32 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %29 = load i32* getelementpt... (idx: 0)        1                             0                             
  %32 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %32 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %35 = load i32* getelementpt... (idx: 0)        0                             0                             
  %38 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %35 = load i32* getelementpt... (idx: 0)        1                             0                             
  %38 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %38 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %41 = load i32* getelementpt... (idx: 0)        0                             0                             
  %44 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %41 = load i32* getelementpt... (idx: 0)        1                             0                             
  %44 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %44 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %47 = load i32* getelementpt... (idx: 0)        0                             0                             
  %50 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %47 = load i32* getelementpt... (idx: 0)        1                             0                             
  %50 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %50 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %53 = load i32* getelementpt... (idx: 0)        0                             0                             
  %56 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %53 = load i32* getelementpt... (idx: 0)        1                             0                             
  %56 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %56 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %59 = load i32* getelementpt... (idx: 0)        0                             0                             
  %62 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %59 = load i32* getelementpt... (idx: 0)        1                             0                             
  %62 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %62 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %65 = load i32* getelementpt... (idx: 0)        0                             0                             
  %68 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %65 = load i32* getelementpt... (idx: 0)        1                             0                             
  %68 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %65 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %68 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %75 = load i32* getelementpt... (idx: 0)        0                             0                             
  %76 = load i32* getelementpt... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %75 = load i32* getelementpt... (idx: 0)        1                             0                             
  %76 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %75 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %76 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %78 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %78 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %79 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %79 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %78 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %79 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %78 = load i32* getelementpt... (idx: 0)        1                             0                             
  %79 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %79 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %82 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %82 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %83 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %82 = load i32* getelementpt... (idx: 0)        1                             0                             
  %83 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %83 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: xh_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_xh_local_mem_dual_port_0
  store i32 %74, i32* @xh, ali... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_xh_local_mem_dual_port_0
  store i32 %74, i32* @xh, ali... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %74, i32* @xh, ali... (idx: 0) -> encode_xh_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %86 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %86 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %86 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %87 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %86 = load i32* getelementpt... (idx: 0)        1                             0                             
  %87 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %87 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %90 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %91 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %91 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %90 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %91 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %90 = load i32* getelementpt... (idx: 0)        1                             0                             
  %91 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %91 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %94 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %95 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %95 = load i32* getelementpt... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %94 = load i32* getelementpt... (idx: 0)        -5                            -5                            
  %95 = load i32* getelementpt... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %94 = load i32* getelementpt... (idx: 0)        1                             0                             
  %95 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i32* getelementpt... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %95 = load i32* getelementpt... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %99 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %99 = load i32* @rlt1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %99 = load i32* @rlt1, align... (idx: 0)        -5                            -5                            
  %100 = load i32* @al1, align... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %99 = load i32* @rlt1, align... (idx: 0)        1                             0                             
  %100 = load i32* @al1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i32* @rlt1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %100 = load i32* @al1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %101 = load i32* @rlt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %101 = load i32* @rlt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %101 = load i32* @rlt2, alig... (idx: 0)        -5                            -5                            
  %102 = load i32* @al2, align... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %101 = load i32* @rlt2, alig... (idx: 0)        1                             0                             
  %102 = load i32* @al2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %101 = load i32* @rlt2, alig... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 0)
  %102 = load i32* @al2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %62, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %62, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %62, i32* geteleme... (idx: 0)        5                             5                             
  %108 = load i32* @detl, alig... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %62, i32* geteleme... (idx: 0)        1                             0                             
  %108 = load i32* @detl, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %62, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 1)
  %108 = load i32* @detl, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %59, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %59, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %56, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %56, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %59, i32* geteleme... (idx: 0)        6                             5                             
  store i32 %56, i32* geteleme... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %59, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %56, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %59, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 2)
  store i32 %56, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %53, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %53, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %50, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %50, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %53, i32* geteleme... (idx: 0)        7                             6                             
  store i32 %50, i32* geteleme... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %53, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %50, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %53, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 3)
  store i32 %50, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %47, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %47, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %44, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %44, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %47, i32* geteleme... (idx: 0)        8                             7                             
  store i32 %44, i32* geteleme... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %47, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %44, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %47, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 4)
  store i32 %44, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %41, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %41, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %38, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %38, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %41, i32* geteleme... (idx: 0)        9                             8                             
  store i32 %38, i32* geteleme... (idx: 1)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %41, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %38, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %41, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 5)
  store i32 %38, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %35, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %35, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %32, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %32, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %35, i32* geteleme... (idx: 0)        10                            9                             
  store i32 %32, i32* geteleme... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %35, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %32, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %35, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 6)
  store i32 %32, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %29, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %29, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %26, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %26, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %29, i32* geteleme... (idx: 0)        11                            10                            
  store i32 %26, i32* geteleme... (idx: 1)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %29, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %26, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %29, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 7)
  store i32 %26, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %23, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %23, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %20, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %20, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %23, i32* geteleme... (idx: 0)        12                            11                            
  store i32 %20, i32* geteleme... (idx: 1)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %23, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %20, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %23, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 8)
  store i32 %20, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %17, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %17, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %14, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %14, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %17, i32* geteleme... (idx: 0)        13                            12                            
  store i32 %14, i32* geteleme... (idx: 1)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %17, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %14, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %17, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 9)
  store i32 %14, i32* geteleme... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %11, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %11, i32* geteleme... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %8, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %8, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %11, i32* geteleme... (idx: 0)        14                            13                            
  store i32 %8, i32* getelemen... (idx: 1)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %11, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %8, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %11, i32* geteleme... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 10)
  store i32 %8, i32* getelemen... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %5, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %5, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %3, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %3, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %5, i32* getelemen... (idx: 0)        15                            14                            
  store i32 %3, i32* getelemen... (idx: 1)        15                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %5, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %3, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %5, i32* getelemen... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 11)
  store i32 %3, i32* getelemen... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %1, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %1, i32* getelemen... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin1, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %1, i32* getelemen... (idx: 0)        16                            15                            
  store i32 %xin1, i32* getele... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %1, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %xin1, i32* getele... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %1, i32* getelemen... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 12)
  store i32 %xin1, i32* getele... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %xin2, i32* getele... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin2, i32* getele... (idx: 0)        7                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %xin2, i32* getele... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %xin2, i32* getele... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB__114
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %117 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_decis_levl_local_mem_dual_port_0
  %117 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i32* %scevgep, a... (idx: 0) -> encode_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %126 = load i32* @nbl, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %126 = load i32* @nbl, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %126 = load i32* @nbl, align... (idx: 0)        7                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %126 = load i32* @nbl, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %126 = load i32* @nbl, align... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %ril.0.i = load i32* %ril.0.... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %ril.0.i = load i32* %ril.0.... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %ril.0.i = load i32* %ril.0.... (idx: 0)        17                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %ril.0.i = load i32* %ril.0.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %ril.0.i = load i32* %ril.0.... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %123 = load i32* %122, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %123 = load i32* %122, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %130 = load i32* %129, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %130 = load i32* %129, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %123 = load i32* %122, align... (idx: 0)        17                            16                            
  %130 = load i32* %129, align... (idx: 1)        17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %123 = load i32* %122, align... (idx: 0)        1                             0                             
  %130 = load i32* %129, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %123 = load i32* %122, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 13)
  %130 = load i32* %129, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %ril.0.i, i32* @il... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %ril.0.i, i32* @il... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %ril.0.i, i32* @il... (idx: 0)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %ril.0.i, i32* @il... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %ril.0.i, i32* @il... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %138 = load i32* %137, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %138 = load i32* %137, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %138 = load i32* %137, align... (idx: 0)        18                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %138 = load i32* %137, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %138 = load i32* %137, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i13, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i13, i32* @nbl... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i13, i32* @nbl... (idx: 0)        19                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i13, i32* @nbl... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i13, i32* @nbl... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %141, i32* @detl, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %141, i32* @detl, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %141, i32* @detl, ... (idx: 0)        19                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %141, i32* @detl, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %141, i32* @detl, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %143 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %143 = load i32* @plt1, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %144 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %144 = load i32* @plt2, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %143 = load i32* @plt1, alig... (idx: 0)        10                            9                             
  %144 = load i32* @plt2, alig... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %143 = load i32* @plt1, alig... (idx: 0)        1                             0                             
  %144 = load i32* @plt2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load i32* @plt1, alig... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %144 = load i32* @plt2, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: xh_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %201 = load i32* @xh, align ... can share an output register with another operation already assigned to encode_xh_local_mem_dual_port_0
                                                  encode_xh_local_mem_dual_port_0
  %201 = load i32* @xh, align ... (idx: 0)        -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_xh_local_mem_dual_port_0
  %201 = load i32* @xh, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %201 = load i32* @xh, align ... (idx: 0) -> encode_xh_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %169 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %169 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %170 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %170 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %169 = load i32* getelementp... (idx: 0)        10                            9                             
  %170 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %169 = load i32* getelementp... (idx: 0)        1                             0                             
  %170 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %169 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %170 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %172 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %172 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %173 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %173 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %172 = load i32* getelementp... (idx: 0)        10                            9                             
  %173 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %172 = load i32* getelementp... (idx: 0)        1                             0                             
  %173 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %173 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %176 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %176 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %177 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %177 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %176 = load i32* getelementp... (idx: 0)        10                            9                             
  %177 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %176 = load i32* getelementp... (idx: 0)        1                             0                             
  %177 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %176 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %177 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %180 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %180 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %181 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %181 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %180 = load i32* getelementp... (idx: 0)        10                            9                             
  %181 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %180 = load i32* getelementp... (idx: 0)        1                             0                             
  %181 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %180 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %181 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %184 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %184 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %185 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %185 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %184 = load i32* getelementp... (idx: 0)        10                            9                             
  %185 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %184 = load i32* getelementp... (idx: 0)        1                             0                             
  %185 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %184 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %185 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %188 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %188 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %189 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %189 = load i32* getelementp... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %188 = load i32* getelementp... (idx: 0)        10                            9                             
  %189 = load i32* getelementp... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %188 = load i32* getelementp... (idx: 0)        1                             0                             
  %189 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = load i32* getelementp... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %189 = load i32* getelementp... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %193 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %193 = load i32* @rh1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %194 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %194 = load i32* @ah1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %193 = load i32* @rh1, align... (idx: 0)        10                            9                             
  %194 = load i32* @ah1, align... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %193 = load i32* @rh1, align... (idx: 0)        1                             0                             
  %194 = load i32* @ah1, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %193 = load i32* @rh1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %194 = load i32* @ah1, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %195 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %195 = load i32* @rh2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %196 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %196 = load i32* @ah2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %195 = load i32* @rh2, align... (idx: 0)        10                            9                             
  %196 = load i32* @ah2, align... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %195 = load i32* @rh2, align... (idx: 0)        1                             0                             
  %196 = load i32* @ah2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %195 = load i32* @rh2, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 15)
  %196 = load i32* @ah2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i11, i32* @al2... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i11, i32* @al2... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %206 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %206 = load i32* @deth, alig... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i11, i32* @al2... (idx: 0)        20                            19                            
  %206 = load i32* @deth, alig... (idx: 1)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i11, i32* @al2... (idx: 0)        1                             0                             
  %206 = load i32* @deth, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i11, i32* @al2... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 16)
  %206 = load i32* @deth, alig... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i7, i32* @... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i7, i32* @... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %99, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %99, i32* @rlt2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i7, i32* @... (idx: 0)        21                            19                            
  store i32 %99, i32* @rlt2, a... (idx: 1)        21                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i7, i32* @... (idx: 0)        1                             0                             
  store i32 %99, i32* @rlt2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i7, i32* @... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 17)
  store i32 %99, i32* @rlt2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %168, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %168, i32* @rlt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %143, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %143, i32* @plt2, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %168, i32* @rlt1, ... (idx: 0)        22                            20                            
  store i32 %143, i32* @plt2, ... (idx: 1)        22                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %168, i32* @rlt1, ... (idx: 0)        1                             0                             
  store i32 %143, i32* @plt2, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %168, i32* @rlt1, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 18)
  store i32 %143, i32* @plt2, ... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_encode_BB_quantlexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %142, i32* @plt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %142, i32* @plt1, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %205, i32* @ih, al... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %205, i32* @ih, al... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %142, i32* @plt1, ... (idx: 0)        23                            21                            
  store i32 %205, i32* @ih, al... (idx: 1)        23                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %142, i32* @plt1, ... (idx: 0)        1                             0                             
  store i32 %205, i32* @ih, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %142, i32* @plt1, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  store i32 %205, i32* @ih, al... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_encode_BB__212
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %213, i32* @ih, al... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %213, i32* @ih, al... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %213, i32* @ih, al... (idx: 0)        24                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %213, i32* @ih, al... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %213, i32* @ih, al... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %220 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %220 = load i32* @nbh, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %224 = load i32* %223, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %224 = load i32* %223, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %220 = load i32* @nbh, align... (idx: 0)        14                            13                            
  %224 = load i32* %223, align... (idx: 1)        24                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %220 = load i32* @nbh, align... (idx: 0)        1                             0                             
  %224 = load i32* %223, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = load i32* @nbh, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 19)
  %224 = load i32* %223, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %217 = load i32* %216, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %217 = load i32* %216, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %217 = load i32* %216, align... (idx: 0)        24                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %217 = load i32* %216, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %217 = load i32* %216, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i2, i32* @nbh,... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i2, i32* @nbh,... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i2, i32* @nbh,... (idx: 0)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i2, i32* @nbh,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i2, i32* @nbh,... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %232 = load i32* %231, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %232 = load i32* %231, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %232 = load i32* %231, align... (idx: 0)        25                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %232 = load i32* %231, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %232 = load i32* %231, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %235, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %235, i32* @deth, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %235, i32* @deth, ... (idx: 0)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %235, i32* @deth, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %235, i32* @deth, ... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %237 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %237 = load i32* @ph1, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
  %238 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %238 = load i32* @ph2, align... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %237 = load i32* @ph1, align... (idx: 0)        16                            16                            
  %238 = load i32* @ph2, align... (idx: 1)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %237 = load i32* @ph1, align... (idx: 0)        1                             0                             
  %238 = load i32* @ph2, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %237 = load i32* @ph1, align... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 21)
  %238 = load i32* @ph2, align... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %263 = load i32* @il, align ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  %263 = load i32* @il, align ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %263 = load i32* @il, align ... (idx: 0)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  %263 = load i32* @il, align ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %263 = load i32* @il, align ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %...i, i32* @ah2, ... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %...i, i32* @ah2, ... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i, i32* @ah2, ... (idx: 0)        26                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %...i, i32* @ah2, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %...i, i32* @ah2, ... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %apl1.2.i, i32* @a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %193, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %193, i32* @rh2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        27                            26                            
  store i32 %193, i32* @rh2, a... (idx: 1)        27                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %apl1.2.i, i32* @a... (idx: 0)        1                             0                             
  store i32 %193, i32* @rh2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %apl1.2.i, i32* @a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 23)
  store i32 %193, i32* @rh2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %262, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %262, i32* @rh1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
  store i32 %237, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %237, i32* @ph2, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %262, i32* @rh1, a... (idx: 0)        28                            27                            
  store i32 %237, i32* @ph2, a... (idx: 1)        28                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %262, i32* @rh1, a... (idx: 0)        1                             0                             
  store i32 %237, i32* @ph2, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %262, i32* @rh1, a... (idx: 0) -> encode_mem_dual_port_0 (mux inputs: 24)
  store i32 %237, i32* @ph2, a... (idx: 1) -> encode_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_encode_BB__214
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %236, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_0
  store i32 %236, i32* @ph1, a... can share an output register with another operation already assigned to encode_mem_dual_port_1
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %236, i32* @ph1, a... (idx: 0)        29                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  encode_mem_dual_port_0        encode_mem_dual_port_1        
  store i32 %236, i32* @ph1, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %236, i32* @ph1, a... (idx: 0) -> encode_mem_dual_port_1 (mux inputs: 24)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        0                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 32, i32* @detl, al... (idx: 0)        1                             0                             
  store i32 8, i32* @deth, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 32, i32* @detl, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 8, i32* @deth, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rlt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rlt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rlt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @rlt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rlt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rlt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt2, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @plt1, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        -5                            -5                            
  store i32 0, i32* @plt1, ali... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @plt2, ali... (idx: 0)        1                             0                             
  store i32 0, i32* @plt1, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @plt2, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @plt1, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @al1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @al1, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @al2, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @al1, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @al2, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @al1, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbl, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @rh2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @nbl, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @rh2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @nbl, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @rh2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @rh1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ph2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @rh1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ph2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @rh1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ph2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ph1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah2, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @ah2, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ph1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @ah2, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ph1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @ah2, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ah1, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @nbh, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        -5                            -5                            
  store i32 0, i32* @nbh, alig... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ah1, alig... (idx: 0)        1                             0                             
  store i32 0, i32* @nbh, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ah1, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* @nbh, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        -5                            -5                            
  store i32 0, i32* getelement... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %s.i.0, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* %s.i.0, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %s.i.0, al... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %s.i.0, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %s.i.0, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %34 = load i32* %scevgep34, ... (idx: 0)        10                            10                            
  %35 = load i32* %scevgep33, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %34 = load i32* %scevgep34, ... (idx: 0)        1                             0                             
  %35 = load i32* %scevgep33, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load i32* %scevgep34, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %35 = load i32* %scevgep33, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %37 = load i32* %scevgep31, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %37 = load i32* %scevgep31, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %38 = load i32* %scevgep30, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %38 = load i32* %scevgep30, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %37 = load i32* %scevgep31, ... (idx: 0)        6                             6                             
  %38 = load i32* %scevgep30, ... (idx: 1)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %37 = load i32* %scevgep31, ... (idx: 0)        1                             0                             
  %38 = load i32* %scevgep30, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = load i32* %scevgep31, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 2)
  %38 = load i32* %scevgep30, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %40 = load i32* %scevgep28, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %40 = load i32* %scevgep28, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %41 = load i32* %scevgep27, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %41 = load i32* %scevgep27, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %40 = load i32* %scevgep28, ... (idx: 0)        7                             7                             
  %41 = load i32* %scevgep27, ... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %40 = load i32* %scevgep28, ... (idx: 0)        1                             0                             
  %41 = load i32* %scevgep27, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %40 = load i32* %scevgep28, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 3)
  %41 = load i32* %scevgep27, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %43 = load i32* %scevgep25, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %43 = load i32* %scevgep25, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %44 = load i32* %scevgep24, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %44 = load i32* %scevgep24, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %43 = load i32* %scevgep25, ... (idx: 0)        8                             8                             
  %44 = load i32* %scevgep24, ... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %43 = load i32* %scevgep25, ... (idx: 0)        1                             0                             
  %44 = load i32* %scevgep24, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = load i32* %scevgep25, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 4)
  %44 = load i32* %scevgep24, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %46 = load i32* %scevgep22, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %46 = load i32* %scevgep22, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %47 = load i32* %scevgep21, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %47 = load i32* %scevgep21, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %46 = load i32* %scevgep22, ... (idx: 0)        9                             9                             
  %47 = load i32* %scevgep21, ... (idx: 1)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %46 = load i32* %scevgep22, ... (idx: 0)        1                             0                             
  %47 = load i32* %scevgep21, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %46 = load i32* %scevgep22, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 5)
  %47 = load i32* %scevgep21, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %49 = load i32* %scevgep19, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %49 = load i32* %scevgep19, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %50 = load i32* %scevgep18, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %50 = load i32* %scevgep18, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %49 = load i32* %scevgep19, ... (idx: 0)        10                            10                            
  %50 = load i32* %scevgep18, ... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %49 = load i32* %scevgep19, ... (idx: 0)        1                             0                             
  %50 = load i32* %scevgep18, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = load i32* %scevgep19, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 6)
  %50 = load i32* %scevgep18, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* %scevgep16, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %52 = load i32* %scevgep16, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %53 = load i32* %scevgep15, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %53 = load i32* %scevgep15, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %52 = load i32* %scevgep16, ... (idx: 0)        11                            11                            
  %53 = load i32* %scevgep15, ... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %52 = load i32* %scevgep16, ... (idx: 0)        1                             0                             
  %53 = load i32* %scevgep15, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* %scevgep16, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 7)
  %53 = load i32* %scevgep15, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_legup_memset_4_i64exit
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %55 = load i32* %scevgep13, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %55 = load i32* %scevgep13, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
  %56 = load i32* %scevgep12, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_0
  %56 = load i32* %scevgep12, ... can share an output register with another operation already assigned to main_test_data_local_mem_dual_port_1
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %55 = load i32* %scevgep13, ... (idx: 0)        12                            12                            
  %56 = load i32* %scevgep12, ... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %55 = load i32* %scevgep13, ... (idx: 0)        1                             0                             
  %56 = load i32* %scevgep12, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = load i32* %scevgep13, ... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 8)
  %56 = load i32* %scevgep12, ... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %64 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %64 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %65 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %65 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %64 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %65 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %64 = load i32* getelementpt... (idx: 0)        1                             0                             
  %65 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %64 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %65 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %60 = sdiv i32 %i.03.i, 2 (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %60 = sdiv i32 %i.03.i, 2 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %60 = sdiv i32 %i.03.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %67 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %67 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %68 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %68 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %67 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %68 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %67 = load i32* getelementpt... (idx: 0)        1                             0                             
  %68 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %67 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %68 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %71 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %71 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %72 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %72 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load i32* getelementpt... (idx: 0)        1                             0                             
  %72 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %72 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %75 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %75 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %76 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %76 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %75 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %76 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %75 = load i32* getelementpt... (idx: 0)        1                             0                             
  %76 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %75 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %76 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %79 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %79 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %80 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %80 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %80 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %79 = load i32* getelementpt... (idx: 0)        1                             0                             
  %80 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %79 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %80 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %84 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load i32* getelementpt... (idx: 0)        -4                            -5                            
  %84 = load i32* getelementpt... (idx: 1)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %83 = load i32* getelementpt... (idx: 0)        1                             0                             
  %84 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %84 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %98 = load i32* @il, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %98 = load i32* @il, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* @il, align 4... (idx: 0)        -4                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* @il, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = load i32* @il, align 4... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__58
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %100 = load i32* %99, align ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %100 = load i32* %99, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %100 = load i32* %99, align ... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %95 = load i32* %94, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %95 = load i32* %94, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %107 = load i32* %106, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %107 = load i32* %106, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %95 = load i32* %94, align 4... (idx: 0)        6                             5                             
  %107 = load i32* %106, align... (idx: 1)        6                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %95 = load i32* %94, align 4... (idx: 0)        1                             0                             
  %107 = load i32* %106, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %95 = load i32* %94, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
  %107 = load i32* %106, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %63, i32* @ih, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %63, i32* @ih, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %63, i32* @ih, ali... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %63, i32* @ih, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %63, i32* @ih, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %115 = load i32* %114, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %115 = load i32* %114, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %115 = load i32* %114, align... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %115 = load i32* %114, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %115 = load i32* %114, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %172 = load i32* @ih, align ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %172 = load i32* @ih, align ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %172 = load i32* @ih, align ... (idx: 0)        -2                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %172 = load i32* @ih, align ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = load i32* @ih, align ... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %144 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* getelementp... (idx: 0)        -2                            -3                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %147 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %147 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %180 = load i32* %179, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %180 = load i32* %179, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load i32* getelementp... (idx: 0)        -2                            -3                            
  %180 = load i32* %179, align... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %147 = load i32* getelementp... (idx: 0)        1                             0                             
  %180 = load i32* %179, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %147 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %180 = load i32* %179, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %145 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %145 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %151 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %151 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load i32* getelementp... (idx: 0)        -2                            -2                            
  %151 = load i32* getelementp... (idx: 1)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load i32* getelementp... (idx: 0)        1                             0                             
  %151 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %151 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %148 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %148 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %155 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %155 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* getelementp... (idx: 0)        -2                            -2                            
  %155 = load i32* getelementp... (idx: 1)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* getelementp... (idx: 0)        1                             0                             
  %155 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %148 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %155 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %152 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %152 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %159 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %159 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %152 = load i32* getelementp... (idx: 0)        -2                            -2                            
  %159 = load i32* getelementp... (idx: 1)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %152 = load i32* getelementp... (idx: 0)        1                             0                             
  %159 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %152 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %159 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %156 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %156 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %163 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %163 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %156 = load i32* getelementp... (idx: 0)        -2                            -2                            
  %163 = load i32* getelementp... (idx: 1)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %156 = load i32* getelementp... (idx: 0)        1                             0                             
  %163 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %156 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %163 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %160 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %160 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %174 = load i32* %173, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %174 = load i32* %173, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %160 = load i32* getelementp... (idx: 0)        -2                            -2                            
  %174 = load i32* %173, align... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %160 = load i32* getelementp... (idx: 0)        1                             0                             
  %174 = load i32* %173, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %160 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %174 = load i32* %173, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* getelementp... (idx: 0)        -2                            -1                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__58
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %188 = load i32* %187, align... (idx: 0)        8                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %188 = load i32* %187, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = load i32* %187, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__58
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %265, i32* %scevge... (idx: 0)        20                            20                            
  store i32 %266, i32* %scevge... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  store i32 %265, i32* %scevge... (idx: 0)        1                             0                             
  store i32 %266, i32* %scevge... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %265, i32* %scevge... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %266, i32* %scevge... (idx: 1) -> main_result_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %272 = load i32* %scevgep2, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_0
  %272 = load i32* %scevgep2, ... can share an output register with another operation already assigned to main_result_local_mem_dual_port_1
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %272 = load i32* %scevgep2, ... (idx: 0)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0main_result_local_mem_dual_port_1
  %272 = load i32* %scevgep2, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %272 = load i32* %scevgep2, ... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %273 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %273 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %273 = load i32* %scevgep, a... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)


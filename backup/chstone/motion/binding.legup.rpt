//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Apr 22 15:57:45 2017
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: Get_motion_code
--------------------------------------------------------------------------------
Function unit type:           Number Required               
MVtab0_local_mem_dual_port    1                             
MVtab1_local_mem_dual_port    1                             
MVtab2_local_mem_dual_port    1                             
mem_dual_port                 2                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
inPMV_local_mem_dual_port     1                             
inmvfs_local_mem_dual_port    1                             
main_0_PMV_local_mem_dual_port2                             
main_0_motion_vertical_field_select_local_mem_dual_port2                             
mem_dual_port                 2                             
outPMV_local_mem_dual_port    1                             
outmvfs_local_mem_dual_port   1                             

Running Bipartite Weighted Matching on function: Get_motion_code
State: LEGUP_F_Get_motion_code_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %1 = load i32* @ld_Bfr, alig... (idx: 0)        0                             0                             
  %3 = load i32* @ld_Incnt, al... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %1 = load i32* @ld_Bfr, alig... (idx: 0)        1                             0                             
  %3 = load i32* @ld_Incnt, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* @ld_Bfr, alig... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 0)
  %3 = load i32* @ld_Incnt, al... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_Get_motion_code_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %2, i32* @ld_Bfr, ... (idx: 0)        10                            10                            
  store i32 %4, i32* @ld_Incnt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %2, i32* @ld_Bfr, ... (idx: 0)        1                             0                             
  store i32 %4, i32* @ld_Incnt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %2, i32* @ld_Bfr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 1)
  store i32 %4, i32* @ld_Incnt... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_Get_motion_code_BB__6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %7 = load i8** @ld_Rdptr, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %7 = load i8** @ld_Rdptr, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %7 = load i8** @ld_Rdptr, al... (idx: 0)        -4                            -4                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %7 = load i8** @ld_Rdptr, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load i8** @ld_Rdptr, al... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_Get_motion_code_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i8* %scevgep68, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %22 = load i8* %scevgep68, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %22 = load i8* %scevgep68, a... (idx: 0)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %22 = load i8* %scevgep68, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i8* %scevgep68, a... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_Get_motion_code_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %34 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %34 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %34 = load i8* %p2.0.i.i.i.i... (idx: 0)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %34 = load i8* %p2.0.i.i.i.i... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %34 = load i8* %p2.0.i.i.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_Get_motion_code_BB__33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %34, i8* %p1.0.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %34, i8* %p1.0.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %34, i8* %p1.0.i.i.... (idx: 0)        17                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %34, i8* %p1.0.i.i.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %34, i8* %p1.0.i.i.... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load i8* %.pr9.i, alig... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %36 = load i8* %.pr9.i, alig... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %36 = load i8* %.pr9.i, alig... (idx: 0)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %36 = load i8* %.pr9.i, alig... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i8* %.pr9.i, alig... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_Get_motion_code_BB_loopexit3i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i, i8... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge1.i, i8... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge.i, i32... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge.i, i32... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i, i8... (idx: 0)        9                             8                             
  store i32 %storemerge.i, i32... (idx: 1)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i, i8... (idx: 0)        1                             0                             
  store i32 %storemerge.i, i32... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i, i8... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 5)
  store i32 %storemerge.i, i32... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_Get_motion_code_BB_loopexit3i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i.i, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i, i32*... (idx: 0)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i, i32*... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i, i32*... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_Get_motion_code_BB__48
Binding functional unit type: MVtab0_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  Get_motion_code_MVtab0_local_mem_dual_port_0
  %51 = load i8* %50, align 1 (idx: 0)            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab0_local_mem_dual_port_0
  %51 = load i8* %50, align 1 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %51 = load i8* %50, align 1 (idx: 0) -> Get_motion_code_MVtab0_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_Get_motion_code_BB__48
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %53, i32* @ld_Bfr,... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %53, i32* @ld_Bfr,... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %54, i32* @ld_Incn... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %54, i32* @ld_Incn... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %53, i32* @ld_Bfr,... (idx: 0)        10                            10                            
  store i32 %54, i32* @ld_Incn... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %53, i32* @ld_Bfr,... (idx: 0)        1                             0                             
  store i32 %54, i32* @ld_Incn... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %53, i32* @ld_Bfr,... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 6)
  store i32 %54, i32* @ld_Incn... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_Get_motion_code_BB__56
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %57 = load i8** @ld_Rdptr, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %57 = load i8** @ld_Rdptr, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %57 = load i8** @ld_Rdptr, a... (idx: 0)        1                             1                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %57 = load i8** @ld_Rdptr, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %57 = load i8** @ld_Rdptr, a... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_Get_motion_code_BB__74
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %80 = load i8* %scevgep19, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %80 = load i8* %scevgep19, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %80 = load i8* %scevgep19, a... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %80 = load i8* %scevgep19, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = load i8* %scevgep19, a... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_Get_motion_code_BB__91
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i8* %p2.0.i.i.i, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %92 = load i8* %p2.0.i.i.i, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %92 = load i8* %p2.0.i.i.i, ... (idx: 0)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %92 = load i8* %p2.0.i.i.i, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i8* %p2.0.i.i.i, ... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_Get_motion_code_BB__91
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %92, i8* %p1.0.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %92, i8* %p1.0.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %92, i8* %p1.0.i.i.... (idx: 0)        22                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %92, i8* %p1.0.i.i.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %92, i8* %p1.0.i.i.... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %94 = load i8* %.pr43, align... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %94 = load i8* %.pr43, align... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %94 = load i8* %.pr43, align... (idx: 0)        14                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %94 = load i8* %.pr43, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = load i8* %.pr43, align... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_Get_motion_code_BB__100
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge5, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge5, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge4, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge4, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge5, i8**... (idx: 0)        14                            13                            
  store i32 %storemerge4, i32*... (idx: 1)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge5, i8**... (idx: 0)        1                             0                             
  store i32 %storemerge4, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge5, i8**... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 10)
  store i32 %storemerge4, i32*... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_Get_motion_code_BB__100
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i, i32* @... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i, i32* @... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i, i32* @... (idx: 0)        15                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i, i32* @... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i, i32* @... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_Get_motion_code_BB_Flush_Bufferexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %103, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %103, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %104, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %104, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %103, i32* @ld_Bfr... (idx: 0)        15                            15                            
  store i32 %104, i32* @ld_Inc... (idx: 1)        15                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %103, i32* @ld_Bfr... (idx: 0)        1                             0                             
  store i32 %104, i32* @ld_Inc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %103, i32* @ld_Bfr... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 11)
  store i32 %104, i32* @ld_Inc... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_Get_motion_code_BB__106
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %107 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %107 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %107 = load i8** @ld_Rdptr, ... (idx: 0)        6                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %107 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = load i8** @ld_Rdptr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_Get_motion_code_BB_preheaderi43
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %122 = load i8* %scevgep9, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %122 = load i8* %scevgep9, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %122 = load i8* %scevgep9, a... (idx: 0)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %122 = load i8* %scevgep9, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %122 = load i8* %scevgep9, a... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_Get_motion_code_BB__133
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %134 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %134 = load i8* %p2.0.i.i.i.... (idx: 0)        17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %134 = load i8* %p2.0.i.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = load i8* %p2.0.i.i.i.... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_Get_motion_code_BB__133
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %134, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %134, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %134, i8* %p1.0.i.i... (idx: 0)        27                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %134, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %134, i8* %p1.0.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexitii52
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %136 = load i8* %.pr9.i51, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %136 = load i8* %.pr9.i51, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %136 = load i8* %.pr9.i51, a... (idx: 0)        19                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %136 = load i8* %.pr9.i51, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %136 = load i8* %.pr9.i51, a... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_Get_motion_code_BB_loopexit3i55
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i56, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge1.i56, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge.i57, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge.i57, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i56, ... (idx: 0)        19                            18                            
  store i32 %storemerge.i57, i... (idx: 1)        19                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i56, ... (idx: 0)        1                             0                             
  store i32 %storemerge.i57, i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i56, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 15)
  store i32 %storemerge.i57, i... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_Get_motion_code_BB_loopexit3i55
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i58, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i.i58, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i58, i3... (idx: 0)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i58, i3... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i58, i3... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_Get_motion_code_BB_Get_Bitsexit59
Binding functional unit type: MVtab0_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i8* %143, align ... can share an output register with another operation already assigned to Get_motion_code_MVtab0_local_mem_dual_port_0
                                                  Get_motion_code_MVtab0_local_mem_dual_port_0
  %144 = load i8* %143, align ... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab0_local_mem_dual_port_0
  %144 = load i8* %143, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i8* %143, align ... (idx: 0) -> Get_motion_code_MVtab0_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_Get_motion_code_BB__149
Binding functional unit type: MVtab1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  Get_motion_code_MVtab1_local_mem_dual_port_0
  %152 = load i8* %151, align ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab1_local_mem_dual_port_0
  %152 = load i8* %151, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %152 = load i8* %151, align ... (idx: 0) -> Get_motion_code_MVtab1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_Get_motion_code_BB__149
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %154, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %154, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %155, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %155, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %154, i32* @ld_Bfr... (idx: 0)        20                            20                            
  store i32 %155, i32* @ld_Inc... (idx: 1)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %154, i32* @ld_Bfr... (idx: 0)        1                             0                             
  store i32 %155, i32* @ld_Inc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %154, i32* @ld_Bfr... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 16)
  store i32 %155, i32* @ld_Inc... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_Get_motion_code_BB__157
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %158 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %158 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %158 = load i8** @ld_Rdptr, ... (idx: 0)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %158 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %158 = load i8** @ld_Rdptr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_Get_motion_code_BB__175
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %181 = load i8* %scevgep38, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %181 = load i8* %scevgep38, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %181 = load i8* %scevgep38, ... (idx: 0)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %181 = load i8* %scevgep38, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %181 = load i8* %scevgep38, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_Get_motion_code_BB__192
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %193 = load i8* %p2.0.i.i.i1... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %193 = load i8* %p2.0.i.i.i1... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %193 = load i8* %p2.0.i.i.i1... (idx: 0)        22                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %193 = load i8* %p2.0.i.i.i1... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %193 = load i8* %p2.0.i.i.i1... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_Get_motion_code_BB__192
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %193, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %193, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %193, i8* %p1.0.i.i... (idx: 0)        32                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %193, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %193, i8* %p1.0.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexiti14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %195 = load i8* %.pr1853, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %195 = load i8* %.pr1853, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %195 = load i8* %.pr1853, al... (idx: 0)        24                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %195 = load i8* %.pr1853, al... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %195 = load i8* %.pr1853, al... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_Get_motion_code_BB__201
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge3, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge3, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge2, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge2, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge3, i8**... (idx: 0)        24                            23                            
  store i32 %storemerge2, i32*... (idx: 1)        24                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge3, i8**... (idx: 0)        1                             0                             
  store i32 %storemerge2, i32*... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge3, i8**... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 20)
  store i32 %storemerge2, i32*... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_Get_motion_code_BB__201
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i15, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i15, i32*... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i15, i32*... (idx: 0)        25                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i15, i32*... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i15, i32*... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_Get_motion_code_BB_Flush_Bufferexit16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %204, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %204, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %205, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %205, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %204, i32* @ld_Bfr... (idx: 0)        25                            25                            
  store i32 %205, i32* @ld_Inc... (idx: 1)        25                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %204, i32* @ld_Bfr... (idx: 0)        1                             0                             
  store i32 %205, i32* @ld_Inc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %204, i32* @ld_Bfr... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 21)
  store i32 %205, i32* @ld_Inc... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_Get_motion_code_BB__207
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %208 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %208 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %208 = load i8** @ld_Rdptr, ... (idx: 0)        16                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %208 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %208 = load i8** @ld_Rdptr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_Get_motion_code_BB_preheaderi25
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %223 = load i8* %scevgep29, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %223 = load i8* %scevgep29, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %223 = load i8* %scevgep29, ... (idx: 0)        26                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %223 = load i8* %scevgep29, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = load i8* %scevgep29, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_Get_motion_code_BB__234
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %235 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %235 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %235 = load i8* %p2.0.i.i.i.... (idx: 0)        27                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %235 = load i8* %p2.0.i.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %235 = load i8* %p2.0.i.i.i.... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_Get_motion_code_BB__234
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %235, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %235, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %235, i8* %p1.0.i.i... (idx: 0)        37                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %235, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %235, i8* %p1.0.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 24)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexitii34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %237 = load i8* %.pr9.i33, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %237 = load i8* %.pr9.i33, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %237 = load i8* %.pr9.i33, a... (idx: 0)        29                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %237 = load i8* %.pr9.i33, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %237 = load i8* %.pr9.i33, a... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_Get_motion_code_BB_loopexit3i37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i38, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge1.i38, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge.i39, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge.i39, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i38, ... (idx: 0)        29                            28                            
  store i32 %storemerge.i39, i... (idx: 1)        29                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i38, ... (idx: 0)        1                             0                             
  store i32 %storemerge.i39, i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i38, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 25)
  store i32 %storemerge.i39, i... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_Get_motion_code_BB_loopexit3i37
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i40, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i.i40, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i40, i3... (idx: 0)        30                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i40, i3... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i40, i3... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_Get_motion_code_BB_Get_Bitsexit41
Binding functional unit type: MVtab1_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %245 = load i8* %244, align ... can share an output register with another operation already assigned to Get_motion_code_MVtab1_local_mem_dual_port_0
                                                  Get_motion_code_MVtab1_local_mem_dual_port_0
  %245 = load i8* %244, align ... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab1_local_mem_dual_port_0
  %245 = load i8* %244, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %245 = load i8* %244, align ... (idx: 0) -> Get_motion_code_MVtab1_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_Get_motion_code_BB__251
Binding functional unit type: MVtab2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  Get_motion_code_MVtab2_local_mem_dual_port_0
  %253 = load i8* %252, align ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab2_local_mem_dual_port_0
  %253 = load i8* %252, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %253 = load i8* %252, align ... (idx: 0) -> Get_motion_code_MVtab2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_Get_motion_code_BB__251
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %255, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %255, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %256, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %256, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %255, i32* @ld_Bfr... (idx: 0)        30                            30                            
  store i32 %256, i32* @ld_Inc... (idx: 1)        30                            30                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %255, i32* @ld_Bfr... (idx: 0)        1                             0                             
  store i32 %256, i32* @ld_Inc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %255, i32* @ld_Bfr... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 26)
  store i32 %256, i32* @ld_Inc... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_Get_motion_code_BB__258
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %259 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %259 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %259 = load i8** @ld_Rdptr, ... (idx: 0)        21                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %259 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %259 = load i8** @ld_Rdptr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 26)
State: LEGUP_F_Get_motion_code_BB__276
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %282 = load i8* %scevgep58, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %282 = load i8* %scevgep58, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %282 = load i8* %scevgep58, ... (idx: 0)        31                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %282 = load i8* %scevgep58, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %282 = load i8* %scevgep58, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 27)
State: LEGUP_F_Get_motion_code_BB__293
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %294 = load i8* %p2.0.i.i.i4... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %294 = load i8* %p2.0.i.i.i4... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %294 = load i8* %p2.0.i.i.i4... (idx: 0)        32                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %294 = load i8* %p2.0.i.i.i4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %294 = load i8* %p2.0.i.i.i4... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_Get_motion_code_BB__293
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %294, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %294, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %294, i8* %p1.0.i.i... (idx: 0)        42                            42                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %294, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %294, i8* %p1.0.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 29)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexiti6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %296 = load i8* %.pr2063, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %296 = load i8* %.pr2063, al... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %296 = load i8* %.pr2063, al... (idx: 0)        34                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %296 = load i8* %.pr2063, al... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %296 = load i8* %.pr2063, al... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_Get_motion_code_BB__302
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge1, i8**... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge, i32* ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge, i32* ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1, i8**... (idx: 0)        34                            33                            
  store i32 %storemerge, i32* ... (idx: 1)        34                            33                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1, i8**... (idx: 0)        1                             0                             
  store i32 %storemerge, i32* ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1, i8**... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 30)
  store i32 %storemerge, i32* ... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_Get_motion_code_BB__302
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i7, i32* ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i7, i32* ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i7, i32* ... (idx: 0)        35                            34                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i7, i32* ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i7, i32* ... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_Get_motion_code_BB_Flush_Bufferexit8
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %305, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %305, i32* @ld_Bfr... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %306, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %306, i32* @ld_Inc... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %305, i32* @ld_Bfr... (idx: 0)        35                            35                            
  store i32 %306, i32* @ld_Inc... (idx: 1)        35                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %305, i32* @ld_Bfr... (idx: 0)        1                             0                             
  store i32 %306, i32* @ld_Inc... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %305, i32* @ld_Bfr... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 31)
  store i32 %306, i32* @ld_Inc... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 31)
State: LEGUP_F_Get_motion_code_BB__308
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %309 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %309 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %309 = load i8** @ld_Rdptr, ... (idx: 0)        26                            26                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %309 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %309 = load i8** @ld_Rdptr, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 31)
State: LEGUP_F_Get_motion_code_BB_preheaderi7
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %324 = load i8* %scevgep48, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %324 = load i8* %scevgep48, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %324 = load i8* %scevgep48, ... (idx: 0)        36                            36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %324 = load i8* %scevgep48, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %324 = load i8* %scevgep48, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 32)
State: LEGUP_F_Get_motion_code_BB__335
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %336 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %336 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %336 = load i8* %p2.0.i.i.i.... (idx: 0)        37                            36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %336 = load i8* %p2.0.i.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %336 = load i8* %p2.0.i.i.i.... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 32)
State: LEGUP_F_Get_motion_code_BB__335
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %336, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8 %336, i8* %p1.0.i.i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %336, i8* %p1.0.i.i... (idx: 0)        47                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8 %336, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %336, i8* %p1.0.i.i... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 34)
State: LEGUP_F_Get_motion_code_BB_Fill_Bufferexitii16
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %338 = load i8* %.pr9.i15, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  %338 = load i8* %.pr9.i15, a... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %338 = load i8* %.pr9.i15, a... (idx: 0)        39                            37                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  %338 = load i8* %.pr9.i15, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %338 = load i8* %.pr9.i15, a... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 33)
State: LEGUP_F_Get_motion_code_BB_loopexit3i19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i20, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i8* %storemerge1.i20, ... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
  store i32 %storemerge.i21, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %storemerge.i21, i... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i20, ... (idx: 0)        39                            38                            
  store i32 %storemerge.i21, i... (idx: 1)        39                            38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i8* %storemerge1.i20, ... (idx: 0)        1                             0                             
  store i32 %storemerge.i21, i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i20, ... (idx: 0) -> Get_motion_code_mem_dual_port_0 (mux inputs: 35)
  store i32 %storemerge.i21, i... (idx: 1) -> Get_motion_code_mem_dual_port_1 (mux inputs: 34)
State: LEGUP_F_Get_motion_code_BB_loopexit3i19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i22, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_0
  store i32 %Incnt.2.i.i22, i3... can share an output register with another operation already assigned to Get_motion_code_mem_dual_port_1
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i22, i3... (idx: 0)        40                            39                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_mem_dual_port_0Get_motion_code_mem_dual_port_1
  store i32 %Incnt.2.i.i22, i3... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i22, i3... (idx: 0) -> Get_motion_code_mem_dual_port_1 (mux inputs: 35)
State: LEGUP_F_Get_motion_code_BB_Get_Bitsexit23
Binding functional unit type: MVtab2_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %346 = load i8* %345, align ... can share an output register with another operation already assigned to Get_motion_code_MVtab2_local_mem_dual_port_0
                                                  Get_motion_code_MVtab2_local_mem_dual_port_0
  %346 = load i8* %345, align ... (idx: 0)        6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  Get_motion_code_MVtab2_local_mem_dual_port_0
  %346 = load i8* %345, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %346 = load i8* %345, align ... (idx: 0) -> Get_motion_code_MVtab2_local_mem_dual_port_0 (mux inputs: 2)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__4
Binding functional unit type: inmvfs_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_inmvfs_local_mem_dual_port_0
  %5 = load i32* %scevgep49, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_inmvfs_local_mem_dual_port_0
  %5 = load i32* %scevgep49, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load i32* %scevgep49, a... (idx: 0) -> main_inmvfs_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__4
Binding functional unit type: main_0_motion_vertical_field_select_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  store i32 %5, i32* %scevgep4... (idx: 0)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  store i32 %5, i32* %scevgep4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %5, i32* %scevgep4... (idx: 0) -> main_main_0_motion_vertical_field_select_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__8
Binding functional unit type: inPMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_inPMV_local_mem_dual_port_0
  %9 = load i32* %scevgep44, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_inPMV_local_mem_dual_port_0
  %9 = load i32* %scevgep44, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %9 = load i32* %scevgep44, a... (idx: 0) -> main_inPMV_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__8
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %9, i32* %scevgep4... (idx: 0)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %9, i32* %scevgep4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %9, i32* %scevgep4... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* getelementptr inbo... (idx: 0)        0                             0                             
  store i32 68157440, i32* @ld... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* getelementptr inbo... (idx: 0)        1                             0                             
  store i32 68157440, i32* @ld... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* getelementptr inbo... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 68157440, i32* @ld... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* @ld_Incnt,... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 0, i32* @ld_Incnt,... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ld_Incnt,... (idx: 0)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* @ld_Incnt,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* @ld_Incnt,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_main_BB__20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %21 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to main_mem_dual_port_0
  %21 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load i8* %p2.0.i.i.i.i... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %21 = load i8* %p2.0.i.i.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %21 = load i8* %p2.0.i.i.i.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %21, i8* %p1.0.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8 %21, i8* %p1.0.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %21, i8* %p1.0.i.i.... (idx: 0)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %21, i8* %p1.0.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %21, i8* %p1.0.i.i.... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_Fill_Bufferexitii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %23 = load i8* %.pr11, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %23 = load i8* %.pr11, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load i8* %.pr11, align... (idx: 0)        6                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %23 = load i8* %.pr11, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i8* %.pr11, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_Get_Bitsexit
Binding functional unit type: main_0_motion_vertical_field_select_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %27, i32* %29, ali... can share an output register with another operation already assigned to main_main_0_motion_vertical_field_select_local_mem_dual_port_0
  store i32 %27, i32* %30, ali... can share an output register with another operation already assigned to main_main_0_motion_vertical_field_select_local_mem_dual_port_0
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  store i32 %27, i32* %29, ali... (idx: 0)        17                            20                            
  store i32 %27, i32* %30, ali... (idx: 1)        17                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  store i32 %27, i32* %29, ali... (idx: 0)        1                             0                             
  store i32 %27, i32* %30, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %27, i32* %29, ali... (idx: 0) -> main_main_0_motion_vertical_field_select_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %27, i32* %30, ali... (idx: 1) -> main_main_0_motion_vertical_field_select_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_Get_Bitsexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %22, i8** @ld_Rdpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8* %22, i8** @ld_Rdpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %28, i32* @ld_Bfr,... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %28, i32* @ld_Bfr,... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %22, i8** @ld_Rdpt... (idx: 0)        7                             7                             
  store i32 %28, i32* @ld_Bfr,... (idx: 1)        7                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %22, i8** @ld_Rdpt... (idx: 0)        1                             0                             
  store i32 %28, i32* @ld_Bfr,... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %22, i8** @ld_Rdpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  store i32 %28, i32* @ld_Bfr,... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_Get_Bitsexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 31, i32* @ld_Incnt... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 31, i32* @ld_Incnt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 31, i32* @ld_Incnt... (idx: 0)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 31, i32* @ld_Incnt... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 31, i32* @ld_Incnt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* @ld_Bfr, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  %35 = load i32* @ld_Bfr, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  %37 = load i32* @ld_Incnt, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load i32* @ld_Incnt, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %35 = load i32* @ld_Bfr, ali... (idx: 0)        -2                            -2                            
  %37 = load i32* @ld_Incnt, a... (idx: 1)        -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %35 = load i32* @ld_Bfr, ali... (idx: 0)        1                             0                             
  %37 = load i32* @ld_Incnt, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* @ld_Bfr, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %37 = load i32* @ld_Incnt, a... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__34
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %38, i32* @ld_Incn... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %38, i32* @ld_Incn... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %38, i32* @ld_Incn... (idx: 0)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %38, i32* @ld_Incn... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %38, i32* @ld_Incn... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__40
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %41 = load i8** @ld_Rdptr, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %41 = load i8** @ld_Rdptr, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load i8** @ld_Rdptr, a... (idx: 0)        -1                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load i8** @ld_Rdptr, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load i8** @ld_Rdptr, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi24
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %56 = load i8* %scevgep26, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %56 = load i8* %scevgep26, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %56 = load i8* %scevgep26, a... (idx: 0)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %56 = load i8* %scevgep26, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = load i8* %scevgep26, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__67
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %68 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to main_mem_dual_port_0
  %68 = load i8* %p2.0.i.i.i.i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load i8* %p2.0.i.i.i.i... (idx: 0)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load i8* %p2.0.i.i.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = load i8* %p2.0.i.i.i.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__67
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %68, i8* %p1.0.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8 %68, i8* %p1.0.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %68, i8* %p1.0.i.i.... (idx: 0)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %68, i8* %p1.0.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %68, i8* %p1.0.i.i.... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_Fill_Bufferexitii33
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %70 = load i8* %.pr9.i32, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  %70 = load i8* %.pr9.i32, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %70 = load i8* %.pr9.i32, al... (idx: 0)        10                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %70 = load i8* %.pr9.i32, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %70 = load i8* %.pr9.i32, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_loopexit3i36
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i37, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8* %storemerge1.i37, ... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %storemerge.i38, i... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %storemerge.i38, i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %storemerge1.i37, ... (idx: 0)        11                            11                            
  store i32 %storemerge.i38, i... (idx: 1)        11                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %storemerge1.i37, ... (idx: 0)        1                             0                             
  store i32 %storemerge.i38, i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i37, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  store i32 %storemerge.i38, i... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_loopexit3i36
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i39, i3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %Incnt.2.i.i39, i3... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %Incnt.2.i.i39, i3... (idx: 0)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %Incnt.2.i.i39, i3... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i39, i3... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_Get_Bitsexit40
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %76 = load i32* %31, align 4 can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %76 = load i32* %31, align 4 (idx: 0)           7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %76 = load i32* %31, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = load i32* %31, align 4 (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__86
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %87 = load i32* %31, align 4 can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  %87 = load i32* %31, align 4 can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %87 = load i32* %31, align 4 (idx: 0)           -2                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %87 = load i32* %31, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = load i32* %31, align 4 (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_decode_motion_vectorexitii
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %95, i32* %31, ali... can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %95, i32* %31, ali... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %95, i32* %31, ali... (idx: 0)        8                             20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %95, i32* %31, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %95, i32* %31, ali... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__98
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %99 = load i32* @ld_Bfr, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  %99 = load i32* @ld_Bfr, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  %101 = load i32* @ld_Incnt, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %101 = load i32* @ld_Incnt, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %99 = load i32* @ld_Bfr, ali... (idx: 0)        3                             2                             
  %101 = load i32* @ld_Incnt, ... (idx: 1)        3                             2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %99 = load i32* @ld_Bfr, ali... (idx: 0)        1                             0                             
  %101 = load i32* @ld_Incnt, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i32* @ld_Bfr, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %101 = load i32* @ld_Incnt, ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__98
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %102, i32* @ld_Inc... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %102, i32* @ld_Inc... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %102, i32* @ld_Inc... (idx: 0)        13                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %102, i32* @ld_Inc... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %102, i32* @ld_Inc... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__104
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %105 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %105 = load i8** @ld_Rdptr, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %105 = load i8** @ld_Rdptr, ... (idx: 0)        3                             3                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %105 = load i8** @ld_Rdptr, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %105 = load i8** @ld_Rdptr, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderi6
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %120 = load i8* %scevgep16, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %120 = load i8* %scevgep16, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i8* %scevgep16, ... (idx: 0)        13                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i8* %scevgep16, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = load i8* %scevgep16, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB__131
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %132 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_0
  %132 = load i8* %p2.0.i.i.i.... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load i8* %p2.0.i.i.i.... (idx: 0)        14                            13                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %132 = load i8* %p2.0.i.i.i.... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %132 = load i8* %p2.0.i.i.i.... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__131
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8 %132, i8* %p1.0.i.i... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8 %132, i8* %p1.0.i.i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %132, i8* %p1.0.i.i... (idx: 0)        24                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8 %132, i8* %p1.0.i.i... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %132, i8* %p1.0.i.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_Fill_Bufferexitii15
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load i8* %.pr9.i14, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %134 = load i8* %.pr9.i14, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i8* %.pr9.i14, a... (idx: 0)        16                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i8* %.pr9.i14, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = load i8* %.pr9.i14, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB_loopexit3i18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i8* %storemerge1.i19, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i8* %storemerge1.i19, ... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %storemerge.i20, i... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %storemerge.i20, i... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %storemerge1.i19, ... (idx: 0)        16                            15                            
  store i32 %storemerge.i20, i... (idx: 1)        16                            15                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i8* %storemerge1.i19, ... (idx: 0)        1                             0                             
  store i32 %storemerge.i20, i... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %storemerge1.i19, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  store i32 %storemerge.i20, i... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB_loopexit3i18
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Incnt.2.i.i21, i3... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %Incnt.2.i.i21, i3... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %Incnt.2.i.i21, i3... (idx: 0)        17                            16                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %Incnt.2.i.i21, i3... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Incnt.2.i.i21, i3... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_Get_Bitsexit22
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %141 = load i32* %140, align... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %141 = load i32* %140, align... (idx: 0)        9                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %141 = load i32* %140, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = load i32* %140, align... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_Get_Bitsexit22
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %142, i32* %140, a... can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %142, i32* %140, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %142, i32* %140, a... (idx: 0)        10                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %142, i32* %140, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %142, i32* %140, a... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__152
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %154 = load i32* %153, align... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %154 = load i32* %153, align... (idx: 0)        11                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %154 = load i32* %153, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %154 = load i32* %153, align... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__152
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %155, i32* %153, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %155, i32* %153, a... can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
  store i32 %155, i32* %153, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %155, i32* %153, a... (idx: 0)        21                            6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %155, i32* %153, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %155, i32* %153, a... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_motion_vectorsexit
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %164, i32* %163, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %164, i32* %163, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %164, i32* %163, a... (idx: 0)        21                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %164, i32* %163, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %164, i32* %163, a... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_motion_vectorsexit
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %95, i32* %165, al... can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %95, i32* %165, al... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %95, i32* %165, al... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
  store i32 %164, i32* %166, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  store i32 %164, i32* %166, a... can share an input with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
  store i32 %164, i32* %166, a... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %95, i32* %165, al... (idx: 0)        11                            19                            
  store i32 %164, i32* %166, a... (idx: 1)        21                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  store i32 %95, i32* %165, al... (idx: 0)        1                             0                             
  store i32 %164, i32* %166, a... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %95, i32* %165, al... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_0 (mux inputs: 7)
  store i32 %164, i32* %166, a... (idx: 1) -> main_main_0_PMV_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__170
Binding functional unit type: main_0_motion_vertical_field_select_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %171 = load i32* %scevgep10,... can share an output register with another operation already assigned to main_main_0_motion_vertical_field_select_local_mem_dual_port_0
  %171 = load i32* %scevgep10,... can share an output register with another operation already assigned to main_main_0_motion_vertical_field_select_local_mem_dual_port_1
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  %171 = load i32* %scevgep10,... (idx: 0)        9                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_motion_vertical_field_select_local_mem_dual_port_0main_main_0_motion_vertical_field_select_local_mem_dual_port_1
  %171 = load i32* %scevgep10,... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %171 = load i32* %scevgep10,... (idx: 0) -> main_main_0_motion_vertical_field_select_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__170
Binding functional unit type: outmvfs_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_outmvfs_local_mem_dual_port_0
  %172 = load i32* %scevgep9, ... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_outmvfs_local_mem_dual_port_0
  %172 = load i32* %scevgep9, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = load i32* %scevgep9, ... (idx: 0) -> main_outmvfs_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__178
Binding functional unit type: main_0_PMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %179 = load i32* %scevgep6, ... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_0
  %179 = load i32* %scevgep6, ... can share an output register with another operation already assigned to main_main_0_PMV_local_mem_dual_port_1
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %179 = load i32* %scevgep6, ... (idx: 0)        12                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_PMV_local_mem_dual_port_0main_main_0_PMV_local_mem_dual_port_1
  %179 = load i32* %scevgep6, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = load i32* %scevgep6, ... (idx: 0) -> main_main_0_PMV_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__178
Binding functional unit type: outPMV_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_outPMV_local_mem_dual_port_0
  %180 = load i32* %scevgep, a... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_outPMV_local_mem_dual_port_0
  %180 = load i32* %scevgep, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %180 = load i32* %scevgep, a... (idx: 0) -> main_outPMV_local_mem_dual_port_0 (mux inputs: 1)


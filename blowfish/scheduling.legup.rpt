//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Apr 23 08:40:59 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: BF_encrypt
state: LEGUP_0
   Transition: if (start): LEGUP_F_BF_encrypt_BB__0_1 default: LEGUP_0
state: LEGUP_F_BF_encrypt_BB__0_1
   %1 = load i32* %data, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %2 = getelementptr inbounds i32* %data, i32 1 (endState: LEGUP_F_BF_encrypt_BB__0_1)
   %4 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_2
state: LEGUP_F_BF_encrypt_BB__0_2
   %6 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %29 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_3
state: LEGUP_F_BF_encrypt_BB__0_3
   %5 = xor i32 %4, %1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %8 = lshr i32 %5, 24 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %11 = lshr i32 %5, 16 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %12 = and i32 %11, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %13 = or i32 %12, 256 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %17 = lshr i32 %5, 8 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %18 = and i32 %17, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %19 = or i32 %18, 512 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %23 = and i32 %5, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %24 = or i32 %23, 768 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %52 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_5)
   %75 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_5)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_4
state: LEGUP_F_BF_encrypt_BB__0_4
   %9 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %8 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %14 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %13 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %20 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %19 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %25 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %24 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %30 = xor i32 %29, %5 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %98 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_6)
   %121 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 6), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_6)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_5
state: LEGUP_F_BF_encrypt_BB__0_5
   %144 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 7), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_7)
   %167 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 8), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_7)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_6
state: LEGUP_F_BF_encrypt_BB__0_6
   %190 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 9), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_8)
   %213 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 10), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_8)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_7
state: LEGUP_F_BF_encrypt_BB__0_7
   %236 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 11), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_9)
   %259 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 12), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_9)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_8
state: LEGUP_F_BF_encrypt_BB__0_8
   %282 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 13), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_10)
   %305 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 14), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_10)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_9
state: LEGUP_F_BF_encrypt_BB__0_9
   %328 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 15), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_11)
   %351 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 16), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_11)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_10
state: LEGUP_F_BF_encrypt_BB__0_10
   %3 = load i32* %2, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   %374 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 17), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_11
state: LEGUP_F_BF_encrypt_BB__0_11
   %10 = load i32* %9, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   %15 = load i32* %14, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_12
state: LEGUP_F_BF_encrypt_BB__0_12
   %7 = xor i32 %6, %3 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   %21 = load i32* %20, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %26 = load i32* %25, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_13
state: LEGUP_F_BF_encrypt_BB__0_13
   %16 = add i32 %15, %10 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_14
state: LEGUP_F_BF_encrypt_BB__0_14
   %22 = xor i32 %16, %21 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %27 = add i32 %22, %26 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %28 = xor i32 %7, %27 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %31 = lshr i32 %28, 24 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %34 = lshr i32 %28, 16 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %35 = and i32 %34, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %36 = or i32 %35, 256 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %40 = lshr i32 %28, 8 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %41 = and i32 %40, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %42 = or i32 %41, 512 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %46 = and i32 %28, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %47 = or i32 %46, 768 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %53 = xor i32 %52, %28 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_15
state: LEGUP_F_BF_encrypt_BB__0_15
   %32 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %31 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %33 = load i32* %32, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   %37 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %36 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %38 = load i32* %37, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   %43 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %42 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %48 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %47 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_16
state: LEGUP_F_BF_encrypt_BB__0_16
   %44 = load i32* %43, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %49 = load i32* %48, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_17
state: LEGUP_F_BF_encrypt_BB__0_17
   %39 = add i32 %38, %33 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_18
state: LEGUP_F_BF_encrypt_BB__0_18
   %45 = xor i32 %39, %44 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %50 = add i32 %45, %49 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %51 = xor i32 %30, %50 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %54 = lshr i32 %51, 24 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %57 = lshr i32 %51, 16 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %58 = and i32 %57, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %59 = or i32 %58, 256 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %63 = lshr i32 %51, 8 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %64 = and i32 %63, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %65 = or i32 %64, 512 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %69 = and i32 %51, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %70 = or i32 %69, 768 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %76 = xor i32 %75, %51 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_19
state: LEGUP_F_BF_encrypt_BB__0_19
   %55 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %54 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %56 = load i32* %55, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   %60 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %59 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %61 = load i32* %60, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   %66 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %65 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %71 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %70 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_20
state: LEGUP_F_BF_encrypt_BB__0_20
   %67 = load i32* %66, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %72 = load i32* %71, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_21
state: LEGUP_F_BF_encrypt_BB__0_21
   %62 = add i32 %61, %56 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_22
state: LEGUP_F_BF_encrypt_BB__0_22
   %68 = xor i32 %62, %67 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %73 = add i32 %68, %72 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %74 = xor i32 %53, %73 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %77 = lshr i32 %74, 24 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %80 = lshr i32 %74, 16 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %81 = and i32 %80, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %82 = or i32 %81, 256 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %86 = lshr i32 %74, 8 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %87 = and i32 %86, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %88 = or i32 %87, 512 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %92 = and i32 %74, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %93 = or i32 %92, 768 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %99 = xor i32 %98, %74 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_23
state: LEGUP_F_BF_encrypt_BB__0_23
   %78 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %77 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %79 = load i32* %78, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   %83 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %82 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %84 = load i32* %83, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   %89 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %88 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %94 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %93 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_24
state: LEGUP_F_BF_encrypt_BB__0_24
   %90 = load i32* %89, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %95 = load i32* %94, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_25
state: LEGUP_F_BF_encrypt_BB__0_25
   %85 = add i32 %84, %79 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_26
state: LEGUP_F_BF_encrypt_BB__0_26
   %91 = xor i32 %85, %90 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %96 = add i32 %91, %95 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %97 = xor i32 %76, %96 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %100 = lshr i32 %97, 24 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %103 = lshr i32 %97, 16 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %104 = and i32 %103, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %105 = or i32 %104, 256 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %109 = lshr i32 %97, 8 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %110 = and i32 %109, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %111 = or i32 %110, 512 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %115 = and i32 %97, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %116 = or i32 %115, 768 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %122 = xor i32 %121, %97 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_27
state: LEGUP_F_BF_encrypt_BB__0_27
   %101 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %100 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %102 = load i32* %101, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   %106 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %105 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %107 = load i32* %106, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   %112 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %111 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %117 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %116 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_28
state: LEGUP_F_BF_encrypt_BB__0_28
   %113 = load i32* %112, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %118 = load i32* %117, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_29
state: LEGUP_F_BF_encrypt_BB__0_29
   %108 = add i32 %107, %102 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_30
state: LEGUP_F_BF_encrypt_BB__0_30
   %114 = xor i32 %108, %113 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %119 = add i32 %114, %118 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %120 = xor i32 %99, %119 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %123 = lshr i32 %120, 24 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %126 = lshr i32 %120, 16 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %127 = and i32 %126, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %128 = or i32 %127, 256 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %132 = lshr i32 %120, 8 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %133 = and i32 %132, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %134 = or i32 %133, 512 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %138 = and i32 %120, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %139 = or i32 %138, 768 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %145 = xor i32 %144, %120 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_31
state: LEGUP_F_BF_encrypt_BB__0_31
   %124 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %123 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %125 = load i32* %124, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   %129 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %128 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %130 = load i32* %129, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   %135 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %134 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %140 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %139 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_32
state: LEGUP_F_BF_encrypt_BB__0_32
   %136 = load i32* %135, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %141 = load i32* %140, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_33
state: LEGUP_F_BF_encrypt_BB__0_33
   %131 = add i32 %130, %125 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_34
state: LEGUP_F_BF_encrypt_BB__0_34
   %137 = xor i32 %131, %136 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %142 = add i32 %137, %141 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %143 = xor i32 %122, %142 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %146 = lshr i32 %143, 24 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %149 = lshr i32 %143, 16 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %150 = and i32 %149, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %151 = or i32 %150, 256 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %155 = lshr i32 %143, 8 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %156 = and i32 %155, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %157 = or i32 %156, 512 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %161 = and i32 %143, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %162 = or i32 %161, 768 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %168 = xor i32 %167, %143 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_35
state: LEGUP_F_BF_encrypt_BB__0_35
   %147 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %146 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %148 = load i32* %147, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   %152 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %151 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %153 = load i32* %152, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   %158 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %157 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %163 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %162 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_36
state: LEGUP_F_BF_encrypt_BB__0_36
   %159 = load i32* %158, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %164 = load i32* %163, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_37
state: LEGUP_F_BF_encrypt_BB__0_37
   %154 = add i32 %153, %148 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_38
state: LEGUP_F_BF_encrypt_BB__0_38
   %160 = xor i32 %154, %159 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %165 = add i32 %160, %164 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %166 = xor i32 %145, %165 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %169 = lshr i32 %166, 24 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %172 = lshr i32 %166, 16 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %173 = and i32 %172, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %174 = or i32 %173, 256 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %178 = lshr i32 %166, 8 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %179 = and i32 %178, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %180 = or i32 %179, 512 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %184 = and i32 %166, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %185 = or i32 %184, 768 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %191 = xor i32 %190, %166 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_39
state: LEGUP_F_BF_encrypt_BB__0_39
   %170 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %169 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %171 = load i32* %170, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   %175 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %174 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %176 = load i32* %175, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   %181 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %180 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %186 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %185 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_40
state: LEGUP_F_BF_encrypt_BB__0_40
   %182 = load i32* %181, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %187 = load i32* %186, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_41
state: LEGUP_F_BF_encrypt_BB__0_41
   %177 = add i32 %176, %171 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_42
state: LEGUP_F_BF_encrypt_BB__0_42
   %183 = xor i32 %177, %182 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %188 = add i32 %183, %187 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %189 = xor i32 %168, %188 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %192 = lshr i32 %189, 24 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %195 = lshr i32 %189, 16 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %196 = and i32 %195, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %197 = or i32 %196, 256 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %201 = lshr i32 %189, 8 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %202 = and i32 %201, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %203 = or i32 %202, 512 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %207 = and i32 %189, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %208 = or i32 %207, 768 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %214 = xor i32 %213, %189 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_43
state: LEGUP_F_BF_encrypt_BB__0_43
   %193 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %192 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %194 = load i32* %193, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   %198 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %197 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %199 = load i32* %198, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   %204 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %203 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %209 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %208 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_44
state: LEGUP_F_BF_encrypt_BB__0_44
   %205 = load i32* %204, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %210 = load i32* %209, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_45
state: LEGUP_F_BF_encrypt_BB__0_45
   %200 = add i32 %199, %194 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_46
state: LEGUP_F_BF_encrypt_BB__0_46
   %206 = xor i32 %200, %205 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %211 = add i32 %206, %210 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %212 = xor i32 %191, %211 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %215 = lshr i32 %212, 24 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %218 = lshr i32 %212, 16 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %219 = and i32 %218, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %220 = or i32 %219, 256 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %224 = lshr i32 %212, 8 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %225 = and i32 %224, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %226 = or i32 %225, 512 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %230 = and i32 %212, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %231 = or i32 %230, 768 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %237 = xor i32 %236, %212 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_47
state: LEGUP_F_BF_encrypt_BB__0_47
   %216 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %215 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %217 = load i32* %216, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   %221 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %220 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %222 = load i32* %221, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   %227 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %226 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %232 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %231 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_48
state: LEGUP_F_BF_encrypt_BB__0_48
   %228 = load i32* %227, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %233 = load i32* %232, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_49
state: LEGUP_F_BF_encrypt_BB__0_49
   %223 = add i32 %222, %217 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_50
state: LEGUP_F_BF_encrypt_BB__0_50
   %229 = xor i32 %223, %228 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %234 = add i32 %229, %233 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %235 = xor i32 %214, %234 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %238 = lshr i32 %235, 24 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %241 = lshr i32 %235, 16 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %242 = and i32 %241, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %243 = or i32 %242, 256 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %247 = lshr i32 %235, 8 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %248 = and i32 %247, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %249 = or i32 %248, 512 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %253 = and i32 %235, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %254 = or i32 %253, 768 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %260 = xor i32 %259, %235 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_51
state: LEGUP_F_BF_encrypt_BB__0_51
   %239 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %238 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %240 = load i32* %239, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   %244 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %243 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %245 = load i32* %244, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   %250 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %249 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %255 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %254 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_52
state: LEGUP_F_BF_encrypt_BB__0_52
   %251 = load i32* %250, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %256 = load i32* %255, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_53
state: LEGUP_F_BF_encrypt_BB__0_53
   %246 = add i32 %245, %240 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_54
state: LEGUP_F_BF_encrypt_BB__0_54
   %252 = xor i32 %246, %251 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %257 = add i32 %252, %256 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %258 = xor i32 %237, %257 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %261 = lshr i32 %258, 24 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %264 = lshr i32 %258, 16 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %265 = and i32 %264, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %266 = or i32 %265, 256 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %270 = lshr i32 %258, 8 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %271 = and i32 %270, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %272 = or i32 %271, 512 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %276 = and i32 %258, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %277 = or i32 %276, 768 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %283 = xor i32 %282, %258 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_55
state: LEGUP_F_BF_encrypt_BB__0_55
   %262 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %261 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %263 = load i32* %262, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   %267 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %266 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %268 = load i32* %267, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   %273 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %272 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %278 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %277 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_56
state: LEGUP_F_BF_encrypt_BB__0_56
   %274 = load i32* %273, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %279 = load i32* %278, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_57
state: LEGUP_F_BF_encrypt_BB__0_57
   %269 = add i32 %268, %263 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_58
state: LEGUP_F_BF_encrypt_BB__0_58
   %275 = xor i32 %269, %274 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %280 = add i32 %275, %279 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %281 = xor i32 %260, %280 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %284 = lshr i32 %281, 24 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %287 = lshr i32 %281, 16 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %288 = and i32 %287, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %289 = or i32 %288, 256 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %293 = lshr i32 %281, 8 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %294 = and i32 %293, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %295 = or i32 %294, 512 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %299 = and i32 %281, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %300 = or i32 %299, 768 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %306 = xor i32 %305, %281 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_59
state: LEGUP_F_BF_encrypt_BB__0_59
   %285 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %284 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %286 = load i32* %285, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   %290 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %289 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %291 = load i32* %290, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   %296 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %295 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %301 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %300 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_60
state: LEGUP_F_BF_encrypt_BB__0_60
   %297 = load i32* %296, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %302 = load i32* %301, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_61
state: LEGUP_F_BF_encrypt_BB__0_61
   %292 = add i32 %291, %286 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_62
state: LEGUP_F_BF_encrypt_BB__0_62
   %298 = xor i32 %292, %297 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %303 = add i32 %298, %302 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %304 = xor i32 %283, %303 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %307 = lshr i32 %304, 24 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %310 = lshr i32 %304, 16 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %311 = and i32 %310, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %312 = or i32 %311, 256 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %316 = lshr i32 %304, 8 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %317 = and i32 %316, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %318 = or i32 %317, 512 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %322 = and i32 %304, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %323 = or i32 %322, 768 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %329 = xor i32 %328, %304 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_63
state: LEGUP_F_BF_encrypt_BB__0_63
   %308 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %307 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %309 = load i32* %308, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   %313 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %312 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %314 = load i32* %313, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   %319 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %318 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %324 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %323 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_64
state: LEGUP_F_BF_encrypt_BB__0_64
   %320 = load i32* %319, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %325 = load i32* %324, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_65
state: LEGUP_F_BF_encrypt_BB__0_65
   %315 = add i32 %314, %309 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_66
state: LEGUP_F_BF_encrypt_BB__0_66
   %321 = xor i32 %315, %320 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %326 = add i32 %321, %325 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %327 = xor i32 %306, %326 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %330 = lshr i32 %327, 24 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %333 = lshr i32 %327, 16 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %334 = and i32 %333, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %335 = or i32 %334, 256 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %339 = lshr i32 %327, 8 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %340 = and i32 %339, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %341 = or i32 %340, 512 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %345 = and i32 %327, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %346 = or i32 %345, 768 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %352 = xor i32 %351, %327 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_67
state: LEGUP_F_BF_encrypt_BB__0_67
   %331 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %330 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %332 = load i32* %331, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   %336 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %335 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %337 = load i32* %336, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   %342 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %341 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %347 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %346 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_68
state: LEGUP_F_BF_encrypt_BB__0_68
   %343 = load i32* %342, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %348 = load i32* %347, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_69
state: LEGUP_F_BF_encrypt_BB__0_69
   %338 = add i32 %337, %332 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_70
state: LEGUP_F_BF_encrypt_BB__0_70
   %344 = xor i32 %338, %343 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %349 = add i32 %344, %348 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %350 = xor i32 %329, %349 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %353 = lshr i32 %350, 24 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %356 = lshr i32 %350, 16 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %357 = and i32 %356, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %358 = or i32 %357, 256 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %362 = lshr i32 %350, 8 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %363 = and i32 %362, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %364 = or i32 %363, 512 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %368 = and i32 %350, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %369 = or i32 %368, 768 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %375 = xor i32 %374, %350 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_71
state: LEGUP_F_BF_encrypt_BB__0_71
   %354 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %353 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %355 = load i32* %354, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   %359 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %358 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %360 = load i32* %359, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   %365 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %364 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %370 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %369 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_72
state: LEGUP_F_BF_encrypt_BB__0_72
   %366 = load i32* %365, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %371 = load i32* %370, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_73
state: LEGUP_F_BF_encrypt_BB__0_73
   %361 = add i32 %360, %355 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_74
state: LEGUP_F_BF_encrypt_BB__0_74
   %367 = xor i32 %361, %366 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %372 = add i32 %367, %371 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %373 = xor i32 %352, %372 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   store i32 %373, i32* %2, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_75)
   store i32 %375, i32* %data, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_75)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_75
state: LEGUP_F_BF_encrypt_BB__0_75
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 75
End Function: BF_encrypt
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   %in.i.i = alloca [2 x i32], align 4 (endState: LEGUP_F_main_BB__0_1)
   %ukey.i = alloca [8 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   %indata.i = alloca [40 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   %outdata.i = alloca [40 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   %ivec.i = alloca [8 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB__1_2
   %i.015.i = phi i32 [ 0, %0 ], [ %2, %1 ] (endState: LEGUP_F_main_BB__1_2)
   %scevgep33 = getelementptr [8 x i8]* %ivec.i, i32 0, i32 %i.015.i (endState: LEGUP_F_main_BB__1_2)
   %scevgep34 = getelementptr [8 x i8]* %ukey.i, i32 0, i32 %i.015.i (endState: LEGUP_F_main_BB__1_2)
   store i8 0, i8* %scevgep34, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__1_3)
   store i8 0, i8* %scevgep33, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__1_3)
   %2 = add nsw i32 %i.015.i, 1 (endState: LEGUP_F_main_BB__1_2)
   %exitcond32 = icmp eq i32 %2, 8 (endState: LEGUP_F_main_BB__1_2)
   Transition: default: LEGUP_F_main_BB__1_3
state: LEGUP_F_main_BB__1_3
   br i1 %exitcond32, label %3, label %1
   Transition: if (%exitcond32): LEGUP_F_main_BB__3_4 default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB__3_4
   br label %.lr.ph.i.i.i
   Transition: default: LEGUP_F_main_BB_lrphiii_5
state: LEGUP_F_main_BB_lrphiii_5
   %indvar27 = phi i32 [ %indvar.next28, %.lr.ph.i.i.i ], [ 0, %3 ] (endState: LEGUP_F_main_BB_lrphiii_5)
   %p2.03.i.i.i = getelementptr [18 x i32]* @bf_init_P, i32 0, i32 %indvar27 (endState: LEGUP_F_main_BB_lrphiii_5)
   %p1.02.i.i.i = getelementptr [18 x i32]* @key_P, i32 0, i32 %indvar27 (endState: LEGUP_F_main_BB_lrphiii_5)
   %4 = load i32* %p2.03.i.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphiii_6)
   %indvar.next28 = add i32 %indvar27, 1 (endState: LEGUP_F_main_BB_lrphiii_5)
   %exitcond29 = icmp eq i32 %indvar.next28, 18 (endState: LEGUP_F_main_BB_lrphiii_5)
   Transition: default: LEGUP_F_main_BB_lrphiii_6
state: LEGUP_F_main_BB_lrphiii_6
   store i32 %4, i32* %p1.02.i.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphiii_7)
   Transition: default: LEGUP_F_main_BB_lrphiii_7
state: LEGUP_F_main_BB_lrphiii_7
   br i1 %exitcond29, label %.lr.ph.i5.i.i.preheader, label %.lr.ph.i.i.i
   Transition: if (%exitcond29): LEGUP_F_main_BB_lrphi5iipreheader_8 default: LEGUP_F_main_BB_lrphiii_5
state: LEGUP_F_main_BB_lrphi5iipreheader_8
   br label %.lr.ph.i5.i.i
   Transition: default: LEGUP_F_main_BB_lrphi5ii_9
state: LEGUP_F_main_BB_lrphi5ii_9
   %indvar22 = phi i32 [ %indvar.next23, %.lr.ph.i5.i.i ], [ 0, %.lr.ph.i5.i.i.preheader ] (endState: LEGUP_F_main_BB_lrphi5ii_9)
   %p2.03.i2.i.i = getelementptr [1024 x i32]* @bf_init_S, i32 0, i32 %indvar22 (endState: LEGUP_F_main_BB_lrphi5ii_9)
   %p1.02.i3.i.i = getelementptr [1024 x i32]* @key_S, i32 0, i32 %indvar22 (endState: LEGUP_F_main_BB_lrphi5ii_9)
   %5 = load i32* %p2.03.i2.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphi5ii_10)
   %indvar.next23 = add i32 %indvar22, 1 (endState: LEGUP_F_main_BB_lrphi5ii_9)
   %exitcond24 = icmp eq i32 %indvar.next23, 1024 (endState: LEGUP_F_main_BB_lrphi5ii_9)
   Transition: default: LEGUP_F_main_BB_lrphi5ii_10
state: LEGUP_F_main_BB_lrphi5ii_10
   store i32 %5, i32* %p1.02.i3.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphi5ii_11)
   Transition: default: LEGUP_F_main_BB_lrphi5ii_11
state: LEGUP_F_main_BB_lrphi5ii_11
   br i1 %exitcond24, label %memcpy.exit6.i.i, label %.lr.ph.i5.i.i
   Transition: if (%exitcond24): LEGUP_F_main_BB_memcpyexit6ii_12 default: LEGUP_F_main_BB_lrphi5ii_9
state: LEGUP_F_main_BB_memcpyexit6ii_12
   %6 = getelementptr inbounds [8 x i8]* %ukey.i, i32 0, i32 0 (endState: LEGUP_F_main_BB_memcpyexit6ii_12)
   %7 = getelementptr inbounds [8 x i8]* %ukey.i, i32 0, i32 8 (endState: LEGUP_F_main_BB_memcpyexit6ii_12)
   br label %8
   Transition: default: LEGUP_F_main_BB__8_13
state: LEGUP_F_main_BB__8_13
   %d.010.i.i = phi i8* [ %6, %memcpy.exit6.i.i ], [ %d.4.i.i, %8 ] (endState: LEGUP_F_main_BB__8_13)
   %i.09.i.i = phi i32 [ 0, %memcpy.exit6.i.i ], [ %33, %8 ] (endState: LEGUP_F_main_BB__8_13)
   %scevgep21 = getelementptr [18 x i32]* @key_P, i32 0, i32 %i.09.i.i (endState: LEGUP_F_main_BB__8_13)
   %9 = getelementptr inbounds i8* %d.010.i.i, i32 1 (endState: LEGUP_F_main_BB__8_13)
   %10 = load i8* %d.010.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__8_14)
   %12 = icmp ult i8* %9, %7 (endState: LEGUP_F_main_BB__8_13)
   %31 = load i32* %scevgep21, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__8_15)
   %33 = add nsw i32 %i.09.i.i, 1 (endState: LEGUP_F_main_BB__8_13)
   %exitcond20 = icmp eq i32 %33, 18 (endState: LEGUP_F_main_BB__8_13)
   Transition: default: LEGUP_F_main_BB__8_14
state: LEGUP_F_main_BB__8_14
   %11 = zext i8 %10 to i32 (endState: LEGUP_F_main_BB__8_14)
   %.data.i.i = select i1 %12, i8* %9, i8* %6 (endState: LEGUP_F_main_BB__8_14)
   %13 = shl nuw nsw i32 %11, 8 (endState: LEGUP_F_main_BB__8_14)
   %14 = getelementptr inbounds i8* %.data.i.i, i32 1 (endState: LEGUP_F_main_BB__8_14)
   %15 = load i8* %.data.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__8_15)
   Transition: default: LEGUP_F_main_BB__8_15
state: LEGUP_F_main_BB__8_15
   %16 = zext i8 %15 to i32 (endState: LEGUP_F_main_BB__8_15)
   %17 = or i32 %13, %16 (endState: LEGUP_F_main_BB__8_15)
   %18 = icmp ult i8* %14, %7 (endState: LEGUP_F_main_BB__8_15)
   %19 = shl nuw nsw i32 %17, 8 (endState: LEGUP_F_main_BB__8_15)
   Transition: default: LEGUP_F_main_BB__8_16
state: LEGUP_F_main_BB__8_16
   %d.2.i.i = select i1 %18, i8* %14, i8* %6 (endState: LEGUP_F_main_BB__8_16)
   %20 = getelementptr inbounds i8* %d.2.i.i, i32 1 (endState: LEGUP_F_main_BB__8_16)
   %21 = load i8* %d.2.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__8_17)
   Transition: default: LEGUP_F_main_BB__8_17
state: LEGUP_F_main_BB__8_17
   %22 = zext i8 %21 to i32 (endState: LEGUP_F_main_BB__8_17)
   %23 = or i32 %19, %22 (endState: LEGUP_F_main_BB__8_17)
   %24 = icmp ult i8* %20, %7 (endState: LEGUP_F_main_BB__8_17)
   %25 = shl nuw i32 %23, 8 (endState: LEGUP_F_main_BB__8_17)
   Transition: default: LEGUP_F_main_BB__8_18
state: LEGUP_F_main_BB__8_18
   %.data1.i.i = select i1 %24, i8* %20, i8* %6 (endState: LEGUP_F_main_BB__8_18)
   %26 = getelementptr inbounds i8* %.data1.i.i, i32 1 (endState: LEGUP_F_main_BB__8_18)
   %27 = load i8* %.data1.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__8_19)
   Transition: default: LEGUP_F_main_BB__8_19
state: LEGUP_F_main_BB__8_19
   %28 = zext i8 %27 to i32 (endState: LEGUP_F_main_BB__8_19)
   %29 = or i32 %25, %28 (endState: LEGUP_F_main_BB__8_19)
   %30 = icmp ult i8* %26, %7 (endState: LEGUP_F_main_BB__8_19)
   %32 = xor i32 %29, %31 (endState: LEGUP_F_main_BB__8_19)
   store i32 %32, i32* %scevgep21, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__8_20)
   Transition: default: LEGUP_F_main_BB__8_20
state: LEGUP_F_main_BB__8_20
   %d.4.i.i = select i1 %30, i8* %26, i8* %6 (endState: LEGUP_F_main_BB__8_20)
   br i1 %exitcond20, label %34, label %8
   Transition: if (%exitcond20): LEGUP_F_main_BB__34_21 default: LEGUP_F_main_BB__8_13
state: LEGUP_F_main_BB__34_21
   %35 = getelementptr inbounds [2 x i32]* %in.i.i, i32 0, i32 0 (endState: LEGUP_F_main_BB__34_21)
   store i32 0, i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__34_22)
   %36 = getelementptr inbounds [2 x i32]* %in.i.i, i32 0, i32 1 (endState: LEGUP_F_main_BB__34_21)
   store i32 0, i32* %36, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__34_22)
   Transition: default: LEGUP_F_main_BB__34_22
state: LEGUP_F_main_BB__34_22
   br label %37
   Transition: default: LEGUP_F_main_BB__37_23
state: LEGUP_F_main_BB__37_23
   %indvar15 = phi i32 [ %indvar.next16, %37 ], [ 0, %34 ] (endState: LEGUP_F_main_BB__37_23)
   %38 = shl i32 %indvar15, 1 (endState: LEGUP_F_main_BB__37_23)
   %39 = or i32 %38, 1 (endState: LEGUP_F_main_BB__37_23)
   %scevgep18 = getelementptr [18 x i32]* @key_P, i32 0, i32 %39 (endState: LEGUP_F_main_BB__37_23)
   %scevgep19 = getelementptr [18 x i32]* @key_P, i32 0, i32 %38 (endState: LEGUP_F_main_BB__37_23)
   %indvar.next16 = add i32 %indvar15, 1 (endState: LEGUP_F_main_BB__37_23)
   %exitcond17 = icmp eq i32 %indvar.next16, 9 (endState: LEGUP_F_main_BB__37_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   call fastcc void @BF_encrypt(i32* %35) #1 (endState: LEGUP_function_call_24)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB__37_25 default: LEGUP_function_call_24
state: LEGUP_F_main_BB__37_25
   %40 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__37_27)
   %41 = load i32* %36, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__37_27)
   Transition: default: LEGUP_F_main_BB__37_26
state: LEGUP_F_main_BB__37_26
   Transition: default: LEGUP_F_main_BB__37_27
state: LEGUP_F_main_BB__37_27
   store i32 %40, i32* %scevgep19, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__37_28)
   store i32 %41, i32* %scevgep18, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__37_28)
   Transition: default: LEGUP_F_main_BB__37_28
state: LEGUP_F_main_BB__37_28
   br i1 %exitcond17, label %.preheader.i.i.preheader, label %37
   Transition: if (%exitcond17): LEGUP_F_main_BB_preheaderiipreheader_29 default: LEGUP_F_main_BB__37_23
state: LEGUP_F_main_BB_preheaderiipreheader_29
   br label %.preheader.i.i
   Transition: default: LEGUP_F_main_BB_preheaderii_30
state: LEGUP_F_main_BB_preheaderii_30
   %indvar10 = phi i32 [ 0, %.preheader.i.i.preheader ], [ %indvar.next11, %.preheader.i.i ] (endState: LEGUP_F_main_BB_preheaderii_30)
   %42 = shl i32 %indvar10, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %43 = or i32 %42, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %scevgep13 = getelementptr [1024 x i32]* @key_S, i32 0, i32 %43 (endState: LEGUP_F_main_BB_preheaderii_30)
   %scevgep14 = getelementptr [1024 x i32]* @key_S, i32 0, i32 %42 (endState: LEGUP_F_main_BB_preheaderii_30)
   %indvar.next11 = add i32 %indvar10, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %exitcond12 = icmp eq i32 %indvar.next11, 512 (endState: LEGUP_F_main_BB_preheaderii_30)
   Transition: default: LEGUP_function_call_31
state: LEGUP_function_call_31
   call fastcc void @BF_encrypt(i32* %35) #1 (endState: LEGUP_function_call_31)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB_preheaderii_32 default: LEGUP_function_call_31
state: LEGUP_F_main_BB_preheaderii_32
   %44 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_34)
   %45 = load i32* %36, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_34)
   Transition: default: LEGUP_F_main_BB_preheaderii_33
state: LEGUP_F_main_BB_preheaderii_33
   Transition: default: LEGUP_F_main_BB_preheaderii_34
state: LEGUP_F_main_BB_preheaderii_34
   store i32 %44, i32* %scevgep14, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_35)
   store i32 %45, i32* %scevgep13, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_35)
   Transition: default: LEGUP_F_main_BB_preheaderii_35
state: LEGUP_F_main_BB_preheaderii_35
   br i1 %exitcond12, label %BF_set_key.exit.i, label %.preheader.i.i
   Transition: if (%exitcond12): LEGUP_F_main_BB_BF_set_keyexiti_36 default: LEGUP_F_main_BB_preheaderii_30
state: LEGUP_F_main_BB_BF_set_keyexiti_36
   %46 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 0 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %47 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 1 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %48 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 2 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %49 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 3 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %50 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 4 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %51 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 5 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %52 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 6 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %53 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 7 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   br label %.preheader.i
   Transition: default: LEGUP_F_main_BB_preheaderi_39
state: LEGUP_F_main_BB_loopexit_crit_edgei_37
   %54 = sub i32 %l.013.i, %umax.i (endState: LEGUP_F_main_BB_loopexit_crit_edgei_37)
   br label %.loopexit.i
   Transition: default: LEGUP_F_main_BB_loopexiti_38
state: LEGUP_F_main_BB_loopexiti_38
   %num.i.0 = phi i32 [ %123, %..loopexit_crit_edge.i ], [ %123, %BF_cfb64_encrypt.exit.i ], [ %num.i.1, %.critedge.i ] (endState: LEGUP_F_main_BB_loopexiti_38)
   %check.1.lcssa.i = phi i32 [ %133, %..loopexit_crit_edge.i ], [ %check.014.i, %BF_cfb64_encrypt.exit.i ], [ %check.014.i, %.critedge.i ] (endState: LEGUP_F_main_BB_loopexiti_38)
   %l.1.lcssa.i = phi i32 [ %54, %..loopexit_crit_edge.i ], [ %l.013.i, %BF_cfb64_encrypt.exit.i ], [ %l.013.i, %.critedge.i ] (endState: LEGUP_F_main_BB_loopexiti_38)
   %55 = icmp slt i32 %66, 5200 (endState: LEGUP_F_main_BB_loopexiti_38)
   br i1 %55, label %.preheader.i, label %blowfish_main.exit
   Transition: if (%55): LEGUP_F_main_BB_preheaderi_39 default: LEGUP_F_main_BB_blowfish_mainexit_70
state: LEGUP_F_main_BB_preheaderi_39
   %num.i.1 = phi i32 [ 0, %BF_set_key.exit.i ], [ %num.i.0, %.loopexit.i ] (endState: LEGUP_F_main_BB_preheaderi_39)
   %check.014.i = phi i32 [ 0, %BF_set_key.exit.i ], [ %check.1.lcssa.i, %.loopexit.i ] (endState: LEGUP_F_main_BB_preheaderi_39)
   %l.013.i = phi i32 [ 0, %BF_set_key.exit.i ], [ %l.1.lcssa.i, %.loopexit.i ] (endState: LEGUP_F_main_BB_preheaderi_39)
   %k.012.i = phi i32 [ 0, %BF_set_key.exit.i ], [ %66, %.loopexit.i ] (endState: LEGUP_F_main_BB_preheaderi_39)
   %56 = icmp slt i32 %k.012.i, 5200 (endState: LEGUP_F_main_BB_preheaderi_39)
   br i1 %56, label %.lr.ph.i, label %blowfish_main.exit
   Transition: if (%56): LEGUP_F_main_BB_lrphi_40 default: LEGUP_F_main_BB_blowfish_mainexit_70
state: LEGUP_F_main_BB_lrphi_40
   %57 = add i32 %k.012.i, -5200 (endState: LEGUP_F_main_BB_lrphi_40)
   %58 = icmp ugt i32 %57, -40 (endState: LEGUP_F_main_BB_lrphi_40)
   %umax.i = select i1 %58, i32 %57, i32 -40 (endState: LEGUP_F_main_BB_lrphi_40)
   %59 = icmp ugt i32 %57, -40 (endState: LEGUP_F_main_BB_lrphi_40)
   %.op = sub i32 5200, %k.012.i (endState: LEGUP_F_main_BB_lrphi_40)
   %60 = select i1 %59, i32 %.op, i32 40 (endState: LEGUP_F_main_BB_lrphi_40)
   br label %61
   Transition: default: LEGUP_F_main_BB__61_41
state: LEGUP_F_main_BB__61_41
   %i.24.i = phi i32 [ 0, %.lr.ph.i ], [ %64, %61 ] (endState: LEGUP_F_main_BB__61_41)
   %scevgep = getelementptr [40 x i8]* %indata.i, i32 0, i32 %i.24.i (endState: LEGUP_F_main_BB__61_41)
   %62 = add i32 %k.012.i, %i.24.i (endState: LEGUP_F_main_BB__61_41)
   %64 = add nsw i32 %i.24.i, 1 (endState: LEGUP_F_main_BB__61_41)
   %exitcond = icmp eq i32 %64, %60 (endState: LEGUP_F_main_BB__61_41)
   Transition: default: LEGUP_F_main_BB__61_42
state: LEGUP_F_main_BB__61_42
   %scevgep1 = getelementptr [5200 x i8]* @in_key, i32 0, i32 %62 (endState: LEGUP_F_main_BB__61_42)
   %63 = load i8* %scevgep1, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__61_43)
   Transition: default: LEGUP_F_main_BB__61_43
state: LEGUP_F_main_BB__61_43
   store i8 %63, i8* %scevgep, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__61_44)
   Transition: default: LEGUP_F_main_BB__61_44
state: LEGUP_F_main_BB__61_44
   br i1 %exitcond, label %.critedge.i, label %61
   Transition: if (%exitcond): LEGUP_F_main_BB_critedgei_45 default: LEGUP_F_main_BB__61_41
state: LEGUP_F_main_BB_critedgei_45
   %65 = sub i32 0, %umax.i (endState: LEGUP_F_main_BB_critedgei_45)
   %66 = sub i32 %k.012.i, %umax.i (endState: LEGUP_F_main_BB_critedgei_45)
   %67 = icmp eq i32 %umax.i, 0 (endState: LEGUP_F_main_BB_critedgei_45)
   br i1 %67, label %.loopexit.i, label %.lr.ph11.i.i.preheader
   Transition: if (%67): LEGUP_F_main_BB_loopexiti_38 default: LEGUP_F_main_BB_lrph11iipreheader_46
state: LEGUP_F_main_BB_lrph11iipreheader_46
   %68 = add i32 %k.012.i, -5200 (endState: LEGUP_F_main_BB_lrph11iipreheader_46)
   %69 = icmp ugt i32 %68, -40 (endState: LEGUP_F_main_BB_lrph11iipreheader_46)
   %.op1 = sub i32 5200, %k.012.i (endState: LEGUP_F_main_BB_lrph11iipreheader_46)
   %70 = select i1 %69, i32 %.op1, i32 40 (endState: LEGUP_F_main_BB_lrph11iipreheader_46)
   br label %.lr.ph11.i.i
   Transition: default: LEGUP_F_main_BB_lrph11ii_47
state: LEGUP_F_main_BB_lrph11ii_47
   %indvar = phi i32 [ 0, %.lr.ph11.i.i.preheader ], [ %indvar.next, %117 ] (endState: LEGUP_F_main_BB_lrph11ii_47)
   %n.010.i.i = phi i32 [ %num.i.1, %.lr.ph11.i.i.preheader ], [ %123, %117 ] (endState: LEGUP_F_main_BB_lrph11ii_47)
   %.09.i.i = getelementptr [40 x i8]* %indata.i, i32 0, i32 %indvar (endState: LEGUP_F_main_BB_lrph11ii_47)
   %.018.i.i = getelementptr [40 x i8]* %outdata.i, i32 0, i32 %indvar (endState: LEGUP_F_main_BB_lrph11ii_47)
   %71 = icmp eq i32 %n.010.i.i, 0 (endState: LEGUP_F_main_BB_lrph11ii_47)
   br i1 %71, label %72, label %117
   Transition: if (%71): LEGUP_F_main_BB__72_48 default: LEGUP_F_main_BB__117_62
state: LEGUP_F_main_BB__72_48
   %73 = load i8* %46, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_49)
   %76 = load i8* %47, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_49)
   Transition: default: LEGUP_F_main_BB__72_49
state: LEGUP_F_main_BB__72_49
   %74 = zext i8 %73 to i32 (endState: LEGUP_F_main_BB__72_49)
   %75 = shl nuw i32 %74, 24 (endState: LEGUP_F_main_BB__72_49)
   %77 = zext i8 %76 to i32 (endState: LEGUP_F_main_BB__72_49)
   %78 = shl nuw nsw i32 %77, 16 (endState: LEGUP_F_main_BB__72_49)
   %79 = or i32 %78, %75 (endState: LEGUP_F_main_BB__72_49)
   %80 = load i8* %48, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_50)
   %84 = load i8* %49, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_50)
   Transition: default: LEGUP_F_main_BB__72_50
state: LEGUP_F_main_BB__72_50
   %81 = zext i8 %80 to i32 (endState: LEGUP_F_main_BB__72_50)
   %82 = shl nuw nsw i32 %81, 8 (endState: LEGUP_F_main_BB__72_50)
   %83 = or i32 %79, %82 (endState: LEGUP_F_main_BB__72_50)
   %85 = zext i8 %84 to i32 (endState: LEGUP_F_main_BB__72_50)
   %86 = or i32 %83, %85 (endState: LEGUP_F_main_BB__72_50)
   store i32 %86, i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__72_51)
   %87 = load i8* %50, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_51)
   %90 = load i8* %51, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_51)
   Transition: default: LEGUP_F_main_BB__72_51
state: LEGUP_F_main_BB__72_51
   %88 = zext i8 %87 to i32 (endState: LEGUP_F_main_BB__72_51)
   %89 = shl nuw i32 %88, 24 (endState: LEGUP_F_main_BB__72_51)
   %91 = zext i8 %90 to i32 (endState: LEGUP_F_main_BB__72_51)
   %92 = shl nuw nsw i32 %91, 16 (endState: LEGUP_F_main_BB__72_51)
   %93 = or i32 %92, %89 (endState: LEGUP_F_main_BB__72_51)
   %94 = load i8* %52, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_52)
   %98 = load i8* %53, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_52)
   Transition: default: LEGUP_F_main_BB__72_52
state: LEGUP_F_main_BB__72_52
   %95 = zext i8 %94 to i32 (endState: LEGUP_F_main_BB__72_52)
   %96 = shl nuw nsw i32 %95, 8 (endState: LEGUP_F_main_BB__72_52)
   %97 = or i32 %93, %96 (endState: LEGUP_F_main_BB__72_52)
   %99 = zext i8 %98 to i32 (endState: LEGUP_F_main_BB__72_52)
   %100 = or i32 %97, %99 (endState: LEGUP_F_main_BB__72_52)
   store i32 %100, i32* %36, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__72_53)
   Transition: default: LEGUP_F_main_BB__72_53
state: LEGUP_F_main_BB__72_53
   Transition: default: LEGUP_function_call_54
state: LEGUP_function_call_54
   call fastcc void @BF_encrypt(i32* %35) #1 (endState: LEGUP_function_call_54)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB__72_55 default: LEGUP_function_call_54
state: LEGUP_F_main_BB__72_55
   %101 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__72_57)
   %109 = load i32* %36, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__72_57)
   Transition: default: LEGUP_F_main_BB__72_56
state: LEGUP_F_main_BB__72_56
   Transition: default: LEGUP_F_main_BB__72_57
state: LEGUP_F_main_BB__72_57
   %102 = lshr i32 %101, 24 (endState: LEGUP_F_main_BB__72_57)
   %103 = trunc i32 %102 to i8 (endState: LEGUP_F_main_BB__72_57)
   store i8 %103, i8* %46, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_58)
   %104 = lshr i32 %101, 16 (endState: LEGUP_F_main_BB__72_57)
   %105 = trunc i32 %104 to i8 (endState: LEGUP_F_main_BB__72_57)
   store i8 %105, i8* %47, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_58)
   %106 = lshr i32 %101, 8 (endState: LEGUP_F_main_BB__72_57)
   %107 = trunc i32 %106 to i8 (endState: LEGUP_F_main_BB__72_57)
   %108 = trunc i32 %101 to i8 (endState: LEGUP_F_main_BB__72_57)
   %110 = lshr i32 %109, 24 (endState: LEGUP_F_main_BB__72_57)
   %111 = trunc i32 %110 to i8 (endState: LEGUP_F_main_BB__72_57)
   %112 = lshr i32 %109, 16 (endState: LEGUP_F_main_BB__72_57)
   %113 = trunc i32 %112 to i8 (endState: LEGUP_F_main_BB__72_57)
   %114 = lshr i32 %109, 8 (endState: LEGUP_F_main_BB__72_57)
   %115 = trunc i32 %114 to i8 (endState: LEGUP_F_main_BB__72_57)
   %116 = trunc i32 %109 to i8 (endState: LEGUP_F_main_BB__72_57)
   Transition: default: LEGUP_F_main_BB__72_58
state: LEGUP_F_main_BB__72_58
   store i8 %107, i8* %48, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_59)
   store i8 %108, i8* %49, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_59)
   Transition: default: LEGUP_F_main_BB__72_59
state: LEGUP_F_main_BB__72_59
   store i8 %111, i8* %50, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_60)
   store i8 %113, i8* %51, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_60)
   Transition: default: LEGUP_F_main_BB__72_60
state: LEGUP_F_main_BB__72_60
   store i8 %115, i8* %52, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_61)
   store i8 %116, i8* %53, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__72_61)
   Transition: default: LEGUP_F_main_BB__72_61
state: LEGUP_F_main_BB__72_61
   br label %117
   Transition: default: LEGUP_F_main_BB__117_62
state: LEGUP_F_main_BB__117_62
   %118 = load i8* %.09.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__117_63)
   %119 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 %n.010.i.i (endState: LEGUP_F_main_BB__117_62)
   %120 = load i8* %119, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__117_63)
   %122 = add nsw i32 %n.010.i.i, 1 (endState: LEGUP_F_main_BB__117_62)
   %123 = and i32 %122, 7 (endState: LEGUP_F_main_BB__117_62)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_main_BB__117_62)
   %exitcond3 = icmp eq i32 %indvar.next, %70 (endState: LEGUP_F_main_BB__117_62)
   Transition: default: LEGUP_F_main_BB__117_63
state: LEGUP_F_main_BB__117_63
   %121 = xor i8 %120, %118 (endState: LEGUP_F_main_BB__117_63)
   store i8 %121, i8* %.018.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__117_64)
   store i8 %121, i8* %119, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__117_64)
   Transition: default: LEGUP_F_main_BB__117_64
state: LEGUP_F_main_BB__117_64
   br i1 %exitcond3, label %BF_cfb64_encrypt.exit.i, label %.lr.ph11.i.i
   Transition: if (%exitcond3): LEGUP_F_main_BB_BF_cfb64_encryptexiti_65 default: LEGUP_F_main_BB_lrph11ii_47
state: LEGUP_F_main_BB_BF_cfb64_encryptexiti_65
   %124 = icmp sgt i32 %65, 0 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_65)
   br i1 %124, label %.lr.ph9.i.preheader, label %.loopexit.i
   Transition: if (%124): LEGUP_F_main_BB_lrph9ipreheader_66 default: LEGUP_F_main_BB_loopexiti_38
state: LEGUP_F_main_BB_lrph9ipreheader_66
   %125 = add i32 %k.012.i, -5200 (endState: LEGUP_F_main_BB_lrph9ipreheader_66)
   %126 = icmp ugt i32 %125, -40 (endState: LEGUP_F_main_BB_lrph9ipreheader_66)
   %.op2 = sub i32 5200, %k.012.i (endState: LEGUP_F_main_BB_lrph9ipreheader_66)
   %127 = select i1 %126, i32 %.op2, i32 40 (endState: LEGUP_F_main_BB_lrph9ipreheader_66)
   br label %.lr.ph9.i
   Transition: default: LEGUP_F_main_BB_lrph9i_67
state: LEGUP_F_main_BB_lrph9i_67
   %check.18.i = phi i32 [ %133, %.lr.ph9.i ], [ %check.014.i, %.lr.ph9.i.preheader ] (endState: LEGUP_F_main_BB_lrph9i_67)
   %j.07.i = phi i32 [ %134, %.lr.ph9.i ], [ 0, %.lr.ph9.i.preheader ] (endState: LEGUP_F_main_BB_lrph9i_67)
   %scevgep8 = getelementptr [40 x i8]* %outdata.i, i32 0, i32 %j.07.i (endState: LEGUP_F_main_BB_lrph9i_67)
   %128 = add i32 %l.013.i, %j.07.i (endState: LEGUP_F_main_BB_lrph9i_67)
   %129 = load i8* %scevgep8, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_lrph9i_68)
   %134 = add nsw i32 %j.07.i, 1 (endState: LEGUP_F_main_BB_lrph9i_67)
   %exitcond7 = icmp eq i32 %134, %127 (endState: LEGUP_F_main_BB_lrph9i_67)
   Transition: default: LEGUP_F_main_BB_lrph9i_68
state: LEGUP_F_main_BB_lrph9i_68
   %scevgep9 = getelementptr [5200 x i8]* @out_key, i32 0, i32 %128 (endState: LEGUP_F_main_BB_lrph9i_68)
   %130 = load i8* %scevgep9, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_lrph9i_69)
   Transition: default: LEGUP_F_main_BB_lrph9i_69
state: LEGUP_F_main_BB_lrph9i_69
   %131 = icmp eq i8 %129, %130 (endState: LEGUP_F_main_BB_lrph9i_69)
   %132 = zext i1 %131 to i32 (endState: LEGUP_F_main_BB_lrph9i_69)
   %133 = add nsw i32 %132, %check.18.i (endState: LEGUP_F_main_BB_lrph9i_69)
   br i1 %exitcond7, label %..loopexit_crit_edge.i, label %.lr.ph9.i
   Transition: if (%exitcond7): LEGUP_F_main_BB_loopexit_crit_edgei_37 default: LEGUP_F_main_BB_lrph9i_67
state: LEGUP_F_main_BB_blowfish_mainexit_70
   %check.1.lcssa22.i = phi i32 [ %check.014.i, %.preheader.i ], [ %check.1.lcssa.i, %.loopexit.i ] (endState: LEGUP_F_main_BB_blowfish_mainexit_70)
   %135 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32 %check.1.lcssa22.i) #1 (endState: LEGUP_F_main_BB_blowfish_mainexit_70)
   %136 = icmp eq i32 %check.1.lcssa22.i, 5200 (endState: LEGUP_F_main_BB_blowfish_mainexit_70)
   br i1 %136, label %137, label %139
   Transition: if (%136): LEGUP_F_main_BB__137_71 default: LEGUP_F_main_BB__139_72
state: LEGUP_F_main_BB__137_71
   %138 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__137_71)
   br label %141
   Transition: default: LEGUP_F_main_BB__141_73
state: LEGUP_F_main_BB__139_72
   %140 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__139_72)
   br label %141
   Transition: default: LEGUP_F_main_BB__141_73
state: LEGUP_F_main_BB__141_73
   ret i32 %check.1.lcssa22.i
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %3 Num States: 1
Basic Block: %.lr.ph.i.i.i Num States: 3
Basic Block: %.lr.ph.i5.i.i.preheader Num States: 1
Basic Block: %.lr.ph.i5.i.i Num States: 3
Basic Block: %memcpy.exit6.i.i Num States: 1
Basic Block: %8 Num States: 8
Basic Block: %34 Num States: 2
Basic Block: %37 Num States: 6
Basic Block: %.preheader.i.i.preheader Num States: 1
Basic Block: %.preheader.i.i Num States: 6
Basic Block: %BF_set_key.exit.i Num States: 1
Basic Block: %..loopexit_crit_edge.i Num States: 1
Basic Block: %.loopexit.i Num States: 1
Basic Block: %.preheader.i Num States: 1
Basic Block: %.lr.ph.i Num States: 1
Basic Block: %61 Num States: 4
Basic Block: %.critedge.i Num States: 1
Basic Block: %.lr.ph11.i.i.preheader Num States: 1
Basic Block: %.lr.ph11.i.i Num States: 1
Basic Block: %72 Num States: 14
Basic Block: %117 Num States: 3
Basic Block: %BF_cfb64_encrypt.exit.i Num States: 1
Basic Block: %.lr.ph9.i.preheader Num States: 1
Basic Block: %.lr.ph9.i Num States: 3
Basic Block: %blowfish_main.exit Num States: 1
Basic Block: %137 Num States: 1
Basic Block: %139 Num States: 1
Basic Block: %141 Num States: 1
End Function: main
--------------------------------------------------------------------------------


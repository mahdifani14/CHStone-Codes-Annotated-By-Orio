//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jun 19 18:41:14 2016
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sat Apr 22 12:02:16 2017
//----------------------------------------------------------------------------//

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: BF_encrypt
state: LEGUP_0
   Transition: if (start): LEGUP_F_BF_encrypt_BB__0_1 default: LEGUP_0
state: LEGUP_F_BF_encrypt_BB__0_1
   %1 = load i32* %data, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %2 = getelementptr inbounds i32* %data, i32 1 (endState: LEGUP_F_BF_encrypt_BB__0_1)
   %4 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 0), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_2
state: LEGUP_F_BF_encrypt_BB__0_2
   %6 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 1), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %29 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 2), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_3
state: LEGUP_F_BF_encrypt_BB__0_3
   %5 = xor i32 %4, %1 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %8 = lshr i32 %5, 24 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %11 = lshr i32 %5, 16 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %12 = and i32 %11, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %13 = or i32 %12, 256 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %17 = lshr i32 %5, 8 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %18 = and i32 %17, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %19 = or i32 %18, 512 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %23 = and i32 %5, 255 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %24 = or i32 %23, 768 (endState: LEGUP_F_BF_encrypt_BB__0_3)
   %52 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 3), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_5)
   %75 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 4), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_5)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_4
state: LEGUP_F_BF_encrypt_BB__0_4
   %9 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %8 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %14 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %13 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %20 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %19 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %25 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %24 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %30 = xor i32 %29, %5 (endState: LEGUP_F_BF_encrypt_BB__0_4)
   %98 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 5), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_6)
   %121 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 6), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_6)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_5
state: LEGUP_F_BF_encrypt_BB__0_5
   %144 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 7), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_7)
   %167 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 8), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_7)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_6
state: LEGUP_F_BF_encrypt_BB__0_6
   %190 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 9), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_8)
   %213 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 10), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_8)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_7
state: LEGUP_F_BF_encrypt_BB__0_7
   %236 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 11), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_9)
   %259 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 12), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_9)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_8
state: LEGUP_F_BF_encrypt_BB__0_8
   %282 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 13), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_10)
   %305 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 14), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_10)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_9
state: LEGUP_F_BF_encrypt_BB__0_9
   %328 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 15), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_11)
   %351 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 16), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_11)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_10
state: LEGUP_F_BF_encrypt_BB__0_10
   %3 = load i32* %2, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   %374 = load i32* getelementptr inbounds ([18 x i32]* @key_P, i32 0, i32 17), align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_11
state: LEGUP_F_BF_encrypt_BB__0_11
   %10 = load i32* %9, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   %15 = load i32* %14, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_12
state: LEGUP_F_BF_encrypt_BB__0_12
   %7 = xor i32 %6, %3 (endState: LEGUP_F_BF_encrypt_BB__0_12)
   %21 = load i32* %20, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %26 = load i32* %25, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_13
state: LEGUP_F_BF_encrypt_BB__0_13
   %16 = add i32 %15, %10 (endState: LEGUP_F_BF_encrypt_BB__0_13)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_14
state: LEGUP_F_BF_encrypt_BB__0_14
   %22 = xor i32 %16, %21 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %27 = add i32 %22, %26 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %28 = xor i32 %7, %27 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %31 = lshr i32 %28, 24 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %34 = lshr i32 %28, 16 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %35 = and i32 %34, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %36 = or i32 %35, 256 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %40 = lshr i32 %28, 8 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %41 = and i32 %40, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %42 = or i32 %41, 512 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %46 = and i32 %28, 255 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %47 = or i32 %46, 768 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   %53 = xor i32 %52, %28 (endState: LEGUP_F_BF_encrypt_BB__0_14)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_15
state: LEGUP_F_BF_encrypt_BB__0_15
   %32 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %31 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %33 = load i32* %32, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   %37 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %36 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %38 = load i32* %37, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   %43 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %42 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   %48 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %47 (endState: LEGUP_F_BF_encrypt_BB__0_15)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_16
state: LEGUP_F_BF_encrypt_BB__0_16
   %44 = load i32* %43, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %49 = load i32* %48, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_17
state: LEGUP_F_BF_encrypt_BB__0_17
   %39 = add i32 %38, %33 (endState: LEGUP_F_BF_encrypt_BB__0_17)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_18
state: LEGUP_F_BF_encrypt_BB__0_18
   %45 = xor i32 %39, %44 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %50 = add i32 %45, %49 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %51 = xor i32 %30, %50 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %54 = lshr i32 %51, 24 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %57 = lshr i32 %51, 16 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %58 = and i32 %57, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %59 = or i32 %58, 256 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %63 = lshr i32 %51, 8 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %64 = and i32 %63, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %65 = or i32 %64, 512 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %69 = and i32 %51, 255 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %70 = or i32 %69, 768 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   %76 = xor i32 %75, %51 (endState: LEGUP_F_BF_encrypt_BB__0_18)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_19
state: LEGUP_F_BF_encrypt_BB__0_19
   %55 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %54 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %56 = load i32* %55, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   %60 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %59 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %61 = load i32* %60, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   %66 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %65 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   %71 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %70 (endState: LEGUP_F_BF_encrypt_BB__0_19)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_20
state: LEGUP_F_BF_encrypt_BB__0_20
   %67 = load i32* %66, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %72 = load i32* %71, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_21
state: LEGUP_F_BF_encrypt_BB__0_21
   %62 = add i32 %61, %56 (endState: LEGUP_F_BF_encrypt_BB__0_21)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_22
state: LEGUP_F_BF_encrypt_BB__0_22
   %68 = xor i32 %62, %67 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %73 = add i32 %68, %72 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %74 = xor i32 %53, %73 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %77 = lshr i32 %74, 24 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %80 = lshr i32 %74, 16 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %81 = and i32 %80, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %82 = or i32 %81, 256 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %86 = lshr i32 %74, 8 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %87 = and i32 %86, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %88 = or i32 %87, 512 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %92 = and i32 %74, 255 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %93 = or i32 %92, 768 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   %99 = xor i32 %98, %74 (endState: LEGUP_F_BF_encrypt_BB__0_22)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_23
state: LEGUP_F_BF_encrypt_BB__0_23
   %78 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %77 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %79 = load i32* %78, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   %83 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %82 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %84 = load i32* %83, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   %89 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %88 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   %94 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %93 (endState: LEGUP_F_BF_encrypt_BB__0_23)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_24
state: LEGUP_F_BF_encrypt_BB__0_24
   %90 = load i32* %89, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %95 = load i32* %94, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_25
state: LEGUP_F_BF_encrypt_BB__0_25
   %85 = add i32 %84, %79 (endState: LEGUP_F_BF_encrypt_BB__0_25)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_26
state: LEGUP_F_BF_encrypt_BB__0_26
   %91 = xor i32 %85, %90 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %96 = add i32 %91, %95 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %97 = xor i32 %76, %96 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %100 = lshr i32 %97, 24 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %103 = lshr i32 %97, 16 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %104 = and i32 %103, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %105 = or i32 %104, 256 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %109 = lshr i32 %97, 8 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %110 = and i32 %109, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %111 = or i32 %110, 512 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %115 = and i32 %97, 255 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %116 = or i32 %115, 768 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   %122 = xor i32 %121, %97 (endState: LEGUP_F_BF_encrypt_BB__0_26)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_27
state: LEGUP_F_BF_encrypt_BB__0_27
   %101 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %100 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %102 = load i32* %101, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   %106 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %105 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %107 = load i32* %106, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   %112 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %111 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   %117 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %116 (endState: LEGUP_F_BF_encrypt_BB__0_27)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_28
state: LEGUP_F_BF_encrypt_BB__0_28
   %113 = load i32* %112, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %118 = load i32* %117, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_29
state: LEGUP_F_BF_encrypt_BB__0_29
   %108 = add i32 %107, %102 (endState: LEGUP_F_BF_encrypt_BB__0_29)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_30
state: LEGUP_F_BF_encrypt_BB__0_30
   %114 = xor i32 %108, %113 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %119 = add i32 %114, %118 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %120 = xor i32 %99, %119 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %123 = lshr i32 %120, 24 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %126 = lshr i32 %120, 16 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %127 = and i32 %126, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %128 = or i32 %127, 256 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %132 = lshr i32 %120, 8 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %133 = and i32 %132, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %134 = or i32 %133, 512 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %138 = and i32 %120, 255 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %139 = or i32 %138, 768 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   %145 = xor i32 %144, %120 (endState: LEGUP_F_BF_encrypt_BB__0_30)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_31
state: LEGUP_F_BF_encrypt_BB__0_31
   %124 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %123 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %125 = load i32* %124, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   %129 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %128 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %130 = load i32* %129, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   %135 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %134 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   %140 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %139 (endState: LEGUP_F_BF_encrypt_BB__0_31)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_32
state: LEGUP_F_BF_encrypt_BB__0_32
   %136 = load i32* %135, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %141 = load i32* %140, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_33
state: LEGUP_F_BF_encrypt_BB__0_33
   %131 = add i32 %130, %125 (endState: LEGUP_F_BF_encrypt_BB__0_33)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_34
state: LEGUP_F_BF_encrypt_BB__0_34
   %137 = xor i32 %131, %136 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %142 = add i32 %137, %141 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %143 = xor i32 %122, %142 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %146 = lshr i32 %143, 24 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %149 = lshr i32 %143, 16 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %150 = and i32 %149, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %151 = or i32 %150, 256 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %155 = lshr i32 %143, 8 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %156 = and i32 %155, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %157 = or i32 %156, 512 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %161 = and i32 %143, 255 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %162 = or i32 %161, 768 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   %168 = xor i32 %167, %143 (endState: LEGUP_F_BF_encrypt_BB__0_34)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_35
state: LEGUP_F_BF_encrypt_BB__0_35
   %147 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %146 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %148 = load i32* %147, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   %152 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %151 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %153 = load i32* %152, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   %158 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %157 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   %163 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %162 (endState: LEGUP_F_BF_encrypt_BB__0_35)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_36
state: LEGUP_F_BF_encrypt_BB__0_36
   %159 = load i32* %158, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %164 = load i32* %163, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_37
state: LEGUP_F_BF_encrypt_BB__0_37
   %154 = add i32 %153, %148 (endState: LEGUP_F_BF_encrypt_BB__0_37)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_38
state: LEGUP_F_BF_encrypt_BB__0_38
   %160 = xor i32 %154, %159 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %165 = add i32 %160, %164 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %166 = xor i32 %145, %165 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %169 = lshr i32 %166, 24 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %172 = lshr i32 %166, 16 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %173 = and i32 %172, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %174 = or i32 %173, 256 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %178 = lshr i32 %166, 8 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %179 = and i32 %178, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %180 = or i32 %179, 512 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %184 = and i32 %166, 255 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %185 = or i32 %184, 768 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   %191 = xor i32 %190, %166 (endState: LEGUP_F_BF_encrypt_BB__0_38)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_39
state: LEGUP_F_BF_encrypt_BB__0_39
   %170 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %169 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %171 = load i32* %170, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   %175 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %174 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %176 = load i32* %175, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   %181 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %180 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   %186 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %185 (endState: LEGUP_F_BF_encrypt_BB__0_39)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_40
state: LEGUP_F_BF_encrypt_BB__0_40
   %182 = load i32* %181, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %187 = load i32* %186, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_41
state: LEGUP_F_BF_encrypt_BB__0_41
   %177 = add i32 %176, %171 (endState: LEGUP_F_BF_encrypt_BB__0_41)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_42
state: LEGUP_F_BF_encrypt_BB__0_42
   %183 = xor i32 %177, %182 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %188 = add i32 %183, %187 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %189 = xor i32 %168, %188 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %192 = lshr i32 %189, 24 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %195 = lshr i32 %189, 16 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %196 = and i32 %195, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %197 = or i32 %196, 256 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %201 = lshr i32 %189, 8 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %202 = and i32 %201, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %203 = or i32 %202, 512 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %207 = and i32 %189, 255 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %208 = or i32 %207, 768 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   %214 = xor i32 %213, %189 (endState: LEGUP_F_BF_encrypt_BB__0_42)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_43
state: LEGUP_F_BF_encrypt_BB__0_43
   %193 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %192 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %194 = load i32* %193, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   %198 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %197 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %199 = load i32* %198, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   %204 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %203 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   %209 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %208 (endState: LEGUP_F_BF_encrypt_BB__0_43)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_44
state: LEGUP_F_BF_encrypt_BB__0_44
   %205 = load i32* %204, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %210 = load i32* %209, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_45
state: LEGUP_F_BF_encrypt_BB__0_45
   %200 = add i32 %199, %194 (endState: LEGUP_F_BF_encrypt_BB__0_45)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_46
state: LEGUP_F_BF_encrypt_BB__0_46
   %206 = xor i32 %200, %205 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %211 = add i32 %206, %210 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %212 = xor i32 %191, %211 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %215 = lshr i32 %212, 24 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %218 = lshr i32 %212, 16 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %219 = and i32 %218, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %220 = or i32 %219, 256 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %224 = lshr i32 %212, 8 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %225 = and i32 %224, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %226 = or i32 %225, 512 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %230 = and i32 %212, 255 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %231 = or i32 %230, 768 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   %237 = xor i32 %236, %212 (endState: LEGUP_F_BF_encrypt_BB__0_46)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_47
state: LEGUP_F_BF_encrypt_BB__0_47
   %216 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %215 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %217 = load i32* %216, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   %221 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %220 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %222 = load i32* %221, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   %227 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %226 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   %232 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %231 (endState: LEGUP_F_BF_encrypt_BB__0_47)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_48
state: LEGUP_F_BF_encrypt_BB__0_48
   %228 = load i32* %227, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %233 = load i32* %232, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_49
state: LEGUP_F_BF_encrypt_BB__0_49
   %223 = add i32 %222, %217 (endState: LEGUP_F_BF_encrypt_BB__0_49)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_50
state: LEGUP_F_BF_encrypt_BB__0_50
   %229 = xor i32 %223, %228 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %234 = add i32 %229, %233 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %235 = xor i32 %214, %234 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %238 = lshr i32 %235, 24 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %241 = lshr i32 %235, 16 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %242 = and i32 %241, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %243 = or i32 %242, 256 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %247 = lshr i32 %235, 8 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %248 = and i32 %247, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %249 = or i32 %248, 512 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %253 = and i32 %235, 255 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %254 = or i32 %253, 768 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   %260 = xor i32 %259, %235 (endState: LEGUP_F_BF_encrypt_BB__0_50)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_51
state: LEGUP_F_BF_encrypt_BB__0_51
   %239 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %238 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %240 = load i32* %239, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   %244 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %243 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %245 = load i32* %244, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   %250 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %249 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   %255 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %254 (endState: LEGUP_F_BF_encrypt_BB__0_51)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_52
state: LEGUP_F_BF_encrypt_BB__0_52
   %251 = load i32* %250, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %256 = load i32* %255, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_53
state: LEGUP_F_BF_encrypt_BB__0_53
   %246 = add i32 %245, %240 (endState: LEGUP_F_BF_encrypt_BB__0_53)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_54
state: LEGUP_F_BF_encrypt_BB__0_54
   %252 = xor i32 %246, %251 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %257 = add i32 %252, %256 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %258 = xor i32 %237, %257 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %261 = lshr i32 %258, 24 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %264 = lshr i32 %258, 16 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %265 = and i32 %264, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %266 = or i32 %265, 256 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %270 = lshr i32 %258, 8 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %271 = and i32 %270, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %272 = or i32 %271, 512 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %276 = and i32 %258, 255 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %277 = or i32 %276, 768 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   %283 = xor i32 %282, %258 (endState: LEGUP_F_BF_encrypt_BB__0_54)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_55
state: LEGUP_F_BF_encrypt_BB__0_55
   %262 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %261 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %263 = load i32* %262, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   %267 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %266 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %268 = load i32* %267, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   %273 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %272 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   %278 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %277 (endState: LEGUP_F_BF_encrypt_BB__0_55)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_56
state: LEGUP_F_BF_encrypt_BB__0_56
   %274 = load i32* %273, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %279 = load i32* %278, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_57
state: LEGUP_F_BF_encrypt_BB__0_57
   %269 = add i32 %268, %263 (endState: LEGUP_F_BF_encrypt_BB__0_57)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_58
state: LEGUP_F_BF_encrypt_BB__0_58
   %275 = xor i32 %269, %274 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %280 = add i32 %275, %279 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %281 = xor i32 %260, %280 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %284 = lshr i32 %281, 24 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %287 = lshr i32 %281, 16 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %288 = and i32 %287, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %289 = or i32 %288, 256 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %293 = lshr i32 %281, 8 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %294 = and i32 %293, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %295 = or i32 %294, 512 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %299 = and i32 %281, 255 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %300 = or i32 %299, 768 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   %306 = xor i32 %305, %281 (endState: LEGUP_F_BF_encrypt_BB__0_58)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_59
state: LEGUP_F_BF_encrypt_BB__0_59
   %285 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %284 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %286 = load i32* %285, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   %290 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %289 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %291 = load i32* %290, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   %296 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %295 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   %301 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %300 (endState: LEGUP_F_BF_encrypt_BB__0_59)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_60
state: LEGUP_F_BF_encrypt_BB__0_60
   %297 = load i32* %296, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %302 = load i32* %301, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_61
state: LEGUP_F_BF_encrypt_BB__0_61
   %292 = add i32 %291, %286 (endState: LEGUP_F_BF_encrypt_BB__0_61)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_62
state: LEGUP_F_BF_encrypt_BB__0_62
   %298 = xor i32 %292, %297 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %303 = add i32 %298, %302 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %304 = xor i32 %283, %303 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %307 = lshr i32 %304, 24 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %310 = lshr i32 %304, 16 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %311 = and i32 %310, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %312 = or i32 %311, 256 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %316 = lshr i32 %304, 8 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %317 = and i32 %316, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %318 = or i32 %317, 512 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %322 = and i32 %304, 255 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %323 = or i32 %322, 768 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   %329 = xor i32 %328, %304 (endState: LEGUP_F_BF_encrypt_BB__0_62)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_63
state: LEGUP_F_BF_encrypt_BB__0_63
   %308 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %307 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %309 = load i32* %308, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   %313 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %312 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %314 = load i32* %313, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   %319 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %318 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   %324 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %323 (endState: LEGUP_F_BF_encrypt_BB__0_63)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_64
state: LEGUP_F_BF_encrypt_BB__0_64
   %320 = load i32* %319, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %325 = load i32* %324, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_65
state: LEGUP_F_BF_encrypt_BB__0_65
   %315 = add i32 %314, %309 (endState: LEGUP_F_BF_encrypt_BB__0_65)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_66
state: LEGUP_F_BF_encrypt_BB__0_66
   %321 = xor i32 %315, %320 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %326 = add i32 %321, %325 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %327 = xor i32 %306, %326 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %330 = lshr i32 %327, 24 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %333 = lshr i32 %327, 16 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %334 = and i32 %333, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %335 = or i32 %334, 256 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %339 = lshr i32 %327, 8 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %340 = and i32 %339, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %341 = or i32 %340, 512 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %345 = and i32 %327, 255 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %346 = or i32 %345, 768 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   %352 = xor i32 %351, %327 (endState: LEGUP_F_BF_encrypt_BB__0_66)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_67
state: LEGUP_F_BF_encrypt_BB__0_67
   %331 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %330 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %332 = load i32* %331, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   %336 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %335 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %337 = load i32* %336, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   %342 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %341 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   %347 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %346 (endState: LEGUP_F_BF_encrypt_BB__0_67)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_68
state: LEGUP_F_BF_encrypt_BB__0_68
   %343 = load i32* %342, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %348 = load i32* %347, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_69
state: LEGUP_F_BF_encrypt_BB__0_69
   %338 = add i32 %337, %332 (endState: LEGUP_F_BF_encrypt_BB__0_69)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_70
state: LEGUP_F_BF_encrypt_BB__0_70
   %344 = xor i32 %338, %343 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %349 = add i32 %344, %348 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %350 = xor i32 %329, %349 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %353 = lshr i32 %350, 24 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %356 = lshr i32 %350, 16 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %357 = and i32 %356, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %358 = or i32 %357, 256 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %362 = lshr i32 %350, 8 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %363 = and i32 %362, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %364 = or i32 %363, 512 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %368 = and i32 %350, 255 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %369 = or i32 %368, 768 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   %375 = xor i32 %374, %350 (endState: LEGUP_F_BF_encrypt_BB__0_70)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_71
state: LEGUP_F_BF_encrypt_BB__0_71
   %354 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %353 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %355 = load i32* %354, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   %359 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %358 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %360 = load i32* %359, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   %365 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %364 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   %370 = getelementptr inbounds [1024 x i32]* @key_S, i32 0, i32 %369 (endState: LEGUP_F_BF_encrypt_BB__0_71)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_72
state: LEGUP_F_BF_encrypt_BB__0_72
   %366 = load i32* %365, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %371 = load i32* %370, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_73
state: LEGUP_F_BF_encrypt_BB__0_73
   %361 = add i32 %360, %355 (endState: LEGUP_F_BF_encrypt_BB__0_73)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_74
state: LEGUP_F_BF_encrypt_BB__0_74
   %367 = xor i32 %361, %366 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %372 = add i32 %367, %371 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   %373 = xor i32 %352, %372 (endState: LEGUP_F_BF_encrypt_BB__0_74)
   store i32 %373, i32* %2, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_75)
   store i32 %375, i32* %data, align 4, !tbaa !1 (endState: LEGUP_F_BF_encrypt_BB__0_75)
   Transition: default: LEGUP_F_BF_encrypt_BB__0_75
state: LEGUP_F_BF_encrypt_BB__0_75
   ret void
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 75
End Function: BF_encrypt
--------------------------------------------------------------------------------

Target Family: CycloneV
Clock period constraint: 2.000000e+01ns
Start Function: main
state: LEGUP_0
   Transition: if (start): LEGUP_F_main_BB__0_1 default: LEGUP_0
state: LEGUP_F_main_BB__0_1
   %in.i.i = alloca [2 x i32], align 4 (endState: LEGUP_F_main_BB__0_1)
   %ukey.i = alloca [8 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   %ivec.i = alloca [8 x i8], align 1 (endState: LEGUP_F_main_BB__0_1)
   br label %1
   Transition: default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB__1_2
   %i.07.i = phi i32 [ 0, %0 ], [ %2, %1 ] (endState: LEGUP_F_main_BB__1_2)
   %scevgep23 = getelementptr [8 x i8]* %ivec.i, i32 0, i32 %i.07.i (endState: LEGUP_F_main_BB__1_2)
   %scevgep24 = getelementptr [8 x i8]* %ukey.i, i32 0, i32 %i.07.i (endState: LEGUP_F_main_BB__1_2)
   store i8 0, i8* %scevgep24, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__1_3)
   store i8 0, i8* %scevgep23, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__1_3)
   %2 = add nsw i32 %i.07.i, 1 (endState: LEGUP_F_main_BB__1_2)
   %exitcond22 = icmp eq i32 %2, 8 (endState: LEGUP_F_main_BB__1_2)
   Transition: default: LEGUP_F_main_BB__1_3
state: LEGUP_F_main_BB__1_3
   br i1 %exitcond22, label %.lr.ph.i.i.i.preheader, label %1
   Transition: if (%exitcond22): LEGUP_F_main_BB_lrphiiipreheader_4 default: LEGUP_F_main_BB__1_2
state: LEGUP_F_main_BB_lrphiiipreheader_4
   br label %.lr.ph.i.i.i
   Transition: default: LEGUP_F_main_BB_lrphiii_5
state: LEGUP_F_main_BB_lrphiii_5
   %indvar17 = phi i32 [ 0, %.lr.ph.i.i.i.preheader ], [ %indvar.next18, %.lr.ph.i.i.i ] (endState: LEGUP_F_main_BB_lrphiii_5)
   %p2.03.i.i.i = getelementptr [18 x i32]* @bf_init_P, i32 0, i32 %indvar17 (endState: LEGUP_F_main_BB_lrphiii_5)
   %p1.02.i.i.i = getelementptr [18 x i32]* @key_P, i32 0, i32 %indvar17 (endState: LEGUP_F_main_BB_lrphiii_5)
   %3 = load i32* %p2.03.i.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphiii_6)
   %indvar.next18 = add i32 %indvar17, 1 (endState: LEGUP_F_main_BB_lrphiii_5)
   %exitcond19 = icmp eq i32 %indvar.next18, 18 (endState: LEGUP_F_main_BB_lrphiii_5)
   Transition: default: LEGUP_F_main_BB_lrphiii_6
state: LEGUP_F_main_BB_lrphiii_6
   store i32 %3, i32* %p1.02.i.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphiii_7)
   Transition: default: LEGUP_F_main_BB_lrphiii_7
state: LEGUP_F_main_BB_lrphiii_7
   br i1 %exitcond19, label %.lr.ph.i4.i.i.preheader, label %.lr.ph.i.i.i
   Transition: if (%exitcond19): LEGUP_F_main_BB_lrphi4iipreheader_8 default: LEGUP_F_main_BB_lrphiii_5
state: LEGUP_F_main_BB_lrphi4iipreheader_8
   br label %.lr.ph.i4.i.i
   Transition: default: LEGUP_F_main_BB_lrphi4ii_9
state: LEGUP_F_main_BB_lrphi4ii_9
   %indvar12 = phi i32 [ 0, %.lr.ph.i4.i.i.preheader ], [ %indvar.next13, %.lr.ph.i4.i.i ] (endState: LEGUP_F_main_BB_lrphi4ii_9)
   %p2.03.i1.i.i = getelementptr [1024 x i32]* @bf_init_S, i32 0, i32 %indvar12 (endState: LEGUP_F_main_BB_lrphi4ii_9)
   %p1.02.i2.i.i = getelementptr [1024 x i32]* @key_S, i32 0, i32 %indvar12 (endState: LEGUP_F_main_BB_lrphi4ii_9)
   %4 = load i32* %p2.03.i1.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphi4ii_10)
   %indvar.next13 = add i32 %indvar12, 1 (endState: LEGUP_F_main_BB_lrphi4ii_9)
   %exitcond14 = icmp eq i32 %indvar.next13, 1024 (endState: LEGUP_F_main_BB_lrphi4ii_9)
   Transition: default: LEGUP_F_main_BB_lrphi4ii_10
state: LEGUP_F_main_BB_lrphi4ii_10
   store i32 %4, i32* %p1.02.i2.i.i, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_lrphi4ii_11)
   Transition: default: LEGUP_F_main_BB_lrphi4ii_11
state: LEGUP_F_main_BB_lrphi4ii_11
   br i1 %exitcond14, label %memcpy.exit5.i.i, label %.lr.ph.i4.i.i
   Transition: if (%exitcond14): LEGUP_F_main_BB_memcpyexit5ii_12 default: LEGUP_F_main_BB_lrphi4ii_9
state: LEGUP_F_main_BB_memcpyexit5ii_12
   %5 = getelementptr inbounds [8 x i8]* %ukey.i, i32 0, i32 0 (endState: LEGUP_F_main_BB_memcpyexit5ii_12)
   %6 = getelementptr inbounds [8 x i8]* %ukey.i, i32 0, i32 8 (endState: LEGUP_F_main_BB_memcpyexit5ii_12)
   br label %7
   Transition: default: LEGUP_F_main_BB__7_13
state: LEGUP_F_main_BB__7_13
   %d.05.i.i = phi i8* [ %5, %memcpy.exit5.i.i ], [ %d.4.i.i, %7 ] (endState: LEGUP_F_main_BB__7_13)
   %i.04.i.i = phi i32 [ 0, %memcpy.exit5.i.i ], [ %32, %7 ] (endState: LEGUP_F_main_BB__7_13)
   %scevgep11 = getelementptr [18 x i32]* @key_P, i32 0, i32 %i.04.i.i (endState: LEGUP_F_main_BB__7_13)
   %8 = getelementptr inbounds i8* %d.05.i.i, i32 1 (endState: LEGUP_F_main_BB__7_13)
   %9 = load i8* %d.05.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__7_14)
   %11 = icmp ult i8* %8, %6 (endState: LEGUP_F_main_BB__7_13)
   %30 = load i32* %scevgep11, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__7_15)
   %32 = add nsw i32 %i.04.i.i, 1 (endState: LEGUP_F_main_BB__7_13)
   %exitcond10 = icmp eq i32 %32, 18 (endState: LEGUP_F_main_BB__7_13)
   Transition: default: LEGUP_F_main_BB__7_14
state: LEGUP_F_main_BB__7_14
   %10 = zext i8 %9 to i32 (endState: LEGUP_F_main_BB__7_14)
   %.data.i.i = select i1 %11, i8* %8, i8* %5 (endState: LEGUP_F_main_BB__7_14)
   %12 = shl nuw nsw i32 %10, 8 (endState: LEGUP_F_main_BB__7_14)
   %13 = getelementptr inbounds i8* %.data.i.i, i32 1 (endState: LEGUP_F_main_BB__7_14)
   %14 = load i8* %.data.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__7_15)
   Transition: default: LEGUP_F_main_BB__7_15
state: LEGUP_F_main_BB__7_15
   %15 = zext i8 %14 to i32 (endState: LEGUP_F_main_BB__7_15)
   %16 = or i32 %12, %15 (endState: LEGUP_F_main_BB__7_15)
   %17 = icmp ult i8* %13, %6 (endState: LEGUP_F_main_BB__7_15)
   %18 = shl nuw nsw i32 %16, 8 (endState: LEGUP_F_main_BB__7_15)
   Transition: default: LEGUP_F_main_BB__7_16
state: LEGUP_F_main_BB__7_16
   %d.2.i.i = select i1 %17, i8* %13, i8* %5 (endState: LEGUP_F_main_BB__7_16)
   %19 = getelementptr inbounds i8* %d.2.i.i, i32 1 (endState: LEGUP_F_main_BB__7_16)
   %20 = load i8* %d.2.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__7_17)
   Transition: default: LEGUP_F_main_BB__7_17
state: LEGUP_F_main_BB__7_17
   %21 = zext i8 %20 to i32 (endState: LEGUP_F_main_BB__7_17)
   %22 = or i32 %18, %21 (endState: LEGUP_F_main_BB__7_17)
   %23 = icmp ult i8* %19, %6 (endState: LEGUP_F_main_BB__7_17)
   %24 = shl nuw i32 %22, 8 (endState: LEGUP_F_main_BB__7_17)
   Transition: default: LEGUP_F_main_BB__7_18
state: LEGUP_F_main_BB__7_18
   %.data1.i.i = select i1 %23, i8* %19, i8* %5 (endState: LEGUP_F_main_BB__7_18)
   %25 = getelementptr inbounds i8* %.data1.i.i, i32 1 (endState: LEGUP_F_main_BB__7_18)
   %26 = load i8* %.data1.i.i, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__7_19)
   Transition: default: LEGUP_F_main_BB__7_19
state: LEGUP_F_main_BB__7_19
   %27 = zext i8 %26 to i32 (endState: LEGUP_F_main_BB__7_19)
   %28 = or i32 %24, %27 (endState: LEGUP_F_main_BB__7_19)
   %29 = icmp ult i8* %25, %6 (endState: LEGUP_F_main_BB__7_19)
   %31 = xor i32 %28, %30 (endState: LEGUP_F_main_BB__7_19)
   store i32 %31, i32* %scevgep11, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__7_20)
   Transition: default: LEGUP_F_main_BB__7_20
state: LEGUP_F_main_BB__7_20
   %d.4.i.i = select i1 %29, i8* %25, i8* %5 (endState: LEGUP_F_main_BB__7_20)
   br i1 %exitcond10, label %33, label %7
   Transition: if (%exitcond10): LEGUP_F_main_BB__33_21 default: LEGUP_F_main_BB__7_13
state: LEGUP_F_main_BB__33_21
   %34 = getelementptr inbounds [2 x i32]* %in.i.i, i32 0, i32 0 (endState: LEGUP_F_main_BB__33_21)
   store i32 0, i32* %34, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__33_22)
   %35 = getelementptr inbounds [2 x i32]* %in.i.i, i32 0, i32 1 (endState: LEGUP_F_main_BB__33_21)
   store i32 0, i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__33_22)
   Transition: default: LEGUP_F_main_BB__33_22
state: LEGUP_F_main_BB__33_22
   br label %36
   Transition: default: LEGUP_F_main_BB__36_23
state: LEGUP_F_main_BB__36_23
   %indvar5 = phi i32 [ %indvar.next6, %36 ], [ 0, %33 ] (endState: LEGUP_F_main_BB__36_23)
   %37 = shl i32 %indvar5, 1 (endState: LEGUP_F_main_BB__36_23)
   %38 = or i32 %37, 1 (endState: LEGUP_F_main_BB__36_23)
   %scevgep8 = getelementptr [18 x i32]* @key_P, i32 0, i32 %38 (endState: LEGUP_F_main_BB__36_23)
   %scevgep9 = getelementptr [18 x i32]* @key_P, i32 0, i32 %37 (endState: LEGUP_F_main_BB__36_23)
   %indvar.next6 = add i32 %indvar5, 1 (endState: LEGUP_F_main_BB__36_23)
   %exitcond7 = icmp eq i32 %indvar.next6, 9 (endState: LEGUP_F_main_BB__36_23)
   Transition: default: LEGUP_function_call_24
state: LEGUP_function_call_24
   call fastcc void @BF_encrypt(i32* %34) #1 (endState: LEGUP_function_call_24)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB__36_25 default: LEGUP_function_call_24
state: LEGUP_F_main_BB__36_25
   %39 = load i32* %34, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__36_27)
   %40 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__36_27)
   Transition: default: LEGUP_F_main_BB__36_26
state: LEGUP_F_main_BB__36_26
   Transition: default: LEGUP_F_main_BB__36_27
state: LEGUP_F_main_BB__36_27
   store i32 %39, i32* %scevgep9, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__36_28)
   store i32 %40, i32* %scevgep8, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__36_28)
   Transition: default: LEGUP_F_main_BB__36_28
state: LEGUP_F_main_BB__36_28
   br i1 %exitcond7, label %.preheader.i.i.preheader, label %36
   Transition: if (%exitcond7): LEGUP_F_main_BB_preheaderiipreheader_29 default: LEGUP_F_main_BB__36_23
state: LEGUP_F_main_BB_preheaderiipreheader_29
   br label %.preheader.i.i
   Transition: default: LEGUP_F_main_BB_preheaderii_30
state: LEGUP_F_main_BB_preheaderii_30
   %indvar = phi i32 [ 0, %.preheader.i.i.preheader ], [ %indvar.next, %.preheader.i.i ] (endState: LEGUP_F_main_BB_preheaderii_30)
   %41 = shl i32 %indvar, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %42 = or i32 %41, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %scevgep3 = getelementptr [1024 x i32]* @key_S, i32 0, i32 %42 (endState: LEGUP_F_main_BB_preheaderii_30)
   %scevgep4 = getelementptr [1024 x i32]* @key_S, i32 0, i32 %41 (endState: LEGUP_F_main_BB_preheaderii_30)
   %indvar.next = add i32 %indvar, 1 (endState: LEGUP_F_main_BB_preheaderii_30)
   %exitcond2 = icmp eq i32 %indvar.next, 512 (endState: LEGUP_F_main_BB_preheaderii_30)
   Transition: default: LEGUP_function_call_31
state: LEGUP_function_call_31
   call fastcc void @BF_encrypt(i32* %34) #1 (endState: LEGUP_function_call_31)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB_preheaderii_32 default: LEGUP_function_call_31
state: LEGUP_F_main_BB_preheaderii_32
   %43 = load i32* %34, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_34)
   %44 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_34)
   Transition: default: LEGUP_F_main_BB_preheaderii_33
state: LEGUP_F_main_BB_preheaderii_33
   Transition: default: LEGUP_F_main_BB_preheaderii_34
state: LEGUP_F_main_BB_preheaderii_34
   store i32 %43, i32* %scevgep4, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_35)
   store i32 %44, i32* %scevgep3, align 4, !tbaa !4 (endState: LEGUP_F_main_BB_preheaderii_35)
   Transition: default: LEGUP_F_main_BB_preheaderii_35
state: LEGUP_F_main_BB_preheaderii_35
   br i1 %exitcond2, label %BF_set_key.exit.i, label %.preheader.i.i
   Transition: if (%exitcond2): LEGUP_F_main_BB_BF_set_keyexiti_36 default: LEGUP_F_main_BB_preheaderii_30
state: LEGUP_F_main_BB_BF_set_keyexiti_36
   %45 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 0 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %46 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 1 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %47 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 2 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %48 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 3 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %49 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 4 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %50 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 5 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %51 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 6 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   %52 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 7 (endState: LEGUP_F_main_BB_BF_set_keyexiti_36)
   br label %.loopexit.i
   Transition: default: LEGUP_F_main_BB_loopexiti_37
state: LEGUP_F_main_BB_loopexiti_37
   %num.i.0 = phi i32 [ 0, %BF_set_key.exit.i ], [ %104, %BF_cfb64_encrypt.exit.i ] (endState: LEGUP_F_main_BB_loopexiti_37)
   %k.06.i = phi i32 [ 0, %BF_set_key.exit.i ], [ %109, %BF_cfb64_encrypt.exit.i ] (endState: LEGUP_F_main_BB_loopexiti_37)
   %check.05.i = phi i32 [ 0, %BF_set_key.exit.i ], [ %108, %BF_cfb64_encrypt.exit.i ] (endState: LEGUP_F_main_BB_loopexiti_37)
   %scevgep = getelementptr [5200 x i8]* @out_key, i32 0, i32 %k.06.i (endState: LEGUP_F_main_BB_loopexiti_37)
   %scevgep1 = getelementptr [5200 x i8]* @in_key, i32 0, i32 %k.06.i (endState: LEGUP_F_main_BB_loopexiti_37)
   %53 = load i8* %scevgep1, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_loopexiti_38)
   %54 = icmp eq i32 %num.i.0, 0 (endState: LEGUP_F_main_BB_loopexiti_37)
   Transition: default: LEGUP_F_main_BB_loopexiti_38
state: LEGUP_F_main_BB_loopexiti_38
   br i1 %54, label %55, label %BF_cfb64_encrypt.exit.i
   Transition: if (%54): LEGUP_F_main_BB__55_39 default: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53
state: LEGUP_F_main_BB__55_39
   %56 = load i8* %45, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_40)
   %59 = load i8* %46, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_40)
   Transition: default: LEGUP_F_main_BB__55_40
state: LEGUP_F_main_BB__55_40
   %57 = zext i8 %56 to i32 (endState: LEGUP_F_main_BB__55_40)
   %58 = shl nuw i32 %57, 24 (endState: LEGUP_F_main_BB__55_40)
   %60 = zext i8 %59 to i32 (endState: LEGUP_F_main_BB__55_40)
   %61 = shl nuw nsw i32 %60, 16 (endState: LEGUP_F_main_BB__55_40)
   %62 = or i32 %61, %58 (endState: LEGUP_F_main_BB__55_40)
   %63 = load i8* %47, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_41)
   %67 = load i8* %48, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_41)
   Transition: default: LEGUP_F_main_BB__55_41
state: LEGUP_F_main_BB__55_41
   %64 = zext i8 %63 to i32 (endState: LEGUP_F_main_BB__55_41)
   %65 = shl nuw nsw i32 %64, 8 (endState: LEGUP_F_main_BB__55_41)
   %66 = or i32 %62, %65 (endState: LEGUP_F_main_BB__55_41)
   %68 = zext i8 %67 to i32 (endState: LEGUP_F_main_BB__55_41)
   %69 = or i32 %66, %68 (endState: LEGUP_F_main_BB__55_41)
   store i32 %69, i32* %34, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__55_42)
   %70 = load i8* %49, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_42)
   %73 = load i8* %50, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_42)
   Transition: default: LEGUP_F_main_BB__55_42
state: LEGUP_F_main_BB__55_42
   %71 = zext i8 %70 to i32 (endState: LEGUP_F_main_BB__55_42)
   %72 = shl nuw i32 %71, 24 (endState: LEGUP_F_main_BB__55_42)
   %74 = zext i8 %73 to i32 (endState: LEGUP_F_main_BB__55_42)
   %75 = shl nuw nsw i32 %74, 16 (endState: LEGUP_F_main_BB__55_42)
   %76 = or i32 %75, %72 (endState: LEGUP_F_main_BB__55_42)
   %77 = load i8* %51, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_43)
   %81 = load i8* %52, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_43)
   Transition: default: LEGUP_F_main_BB__55_43
state: LEGUP_F_main_BB__55_43
   %78 = zext i8 %77 to i32 (endState: LEGUP_F_main_BB__55_43)
   %79 = shl nuw nsw i32 %78, 8 (endState: LEGUP_F_main_BB__55_43)
   %80 = or i32 %76, %79 (endState: LEGUP_F_main_BB__55_43)
   %82 = zext i8 %81 to i32 (endState: LEGUP_F_main_BB__55_43)
   %83 = or i32 %80, %82 (endState: LEGUP_F_main_BB__55_43)
   store i32 %83, i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__55_44)
   Transition: default: LEGUP_F_main_BB__55_44
state: LEGUP_F_main_BB__55_44
   Transition: default: LEGUP_function_call_45
state: LEGUP_function_call_45
   call fastcc void @BF_encrypt(i32* %34) #1 (endState: LEGUP_function_call_45)
   Transition: if (BF_encrypt_finish_final): LEGUP_F_main_BB__55_46 default: LEGUP_function_call_45
state: LEGUP_F_main_BB__55_46
   %84 = load i32* %34, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__55_48)
   %92 = load i32* %35, align 4, !tbaa !4 (endState: LEGUP_F_main_BB__55_48)
   Transition: default: LEGUP_F_main_BB__55_47
state: LEGUP_F_main_BB__55_47
   Transition: default: LEGUP_F_main_BB__55_48
state: LEGUP_F_main_BB__55_48
   %85 = lshr i32 %84, 24 (endState: LEGUP_F_main_BB__55_48)
   %86 = trunc i32 %85 to i8 (endState: LEGUP_F_main_BB__55_48)
   store i8 %86, i8* %45, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_49)
   %87 = lshr i32 %84, 16 (endState: LEGUP_F_main_BB__55_48)
   %88 = trunc i32 %87 to i8 (endState: LEGUP_F_main_BB__55_48)
   store i8 %88, i8* %46, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_49)
   %89 = lshr i32 %84, 8 (endState: LEGUP_F_main_BB__55_48)
   %90 = trunc i32 %89 to i8 (endState: LEGUP_F_main_BB__55_48)
   %91 = trunc i32 %84 to i8 (endState: LEGUP_F_main_BB__55_48)
   %93 = lshr i32 %92, 24 (endState: LEGUP_F_main_BB__55_48)
   %94 = trunc i32 %93 to i8 (endState: LEGUP_F_main_BB__55_48)
   %95 = lshr i32 %92, 16 (endState: LEGUP_F_main_BB__55_48)
   %96 = trunc i32 %95 to i8 (endState: LEGUP_F_main_BB__55_48)
   %97 = lshr i32 %92, 8 (endState: LEGUP_F_main_BB__55_48)
   %98 = trunc i32 %97 to i8 (endState: LEGUP_F_main_BB__55_48)
   %99 = trunc i32 %92 to i8 (endState: LEGUP_F_main_BB__55_48)
   Transition: default: LEGUP_F_main_BB__55_49
state: LEGUP_F_main_BB__55_49
   store i8 %90, i8* %47, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_50)
   store i8 %91, i8* %48, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_50)
   Transition: default: LEGUP_F_main_BB__55_50
state: LEGUP_F_main_BB__55_50
   store i8 %94, i8* %49, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_51)
   store i8 %96, i8* %50, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_51)
   Transition: default: LEGUP_F_main_BB__55_51
state: LEGUP_F_main_BB__55_51
   store i8 %98, i8* %51, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_52)
   store i8 %99, i8* %52, align 1, !tbaa !1 (endState: LEGUP_F_main_BB__55_52)
   Transition: default: LEGUP_F_main_BB__55_52
state: LEGUP_F_main_BB__55_52
   br label %BF_cfb64_encrypt.exit.i
   Transition: default: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53
state: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53
   %100 = getelementptr inbounds [8 x i8]* %ivec.i, i32 0, i32 %num.i.0 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53)
   %101 = load i8* %100, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   %103 = add nuw nsw i32 %num.i.0, 1 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53)
   %104 = and i32 %103, 7 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53)
   %105 = load i8* %scevgep, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   %109 = add nsw i32 %k.06.i, 1 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53)
   %exitcond = icmp eq i32 %109, 5200 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_53)
   Transition: default: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54
state: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54
   %102 = xor i8 %101, %53 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   store i8 %102, i8* %100, align 1, !tbaa !1 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_55)
   %106 = icmp eq i8 %102, %105 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   %107 = zext i1 %106 to i32 (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   %108 = add nsw i32 %107, %check.05.i (endState: LEGUP_F_main_BB_BF_cfb64_encryptexiti_54)
   Transition: default: LEGUP_F_main_BB_BF_cfb64_encryptexiti_55
state: LEGUP_F_main_BB_BF_cfb64_encryptexiti_55
   br i1 %exitcond, label %blowfish_main.exit, label %.loopexit.i
   Transition: if (%exitcond): LEGUP_F_main_BB_blowfish_mainexit_56 default: LEGUP_F_main_BB_loopexiti_37
state: LEGUP_F_main_BB_blowfish_mainexit_56
   %110 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str, i32 0, i32 0), i32 %108) #1 (endState: LEGUP_F_main_BB_blowfish_mainexit_56)
   %111 = icmp eq i32 %108, 5200 (endState: LEGUP_F_main_BB_blowfish_mainexit_56)
   br i1 %111, label %112, label %114
   Transition: if (%111): LEGUP_F_main_BB__112_57 default: LEGUP_F_main_BB__114_58
state: LEGUP_F_main_BB__112_57
   %113 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str1, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__112_57)
   br label %116
   Transition: default: LEGUP_F_main_BB__116_59
state: LEGUP_F_main_BB__114_58
   %115 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str2, i32 0, i32 0)) #1 (endState: LEGUP_F_main_BB__114_58)
   br label %116
   Transition: default: LEGUP_F_main_BB__116_59
state: LEGUP_F_main_BB__116_59
   ret i32 %108
   Transition: default: LEGUP_0

Basic Block: %0 Num States: 1
Basic Block: %1 Num States: 2
Basic Block: %.lr.ph.i.i.i.preheader Num States: 1
Basic Block: %.lr.ph.i.i.i Num States: 3
Basic Block: %.lr.ph.i4.i.i.preheader Num States: 1
Basic Block: %.lr.ph.i4.i.i Num States: 3
Basic Block: %memcpy.exit5.i.i Num States: 1
Basic Block: %7 Num States: 8
Basic Block: %33 Num States: 2
Basic Block: %36 Num States: 6
Basic Block: %.preheader.i.i.preheader Num States: 1
Basic Block: %.preheader.i.i Num States: 6
Basic Block: %BF_set_key.exit.i Num States: 1
Basic Block: %.loopexit.i Num States: 2
Basic Block: %55 Num States: 14
Basic Block: %BF_cfb64_encrypt.exit.i Num States: 3
Basic Block: %blowfish_main.exit Num States: 1
Basic Block: %112 Num States: 1
Basic Block: %114 Num States: 1
Basic Block: %116 Num States: 1
End Function: main
--------------------------------------------------------------------------------

